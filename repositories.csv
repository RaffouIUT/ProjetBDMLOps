Nom du dépôt,Propriétaire,Topics,Date de création,Url,Date du dernier commit,Langage principal,Nombre d'étoiles,Description,README
freeCodeCamp,freeCodeCamp,"['learn-to-code', 'nonprofits', 'programming', 'nodejs', 'react', 'd3', 'careers', 'education', 'teachers', 'javascript', 'certification', 'curriculum', 'math', 'community', 'freecodecamp', 'hacktoberfest']",2014-12-24 17:49:19+00:00,https://github.com/freeCodeCamp/freeCodeCamp,2025-01-12 00:49:31+00:00,TypeScript,408786,freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free.,"freeCodeCamp.org's open-source codebase and curriculum
freeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) charity to help millions of busy adults transition into tech. Our community has already helped more than 40,000 people get their first developer job.
Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.
Table of Contents
Certifications
The Learning Platform
Reporting Bugs and Issues
Reporting Security Issues and Responsible Disclosure
Contributing
Platform, Build and Deployment Status
License
Certifications
freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.
Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.
You can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Replit - or even on your local computer's development environment.
Once you've earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you.
The one exception to this is if we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.
Here are our twelve core certifications:
1. Responsive Web Design Certification
Learn HTML by Building a Cat Photo App
Learn Basic CSS by Building a Cafe Menu
Learn CSS Colors by Building a Set of Colored Markers
Learn HTML Forms by Building a Registration Form
Learn the CSS Box Model by Building a Rothko Painting
Learn CSS Flexbox by Building a Photo Gallery
Learn Typography by Building a Nutrition Label
Learn Accessibility by Building a Quiz
Learn More About CSS Pseudo Selectors by Building A Balance Sheet
Learn Intermediate CSS by Building a Picasso Painting
Learn Responsive Web Design by Building a Piano
Learn CSS Variables by Building a City Skyline
Learn CSS Grid by Building a Magazine
Learn CSS Transforms by Building a Penguin
Learn CSS Animations by Building a Ferris Wheel
Projects: Survey Form, Tribute Page, Technical Documentation Page, Product Landing Page, Personal Portfolio Webpage
2. JavaScript Algorithms and Data Structures Certification
Learn Introductory JavaScript by Building a Pyramid Generator
Learn Basic JavaScript by Building a Role Playing Game
Learn Form Validation by Building a Calorie Counter
Learn Basic String and Array Methods by Building a Music Player
Learn the Date Object by Building a Date Formatter
Learn Modern JavaScript Methods By Building Football Team Cards
Learn localStorage by Building a Todo App
Learn Recursion by Building a Decimal to Binary Converter
Learn Basic Algorithmic Thinking by Building a Number Sorter
Learn Advanced Array Methods by Building a Statistics Calculator
Learn Functional Programming by Building a Spreadsheet
Learn Regular Expressions by Building a Spam Filter
Learn Basic OOP by Building a Shopping Cart
Learn Intermediate OOP by Building a Platformer Game
Learn Intermediate Algorithmic Thinking by Building a Dice Game
Learn Fetch and Promises By Building an fCC Authors Page
Learn Asynchronous Programming by Building an fCC Forum Leaderboard
Projects: Palindrome Checker, Roman Numeral Converter, Telephone Number Validator, Cash Register, Pokémon Search App
3. Front End Libraries Certification
Bootstrap
jQuery
Sass
React
Redux
React and Redux
Projects: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, 25 + 5 Clock
4. Data Visualization Certification
Data Visualization with D3
JSON APIs and Ajax
Projects: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram
5. Relational Database
Learn Bash by Building a Boilerplate
Learn Relational Databases by Building a Mario Database
Learn Bash Scripting by Building Five Programs
Learn SQL by Building a Student Database: Part 1
Learn SQL by Building a Student Database: Part 2
Learn Advanced Bash by Building a Kitty Ipsum Translator
Learn Bash and SQL by Building a Bike Rental Shop
Learn Nano by Building a Castle
Learn Git by Building an SQL Reference Object
Projects: Salon Appointment Scheduler, Celestial Bodies Database, Periodic Table Database, Number Guessing Game, World Cup Database
6. Back End Development and APIs Certification
Managing Packages with Npm
Basic Node and Express
MongoDB and Mongoose
Projects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice
7. Quality Assurance Certification
Quality Assurance and Testing with Chai
Advanced Node and Express
Projects: Metric-Imperial Converter, Issue Tracker, Personal Library, Sudoku Solver, American British Translator
8. Scientific Computing with Python Certification
Learn String Manipulation by Building a Cipher
Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm
Learn Lambda Functions by Building an Expense Tracker
Learn List Comprehension by Building a Case Converter Program
Learn the Bisection Method by Finding the Square Root of a Number
Learn Regular Expressions by Building a Password Generator
Learn Algorithm Design by Building a Shortest Path Algorithm
Learn Recursion by Solving the Tower of Hanoi Puzzle
Learn Data Structures by Building the Merge Sort Algorithm
Learn Classes and Objects by Building a Sudoku Solver
Learn Tree Traversal by Building a Binary Search Tree
Learn Special Methods by Building a Vector Space
Projects: Arithmetic Formatter, Time Calculator, Budget App, Polygon Area Calculator, Probability Calculator
9. Data Analysis with Python Certification
Data Analysis with Python Course
NumPy
Projects: Mean-Variance-Standard Deviation Calculator, Demographic Data Analyzer, Medical Data Visualizer, Page View Time Series Visualizer, Sea Level Predictor
10. Information Security Certification
Information Security with HelmetJS
Python for Penetration Testing
Projects: Stock Price Checker, Anonymous Message Board, Port Scanner, SHA-1 Password Cracker, Secure Real Time Multiplayer Game 
11. Machine Learning with Python Certification
TensorFlow
How Neural Networks Work
Projects: Rock Paper Scissors, Cat and Dog Image Classifier, Book Recommendation Engine using KNN, Linear Regression Health Costs Calculator, Neural Network SMS Text Classifier
12. College Algebra with Python
Learn Ratios and Proportions
Learn How to Solve for X
Learn Fractions and Decimals
Learn Functions and Graphing
Learn Linear Functions
Learn Common Factors and Square Roots
Learn How to Graph Systems of Equations
Learn How to Solve Systems of Equations
Learn Applications of Linear Systems
Learn Quadratic Equations
Learn Parent Graphs and Polynomials
Learn Business Applications of College Algebra
Learn Simple and Compound Interest
Learn Exponents and Logarithms
College Algebra with Python: Conclusion
Projects: Multi-Function Calculator, Graphing Calculator, Three Math Games, Financial Calculator, Data Graph Explorer
Legacy Full Stack Development Certification
Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.
Legacy Certifications
We also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.
Legacy Front End Development Certification
Legacy Data Visualization Certification
Legacy Back End Development Certification
Legacy Information Security and Quality Assurance Certification
Free professional certifications
(New) Foundational C# with Microsoft
Write Your First Code Using C#
Create and Run Simple C# Console Applications
Add Logic to C# Console Applications
Work with Variable Data in C# Console Applications
Create Methods in C# Console Applications
Debug C# Console Applications
Exam: Foundational C# with Microsoft Certification Exam
The Learning Platform
This code is running live at freeCodeCamp.org.
Our community also has:
A forum where you can usually get programming help or project feedback within hours.
A YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.
A technical publication with thousands of programming tutorials and articles about mathematics and computer science.
A Discord server where you can hang out and talk with developers and people who are learning to code.
Join the community here.
Reporting Bugs and Issues
If you think you've found a bug, first read the how to report a bug article and follow its instructions.
If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.
Reporting Security Issues and Responsible Disclosure
We appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users.
Read our security policy and follow these steps to report a vulnerability.
Contributing
The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.
Please follow these steps to contribute.
Recent Contributions:
Platform, Build, and Deployment Status
The general platform status for all our applications is available at status.freecodecamp.org. The build and deployment status for the code is available in our DevOps Guide.
License
Copyright © 2025 freeCodeCamp.org
The content of this repository is bound by the following licenses:
The computer software is licensed under the BSD-3-Clause license.
The learning resources in the /curriculum directory including their subdirectories thereon are copyright © 2025 freeCodeCamp.org"
free-programming-books,EbookFoundation,"['education', 'books', 'list', 'resource', 'hacktoberfest']",2013-10-11 06:50:37+00:00,https://github.com/EbookFoundation/free-programming-books,2025-01-12 22:28:31+00:00,HTML,347396,:books: Freely available programming books,"List of Free Learning Resources In Many Languages
[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome) 
[![License: CC BY 4.0](https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/) 
[![Hacktoberfest 2023 stats](https://img.shields.io/github/hacktoberfest/2023/EbookFoundation/free-programming-books?label=Hacktoberfest+2023)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Apr+is%3Amerged+created%3A2023-10-01..2023-10-31)
Search the list at https://ebookfoundation.github.io/free-programming-books-search/ .
This page is available as an easy-to-read website. Access it by clicking on .
Intro
This list was originally a clone of StackOverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker.
The list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of GitHub's most popular repositories.
[![GitHub repo forks](https://img.shields.io/github/forks/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Forks)](https://github.com/EbookFoundation/free-programming-books/network) 
[![GitHub repo stars](https://img.shields.io/github/stars/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Stars)](https://github.com/EbookFoundation/free-programming-books/stargazers) 
[![GitHub repo contributors](https://img.shields.io/github/contributors-anon/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Contributors)](https://github.com/EbookFoundation/free-programming-books/graphs/contributors)    
[![GitHub org sponsors](https://img.shields.io/github/sponsors/EbookFoundation?style=flat&logo=github&logoColor=whitesmoke&label=Sponsors)](https://github.com/sponsors/EbookFoundation) 
[![GitHub repo watchers](https://img.shields.io/github/watchers/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Watchers)](https://github.com/EbookFoundation/free-programming-books/watchers) 
[![GitHub repo size](https://img.shields.io/github/repo-size/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Repo%20Size)](https://github.com/EbookFoundation/free-programming-books/archive/refs/heads/main.zip)
The Free Ebook Foundation now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks. Donations to the Free Ebook Foundation are tax-deductible in the US.
How To Contribute
Please read CONTRIBUTING. If you're new to GitHub, welcome! Remember to abide by our adapted from  Code of Conduct too (translations also available).
Click on these badges to see how you might be able to help:
[![GitHub repo Issues](https://img.shields.io/github/issues/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=red&label=Issues)](https://github.com/EbookFoundation/free-programming-books/issues) 
[![GitHub repo Good Issues for newbies](https://img.shields.io/github/issues/EbookFoundation/free-programming-books/good%20first%20issue?style=flat&logo=github&logoColor=green&label=Good%20First%20issues)](https://github.com/EbookFoundation/free-programming-books/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) 
[![GitHub Help Wanted issues](https://img.shields.io/github/issues/EbookFoundation/free-programming-books/help%20wanted?style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20issues)](https://github.com/EbookFoundation/free-programming-books/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)    
[![GitHub repo PRs](https://img.shields.io/github/issues-pr/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=orange&label=PRs)](https://github.com/EbookFoundation/free-programming-books/pulls) 
[![GitHub repo Merged PRs](https://img.shields.io/github/issues-search/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=green&label=Merged%20PRs&query=is%3Amerged)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Apr+is%3Amerged) 
[![GitHub Help Wanted PRs](https://img.shields.io/github/issues-pr/EbookFoundation/free-programming-books/help%20wanted?style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20PRs)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)
How To Share
Share on Facebook
Share on LinkedIn
Share on Mastodon/Fediverse
Share on Telegram
Share on 𝕏 (Twitter)
Resources
This project lists books and other resources grouped by genres:
Books
English, By Programming Language
English, By Subject
Other Languages
Arabic / al arabiya / العربية
Armenian / Հայերեն
Azerbaijani / Азәрбајҹан дили / آذربايجانجا ديلي
Bengali / বাংলা
Bulgarian / български
Burmese / မြန်မာဘာသာ
Chinese / 中文
Czech / čeština / český jazyk
Catalan / catalan/ català
Danish / dansk
Dutch / Nederlands
Estonian / eesti keel
Finnish / suomi / suomen kieli
French / français
German / Deutsch
Greek / ελληνικά
Hebrew / עברית
Hindi / हिन्दी
Hungarian / magyar / magyar nyelv
Indonesian / Bahasa Indonesia
Italian / italiano
Japanese / 日本語
Korean / 한국어
Latvian / Latviešu
Malayalam / മലയാളം
Norwegian / Norsk
Persian / Farsi (Iran) / فارسى
Polish / polski / język polski / polszczyzna
Portuguese (Brazil)
Portuguese (Portugal)
Romanian (Romania) / limba română / român
Russian / Русский язык
Serbian / српски језик / srpski jezik
Slovak / slovenčina
Spanish / español / castellano
Swedish / Svenska
Tamil / தமிழ்
Telugu / తెలుగు
Thai / ไทย
Turkish / Türkçe
Ukrainian / Українська
Vietnamese / Tiếng Việt
Cheat Sheets
All Languages
Free Online Courses
Arabic / al arabiya / العربية
Bengali / বাংলা
Bulgarian / български
Burmese / မြန်မာဘာသာ
Chinese / 中文
English
Finnish / suomi / suomen kieli
French / français
German / Deutsch
Greek / ελληνικά
Hebrew / עברית
Hindi / हिंदी
Indonesian / Bahasa Indonesia
Italian / italiano
Japanese / 日本語
Kannada/ಕನ್ನಡ
Kazakh / қазақша
Khmer / ភាសាខ្មែរ
Korean / 한국어
Malayalam / മലയാളം
Marathi / मराठी
Nepali / नेपाली
Norwegian / Norsk
Persian / Farsi (Iran) / فارسى
Polish / polski / język polski / polszczyzna
Portuguese (Brazil)
Portuguese (Portugal)
Russian / Русский язык
Sinhala / සිංහල
Spanish / español / castellano
Swedish / svenska
Tamil / தமிழ்
Telugu / తెలుగు
Thai / ภาษาไทย
Turkish / Türkçe
Ukrainian / Українська
Urdu / اردو
Vietnamese / Tiếng Việt
Interactive Programming Resources
Chinese / 中文
English
German / Deutsch
Japanese / 日本語
Russian / Русский язык
Problem Sets and Competitive Programming
Problem Sets
Podcast - Screencast
Free Podcasts and Screencasts:
Arabic / al Arabiya / العربية
Burmese / မြန်မာဘာသာ
Chinese / 中文
Czech / čeština / český jazyk
Dutch / Nederlands
English
Finnish / Suomi
French / français
German / Deutsch
Hebrew / עברית
Indonesian / Bahasa Indonesia
Persian / Farsi (Iran) / فارسى
Polish / polski / język polski / polszczyzna
Portuguese (Brazil)
Portuguese (Portugal)
Russian / Русский язык
Sinhala / සිංහල
Spanish / español / castellano
Swedish / Svenska
Turkish / Türkçe
Ukrainian / Українська
Programming Playgrounds
Write, compile, and run your code within a browser. Try it out!
Chinese / 中文
English
German / Deutsch
Translations
Volunteers have translated many of our Contributing, How-to, and Code of Conduct documents into languages covered by our lists.
English
Code of Conduct
Contributing
How-to
... More languages ...
You might notice that there are some missing translations here - perhaps you would like to help out by contributing a translation?
License
Each file included in this repository is licensed under the CC BY License."
awesome,sindresorhus,"['awesome', 'awesome-list', 'unicorns', 'lists', 'resources']",2014-07-11 13:42:37+00:00,https://github.com/sindresorhus/awesome,2024-12-12 00:41:42+00:00,,341554,😎 Awesome lists about all kinds of interesting topics,"Check out my macOS app
Supercharge
Elevate your Mac experience
My open source work is supported by the community
Special thanks to:
Your app, enterprise-ready.
Start selling to enterprise customers with just a few lines of code.
Add Single Sign-On (and more) in minutes instead of months.
The better identity infrastructure for developers
Logto is an open-source Auth0 alternative designed for every app.
Effortless backends with infrastructure from code
An open-source framework that supports any programming language, cloud provider, or deployment automation tool.
What is an awesome list?   
    Contribution guide   
    Creating a list   
    Twitter   
    Just type awesome.re to go here. Check out my apps and follow me on Twitter.
Contents
Platforms
Programming Languages
Front-End Development
Back-End Development
Computer Science
Big Data
Theory
Books
Editors
Gaming
Development Environment
Entertainment
Databases
Media
Learn
Security
Content Management Systems
Hardware
Business
Work
Networking
Decentralized Systems
Health and Social Science
Events
Testing
Miscellaneous
Related
Platforms
Node.js - Async non-blocking event-driven JavaScript runtime built on Chrome's V8 JavaScript engine.
Cross-Platform - Writing cross-platform code on Node.js.
Frontend Development
iOS - Mobile operating system for Apple phones and tablets.
Android - Mobile operating system developed by Google.
IoT & Hybrid Apps
Electron - Cross-platform native desktop apps using JavaScript/HTML/CSS.
Cordova - JavaScript API for hybrid apps.
React Native - JavaScript framework for writing natively rendering mobile apps for iOS and Android.
Xamarin - Mobile app development IDE, testing, and distribution.
Linux
Containers
eBPF - Virtual machine that allows you to write more efficient and powerful tracing and monitoring for Linux systems.
Arch-based Projects - Linux distributions and projects based on Arch Linux.
AppImage - Package apps in a single file that works on various mainstream Linux distributions.
macOS - Operating system for Apple's Mac computers.
Screensavers
Apps
Open Source Apps
watchOS - Operating system for the Apple Watch.
JVM
Salesforce
Amazon Web Services
Windows - Consumer desktop operating system.
PowerToys Run Plugins - Community plugins for the Windows quick launcher.
IPFS - P2P hypermedia protocol.
Fuse - Mobile development tools.
Heroku - Cloud platform as a service.
Raspberry Pi - Credit card-sized computer aimed at teaching kids programming, but capable of a lot more.
Qt - Cross-platform GUI app framework.
WebExtensions - Cross-browser extension system.
Smart TV - Create apps for different TV platforms.
GNOME - Simple and distraction-free desktop environment for Linux.
KDE - A free software community dedicated to creating an open and user-friendly computing experience.
.NET
Core
Roslyn - Open-source compilers and code analysis APIs for C# and VB.NET languages.
Amazon Alexa - Virtual home assistant.
DigitalOcean - Cloud computing platform designed for developers.
Flutter - Google's mobile SDK for building native iOS and Android apps from a single codebase written in Dart.
Home Assistant - Open source home automation that puts local control and privacy first.
IBM Cloud - Cloud platform for developers and companies.
Firebase - App development platform built on Google Cloud.
Robot Operating System 2.0 - Set of software libraries and tools that help you build robot apps.
Adafruit IO - Visualize and store data from any device.
Cloudflare - CDN, DNS, DDoS protection, and security for your site.
Actions on Google - Developer platform for Google Assistant.
ESP - Low-cost microcontrollers with WiFi and broad IoT applications.
Deno - A secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust.
DOS - Operating system for x86-based personal computers that was popular during the 1980s and early 1990s.
Nix - Package manager for Linux and other Unix systems that makes package management reliable and reproducible.
Integration - Linking together different IT systems (components) to functionally cooperate as a whole.
Node-RED - A programming tool for wiring together hardware devices, APIs, and online services.
Low Code - Allowing business professionals to address their needs on their own with little to no coding skills.
Capacitor - Cross-platform open source runtime for building Web Native apps.
ArcGIS Developer - Mapping and location analysis platform for developers.
Bluetooth Low Energy - Low-power wireless communication protocol ideal for IoT, wearables, and other battery-powered applications.
Uno Platform - Open-source .NET UI platform for building cross-platform apps.
Google Cloud - Cloud computing services by Google.
Programming Languages
JavaScript
Promises
Standard Style - Style guide and linter.
Must Watch Talks
Tips
Network Layer
Micro npm Packages
Mad Science npm Packages - Impossible sounding projects that exist.
Maintenance Modules - For npm packages.
npm - Package manager.
AVA - Test runner.
ESLint - Linter.
Functional Programming
Observables
npm scripts - Task runner.
30 Seconds of Code - Code snippets you can understand in 30 seconds.
Ponyfills - Like polyfills but without overriding native APIs.
Swift - Apple's compiled programming language that is secure, modern, programmer-friendly, and fast.
Education
Playgrounds
Python - General-purpose programming language designed for readability.
Asyncio - Asynchronous I/O in Python 3.
Scientific Audio - Scientific research in audio/music.
CircuitPython - A version of Python for microcontrollers.
Data Science - Data analysis and machine learning.
Typing - Optional static typing for Python.
MicroPython - A lean and efficient implementation of Python 3 for microcontrollers.
Rust
Pest - Parser generator.
Haskell
PureScript
Go
Scala
Scala Native - Optimizing ahead-of-time compiler for Scala based on LLVM.
Ruby
Clojure
ClojureScript
Elixir
Elm
Erlang
Julia - High-level dynamic programming language designed to address the needs of high-performance numerical analysis and computational science.
Lua
C
C/C++ - General-purpose language with a bias toward system programming and embedded, resource-constrained software.
R - Functional programming language and environment for statistical computing and graphics.
Learning
D
Common Lisp - Powerful dynamic multiparadigm language that facilitates iterative and interactive development.
Learning
Perl
Groovy
Dart
Java - Popular secure object-oriented language designed for flexibility to ""write once, run anywhere"".
RxJava
Kotlin
OCaml
ColdFusion
Fortran
PHP - Server-side scripting language.
Composer - Package manager.
Pascal
AutoHotkey
AutoIt
Crystal
Frege - Haskell for the JVM.
CMake - Build, test, and package software.
ActionScript 3 - Object-oriented language targeting Adobe AIR.
Eta - Functional programming language for the JVM.
Idris - General purpose pure functional programming language with dependent types influenced by Haskell and ML.
Ada/SPARK - Modern programming language designed for large, long-lived apps where reliability and efficiency are essential.
Q# - Domain-specific programming language used for expressing quantum algorithms.
Imba - Programming language inspired by Ruby and Python and compiles to performant JavaScript.
Vala - Programming language designed to take full advantage of the GLib and GNOME ecosystems, while preserving the speed of C code.
Coq - Formal language and environment for programming and specification which facilitates interactive development of machine-checked proofs.
V - Simple, fast, safe, compiled language for developing maintainable software.
Zig - General-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.
Move - Domain-specific programming language for writing safe smart contracts.
Esolangs - Programming languages designed for experimentation or as jokes rather than actual use.
Front-End Development
ES6 Tools
Web Performance Optimization
Web Tools
CSS - Style sheet language that specifies how HTML elements are displayed on screen.
Critical-Path Tools
Scalability
Must-Watch Talks
Protips
Frameworks
React - JavaScript library for building user interfaces.
Relay - Framework for building data-driven React apps.
React Hooks - Lets you use state and other React features without writing a class.
Web Components
Polymer - JavaScript library to develop Web Components.
Angular - App framework.
Backbone - App framework.
HTML5 - Markup language used for websites & web apps.
SVG - XML-based vector image format.
Canvas
KnockoutJS - JavaScript library.
Dojo Toolkit - JavaScript toolkit.
Inspiration
Ember - App framework.
Android UI
iOS UI
Meteor
BEM
Flexbox
Web Typography
Web Accessibility
Material Design
D3 - Library for producing dynamic, interactive data visualizations.
Emails
jQuery - Easy to use JavaScript library for DOM manipulation.
Tips
Web Audio
Offline-First
Static Website Services
Cycle.js - Functional and reactive JavaScript framework.
Text Editing
Motion UI Design
Vue.js - App framework.
Marionette.js - App framework.
Aurelia - App framework.
Charting
Ionic Framework
Chrome DevTools
PostCSS - CSS tool.
Draft.js - Rich text editor framework for React.
Service Workers
Progressive Web Apps
choo - App framework.
Redux - State container for JavaScript apps.
Browserify - Module bundler.
Sass - CSS preprocessor.
Ant Design - Enterprise-class UI design language.
Less - CSS preprocessor.
WebGL - JavaScript API for rendering 3D graphics.
Preact - App framework.
Progressive Enhancement
Next.js - Framework for server-rendered React apps.
lit - Library for building web components with a declarative template system.
JAMstack - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.
WordPress-Gatsby - Web development technology stack with WordPress as a back end and Gatsby as a front end.
Mobile Web Development - Creating a great mobile web experience.
Storybook - Development environment for UI components.
Blazor - .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly.
PageSpeed Metrics - Metrics to help understand page speed and user experience.
Tailwind CSS - Utility-first CSS framework for rapid UI development.
Seed - Rust framework for creating web apps running in WebAssembly.
Web Performance Budget - Techniques to ensure certain performance metrics for a website.
Web Animation - Animations in the browser with JavaScript, CSS, SVG, etc.
Yew - Rust framework inspired by Elm and React for creating multi-threaded frontend web apps with WebAssembly.
Material-UI - Material Design React components for faster and easier web development.
Building Blocks for Web Apps - Standalone features to be integrated into web apps.
Svelte - App framework.
Design systems - Collection of reusable components, guided by rules that ensure consistency and speed.
Inertia.js - Make single-page apps without building an API.
MDBootstrap - Templates, layouts, components, and widgets to rapidly build websites.
Master CSS - A virtual CSS language with enhanced syntax.
Hydrogen - Edge-first framework for building Shopify storefronts with React.
Tiny JS - Frontend libraries that fit into 2 kB with dependencies.
Frontend GIS - Geographic Information Systems (GIS) for web browsers.
Back-End Development
Flask - Python framework.
Docker
Vagrant - Automation virtual machine environment.
Pyramid - Python framework.
Play1 Framework
CakePHP - PHP framework.
Symfony - PHP framework.
Education
Laravel - PHP framework.
Education
TALL Stack - Full-stack development solution featuring libraries built by the Laravel community.
Rails - Web app framework for Ruby.
Gems - Packages.
Phalcon - PHP framework.
Useful .htaccess Snippets
nginx - Web server.
Dropwizard - Java framework.
Kubernetes - Open-source platform that automates Linux container operations.
Lumen - PHP micro-framework.
Serverless Framework - Serverless computing and serverless architectures.
Apache Wicket - Java web app framework.
Vert.x - Toolkit for building reactive apps on the JVM.
Terraform - Tool for building, changing, and versioning infrastructure.
Vapor - Server-side development in Swift.
Dash - Python web app framework.
FastAPI - Python web app framework.
CDK - Open-source software development framework for defining cloud infrastructure in code.
IAM - User accounts, authentication and authorization.
Slim - PHP framework.
Fiber - Web framework built on top of Fasthttp, the fastest HTTP engine for Go.
Kustomize - Kubernetes native declarative configuration management tool.
OpenTofu - Open-source infrastructure as code tool.
Reflex - Python web framework for building both your frontend and backend with no JavaScript.
Computer Science
University Courses
Data Science
Tutorials
Machine Learning
Tutorials
ML with Ruby - Learning, implementing, and applying Machine Learning using Ruby.
Core ML Models - Models for Apple's machine learning framework.
H2O - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.
Software Engineering for Machine Learning - From experiment to production-level machine learning.
AI in Finance - Solving problems in finance with machine learning.
JAX - Automatic differentiation and XLA compilation brought together for high-performance machine learning research.
XAI - Providing insight, explanations, and interpretability to machine learning methods.
Speech and Natural Language Processing
Spanish
NLP with Ruby
Question Answering - The science of asking and answering in natural language with a machine.
Natural Language Generation - Generation of text used in data to text, conversational agents, and narrative generation applications.
Linguistics
Cryptography
Papers - Theory basics for using cryptography by non-cryptographers.
Computer Vision
Deep Learning - Neural networks.
TensorFlow - Library for machine intelligence.
TensorFlow.js - WebGL-accelerated machine learning JavaScript library for training and deploying models.
TensorFlow Lite - Framework that optimizes TensorFlow models for on-device machine learning.
Papers - The most cited deep learning papers.
Education
Deep Vision
Open Source Society University
Functional Programming
Empirical Software Engineering - Evidence-based research on software systems.
Static Analysis & Code Quality
Information Retrieval - Learn to develop your own search engine.
Quantum Computing - Computing which utilizes quantum mechanics and qubits on quantum computers.
Theoretical Computer Science - The interplay of computer science and pure mathematics, distinguished by its emphasis on mathematical rigour and technique.
Conversational AI - Build awesome chatbots and digital assistants.
Generative AI - Automatically generate a wide range of unique content in text, image and audio format.
Big Data
Big Data
Public Datasets
Hadoop - Framework for distributed storage and processing of very large data sets.
Data Engineering
Streaming
Apache Spark - Unified engine for large-scale data processing.
Qlik - Business intelligence platform for data visualization, analytics, and reporting apps.
Splunk - Platform for searching, monitoring, and analyzing structured and unstructured machine-generated big data in real-time.
Network Analysis
Theory
Papers We Love
Talks
Algorithms
Education - Learning and practicing.
Algorithm Visualizations
Artificial Intelligence
Search Engine Optimization
Competitive Programming
Math
Recursion Schemes - Traversing nested data structures.
Audit Algorithms - Algorithmic audits of algorithms.
AGI & CoCoSci - The reciprocation of Artificial General Intelligence (AGI) and Computational Cognitive Sciences (CoCoSci).
Complex Systems - The scientific field studying systems with multiple interacting parts and emergent properties.
VLM Architectures - Vision Language Model architectures.
Books
Free Programming Books
Go Books
R Books
Mind Expanding Books
Book Authoring
Elixir Books
Editors
Sublime Text
Vim
Neovim - Vim-fork focused on extensibility and usability.
Emacs
Atom - Open-source and hackable text editor.
Visual Studio Code - Cross-platform open-source text editor.
Gaming
Game Development
Game Talks
Godot - Game engine.
Open Source Games
Unity - Game engine.
Chess
LÖVE - Game engine.
PICO-8 - Fantasy console.
Game Boy Development
Construct 2 - Game engine.
Gideros - Game engine.
Minecraft - Sandbox video game.
ComputerCraft - Minecraft mod that adds programmable computers.
Game Datasets - Materials and datasets for Artificial Intelligence in games.
Haxe Game Development - A high-level strongly typed programming language used to produce cross-platform native code.
libGDX - Java game framework.
PlayCanvas - Game engine.
Game Remakes - Actively maintained open-source game remakes.
Flame - Game engine for Flutter.
Discord Communities - Chat with friends and communities.
CHIP-8 - Virtual computer game machine from the 70s.
Games of Coding - Learn a programming language by making games.
Esports - Video games played as a sport.
Learn Gamedev - The craft of video game creation.
Game Engine Development - Building software to speed up game creation.
GameMaker - Game engine.
Game Production - Leading the process of designing, developing, testing and distributing a video game from concept to release.
Babylon.js - Game engine for cross-platform web and native game development.
Development Environment
Quick Look Plugins - For macOS.
Dev Env
Dotfiles
Shell
Fish - User-friendly shell.
Command-Line Apps
ZSH Plugins
GitHub - Hosting service for Git repositories.
Browser Extensions
Cheat Sheet
Pinned Gists - Dynamic pinned gists for your GitHub profile.
Git Cheat Sheet & Git Flow
Git Tips
Git Add-ons - Enhance the git CLI.
Git Hooks - Scripts for automating tasks during git workflows.
SSH
FOSS for Developers
Hyper - Cross-platform terminal app built on web technologies.
PowerShell - Cross-platform object-oriented shell.
Alfred Workflows - Productivity app for macOS.
Terminals Are Sexy
GitHub Actions - Create tasks to automate your workflow and share them with others on GitHub.
Entertainment
Science Fiction - Scifi.
Fantasy
Podcasts
Email Newsletters
IT Quotes
Databases
Database
MySQL
SQLAlchemy
InfluxDB
Neo4j
MongoDB - NoSQL database.
RethinkDB
TinkerPop - Graph computing framework.
PostgreSQL - Object-relational database.
CouchDB - Document-oriented NoSQL database.
HBase - Distributed, scalable, big data store.
NoSQL Guides - Help on using non-relational, distributed, open-source, and horizontally scalable databases.
Database Tools - Everything that makes working with databases easier.
TypeDB - Logical database to organize large and complex networks of data as one body of knowledge.
Cassandra - Open-source, distributed, wide column store, NoSQL database management system.
TDengine - An open-source time-series database with high-performance, scalability, and SQL support.
Supabase - An open-source alternative to Firebase.
PocketBase - An open-source, Go-based backend in one file.
Neon - An open-source alternative to AWS Aurora.
Media
Creative Commons Media
Fonts
Codeface - Text editor fonts.
Stock Resources
GIF - Image format known for animated images.
Music
Open Source Documents
Audio Visualization
Broadcasting
Pixel Art - Pixel-level digital art.
FFmpeg - Cross-platform solution to record, convert and stream audio and video.
Icons - Downloadable SVG/PNG/font icon projects.
Audiovisual - Lighting, audio and video in professional environments.
VLC - Cross-platform media player software and streaming server.
Learn
CLI Workshoppers - Interactive tutorials.
Learn to Program
Speaking
Tech Videos
Dive into Machine Learning
Computer History
Programming for Kids
STEAM - Supplements for specific science, technology, engineering, arts, and math (STEAM) courses across all grade levels.
Educational Games - Learn while playing.
JavaScript Learning
CSS Learning - Mainly about CSS – the language and the modules.
Product Management - Learn how to be a better product manager.
Roadmaps - Gives you a clear route to improve your knowledge and skills.
YouTubers - Watch video tutorials from YouTubers that teach you about technology.
Hackathon - Running fun and productive hackathons.
Certificates - Free computer science certifications to showcase your knowledge.
Security
Application Security
Security
CTF - Capture The Flag.
Cyber Security University - Free educational resources that focus on learning by doing.
Malware Analysis
Android Security
Hacking
Hacking Spots
Honeypots - Deception trap, designed to entice an attacker into attempting to compromise the information systems in an organization.
Incident Response
Vehicle Security and Car Hacking
Web Security - Security of web apps & services.
Lockpicking - The art of unlocking a lock by manipulating its components without the key.
Cybersecurity Blue Team - Groups of individuals who identify security flaws in information technology systems.
Fuzzing - Automated software testing technique that involves feeding pseudo-randomly generated input data.
Embedded and IoT Security
GDPR - Regulation on data protection and privacy for all individuals within EU.
DevSecOps - Integration of security practices into DevOps.
Executable Packing - Packing and unpacking executable formats.
Malware Persistence - Techniques that adversaries use to keep access to systems across restarts.
EVM Security - Understanding the Ethereum Virtual Machine security ecosystem.
Password Cracking - The process of recovering passwords from data that has been stored in or transmitted by a system in scrambled form.
Security Card Games - Train your skills and discuss various security topics.
Suricata - Intrusion detection/prevention system and network security monitoring engine.
Prompt Injection - A type of vulnerability that specifically targets machine learning models.
Detection Engineering - Design, build, and operate detective cybersecurity controls.
Annual Security Reports - Exploring cybersecurity trends, insights, and challenges.
Content Management Systems
Umbraco
Refinery CMS - Ruby on Rails CMS.
Wagtail - Django CMS focused on flexibility and user experience.
Textpattern - Lightweight PHP-based CMS.
Drupal - Extensible PHP-based CMS.
Craft CMS - Content-first CMS.
Sitecore - .NET digital marketing platform that combines CMS with tools for managing multiple websites.
Silverstripe CMS - PHP MVC framework that serves as a classic or headless CMS.
Directus - A real-time API and app dashboard for managing SQL database content.
Plone - Open source Python CMS.
Hardware
Robotics
Internet of Things
Electronics - For electronic engineers and hobbyists.
Bluetooth Beacons
Electric Guitar Specifications - Checklist for building your own electric guitar.
Plotters - Computer-controlled drawing machines and other visual art robots.
Robotic Tooling - Free and open tools for professional robotic development.
LIDAR - Sensor for measuring distances by illuminating the target with laser light.
Open Hardware - Open-source hardware projects.
ADS-B - Technology broadcasting aircraft's identity, position, and data periodically.
Flying FPV - Open hardware and software related to drones / UAVs.
Business
Open Companies
Places to Post Your Startup
OKR Methodology - Goal setting & communication best practices.
Leading and Managing - Leading people and being a manager in a technology company/environment.
Indie - Independent developer businesses.
Tools of the Trade - Tools used by companies on Hacker News.
Clean Tech - Fighting climate change with technology.
Wardley Maps - Provides high situational awareness to help improve strategic planning and decision making.
Social Enterprise - Building an organization primarily focused on social impact that is at least partially self-funded.
Engineering Team Management - How to transition from software development to engineering management.
Developer-First Products - Products that target developers as the user.
Billing - Payments, invoicing, pricing, accounting, marketplace, fraud, and business intelligence.
Engineering Strategy - How to design and execute engineering strategies for tech leadership.
Work
Slack - Team collaboration.
Communities
Remote Jobs
Productivity
Niche Job Boards
Programming Interviews
Code Review - Reviewing code.
Creative Technology - Businesses & groups that specialize in combining computing, design, art, and user experience.
Internships - CV writing guides and companies that hire interns.
Networking
Software-Defined Networking
PCAPTools
Real-Time Communications - Network protocols for near simultaneous exchange of media and data.
SNMP - A protocol for collecting, modifying, and organizing information about managed devices on IP networks.
Scapy - Python-based interactive packet manipulation.
Decentralized Systems
Bitcoin - Bitcoin services and tools for software developers.
Ripple - Open source distributed settlement network.
Non-Financial Blockchain - Non-financial blockchain applications.
Mastodon - Open source decentralized microblogging network.
Ethereum - Distributed computing platform for smart contract development.
Blockchain AI - Blockchain projects for artificial intelligence and machine learning.
EOSIO - A decentralized operating system supporting industrial-scale apps.
Corda - Open source blockchain platform designed for business.
Waves - Open source blockchain platform and development toolset for Web 3.0 apps and decentralized solutions.
Substrate - Framework for writing scalable, upgradeable blockchains in Rust.
Golem - Open source peer-to-peer marketplace for computing resources.
Stacks - A smart contract platform secured by Bitcoin.
Algorand - An open-source, proof of stake blockchain and smart contract computing platform.
ZeroNet - A decentralized web-like network of peer-to-peer users.
Cosmos SDK - Modular framework for building app-specific blockchains in Go.
Tor - A free overlay network for enabling anonymous communication.
Health and Social Science
Biomedical Information Extraction - How to extract information from unstructured biomedical data and text.
Computational Neuroscience - A multidisciplinary science which uses computational approaches to study the nervous system.
Diversity - Creating a more inclusive and diverse tech community.
Digital History - Computer-aided scientific investigation of history.
Empathy in Engineering - Building and promoting more compassionate engineering cultures.
Healthcare - Open source healthcare software for facilities, providers, developers, policy experts, and researchers.
Humane Technology - Open source projects that help improve society.
Mental Health - Mental health awareness and self-care in the software industry.
Neuroscience - Study of the nervous system and brain.
Digital Humanities - Software for humanities scholars using quantitative or computational methods.
Lucid Dreams - A dream where one becomes aware they are dreaming.
Events
Creative Tech Events - Events around the globe for creative coding, tech, design, music, arts and cool stuff.
Events in Italy - Tech-related events in Italy.
Events in the Netherlands - Tech-related events in the Netherlands.
Testing
Testing - Software testing.
Visual Regression Testing - Ensures changes did not break the functionality or style.
Selenium - Open-source browser automation framework and ecosystem.
Appium - Test automation tool for apps.
TAP - Test Anything Protocol.
JMeter - Load testing and performance measurement tool.
k6 - Open-source, developer-centric performance monitoring and load testing solution.
Playwright - Node.js library to automate Chromium, Firefox and WebKit with a single API.
Quality Assurance Roadmap - How to start & build a career in software testing.
Gatling - Open-source load and performance testing framework based on Scala, Akka, and Netty.
Miscellaneous
Scientific Writing - Distraction-free scientific writing with Markdown, reStructuredText and Jupyter notebooks.
JSON - Text based data interchange format.
GeoJSON
Datasets
CSV - A text file format that stores tabular data and uses a comma to separate values.
Discounts for Student Developers
Radio
Awesome - Recursion illustrated.
Analytics
REST
Continuous Integration and Continuous Delivery
Services Engineering
Free for Developers
Answers - Stack Overflow, Quora, etc.
Sketch - Design app for macOS.
Boilerplate Projects
Readme
GitHub Wiki - Comprehensive documentation on GitHub beyond README.
Design and Development Guides
Software Engineering Blogs
Self Hosted
FOSS Production Apps
Gulp - Task runner.
AMA - Ask Me Anything.
Answers
Open Source Photography
OpenGL - Cross-platform API for rendering 2D and 3D graphics.
GraphQL
Urban & Regional Planning - Concerning the built environment and communities.
Transit
Research Tools
Data Visualization
Microservices
Unicode - Unicode standards, quirks, packages and resources.
Code Points
Beginner-Friendly Projects
Katas
Tools for Activism
Citizen Science - For community-based and non-institutional scientists.
MQTT - ""Internet of Things"" connectivity protocol.
For Girls
Vorpal - Node.js CLI framework.
Vulkan - Low-overhead, cross-platform 3D graphics and compute API.
LaTeX - Typesetting language.
Economics - An economist's starter kit.
Funny Markov Chains
Bioinformatics
Cheminformatics - Informatics techniques applied to problems in chemistry.
Colorful - Choose your next color scheme.
Steam - Digital distribution platform.
Bots - Building bots.
Site Reliability Engineering
DTrace - Dynamic tracing framework.
Userscripts - Enhance your browsing experience.
Pokémon - Pokémon and Pokémon GO.
ChatOps - Managing technical and business operations through a chat.
Falsehood - Falsehoods programmers believe in.
Domain-Driven Design - Software development approach for complex needs by connecting the implementation to an evolving model.
Quantified Self - Self-tracking through technology.
SaltStack - Python-based config management system.
Web Design - For digital designers.
Creative Coding - Programming something expressive instead of something functional.
No-Login Web Apps - Web apps that work without login.
Free Software - Free as in freedom.
Framer - Prototyping interactive UI designs.
Markdown - Markup language.
Dev Fun - Funny developer projects.
Magento 2 - Open Source eCommerce built with PHP.
TikZ - Graph drawing packages for TeX/LaTeX/ConTeXt.
Ad-Free - Ad-free alternatives.
Prometheus - Open-source monitoring system.
Homematic - Smart home devices.
Ledger - Double-entry accounting on the command-line.
Web Monetization - A free open web standard service that allows you to send money directly in your browser.
Uncopyright - Public domain works.
Crypto Currency Tools & Algorithms - Digital currency where encryption is used to regulate the generation of units and verify transfers.
Open Source Supporters - Companies that offer their tools and services for free to open source projects.
Design Principles - Create better and more consistent designs and experiences.
Theravada - Teachings from the Theravada Buddhist tradition.
inspectIT - Open source Java app performance management tool.
Open Source Maintainers - The experience of being an open source maintainer.
Calculators - Calculators for every platform.
Captcha - A type of challenge–response test used in computing to determine whether or not the user is human.
Jupyter - Create and share documents that contain code, equations, visualizations and narrative text.
FIRST Robotics Competition - International high school robotics championship.
Speakers - Conference and meetup speakers in the programming and design community.
Board Games - Table-top gaming fun for all.
Software Patreons - Fund individual programmers or the development of open source projects.
Parasite - Parasites and host-pathogen interactions.
Food - Food-related projects on GitHub.
Bitcoin Payment Processors - Start accepting Bitcoin.
Scientific Computing - Solving complex scientific problems using computers.
Amazon Sellers
Agriculture - Open source technology for farming and gardening.
Product Design - Design a product from the initial concept to production.
Prisma - Turn your database into a GraphQL API.
Software Architecture - The discipline of designing and building software.
Connectivity Data and Reports - Better understand who has access to telecommunication and internet infrastructure and on what terms.
Stacks - Tech stacks for building different apps and features.
Cytodata - Image-based profiling of biological phenotypes for computational biologists.
IRC - Open source messaging protocol.
Advertising - Advertising and programmatic media for websites.
Earth - Find ways to resolve the climate crisis.
Naming - Naming things in computer science done right.
Web Archiving - An effort to preserve the Web for future generations.
WP-CLI - Command-line interface for WordPress.
Credit Modeling - Methods for classifying credit applicants into risk classes.
Ansible - A Python-based, open source IT configuration management and automation platform.
Biological Visualizations - Interactive visualization of biological data on the web.
QR Code - A type of matrix barcode that can be used to store and share a small amount of information.
Veganism - Making the plant-based lifestyle easy and accessible.
Translations - The transfer of the meaning of a text from one language to another.
Scriptable - An iOS app for automations in JavaScript.
WebXR - Enables immersive virtual reality and augmented reality content on the web.
Computational Geometry - Computational approaches for problems in geometry.
OpenStreetMap - An open data mapping project utilized by many apps and devices.
Computational Biology - Computational approaches applied to problems in biology.
Read the Docs - Example documentation projects to inspire and help bootstrap new documentation projects.
Quarto - Scientific and technical open-source publishing system built on Pandoc.
Biological Image Analysis - Interpreting biological phenomena using images.
ChatGPT - Artificial intelligence chatbot developed by OpenAI.
Whisper - Open-source AI-powered speech recognition system developed by OpenAI.
Stock Trading - Purchase and sale of equities of publicly traded companies with the aim of generating profits.
Steam Deck - A handheld gaming computer developed by Valve.
Astrophotography - Photography of astronomical objects, celestial events, or areas of the night sky.
HPC - High Performance Computing.
Geocaching - Outdoor treasure-hunting activity that uses GPS-enabled devices.
Regex - Specialized language for matching patterns in text.
Event-Driven Architecture - A software architecture approach where services collaborate by publishing and subscribing to events.
Related
All Awesome Lists - All the Awesome lists on GitHub.
Awesome Search - Quick search for Awesome lists.
StumbleUponAwesome - Discover random pages from the Awesome dataset using a browser extension.
Awesome CLI - A simple command-line tool to dive into Awesome lists.
Awesome Viewer - A visualizer for all of the above Awesome lists.
Track Awesome List - View the latest updates of Awesome lists.
Open Source Heroes - Awesome - View Awesome lists with extra info like stars, last update, and license."
build-your-own-x,codecrafters-io,"['programming', 'tutorials', 'tutorial-code', 'tutorial-exercises', 'free', 'awesome-list']",2018-05-09 12:03:18+00:00,https://github.com/codecrafters-io/build-your-own-x,2024-09-03 14:39:35+00:00,Markdown,325224,Master programming by recreating your favorite technologies from scratch.,"Build your own <insert-technology-here>
This repository is a compilation of well-written, step-by-step guides for re-creating our favorite technologies from scratch. 
What I cannot create, I do not understand — Richard Feynman.
It's a great way to learn.
3D Renderer
Augmented Reality
BitTorrent Client
Blockchain / Cryptocurrency
Bot
Command-Line Tool
Database
Docker
Emulator / Virtual Machine
Front-end Framework / Library
Game
Git
Network Stack
Neural Network
Operating System
Physics Engine
Programming Language
Regex Engine
Search Engine
Shell
Template Engine
Text Editor
Visual Recognition System
Voxel Engine
Web Browser
Web Server
Uncategorized
Tutorials
Build your own 3D Renderer
C++: Introduction to Ray Tracing: a Simple Method for Creating 3D Images
C++: How OpenGL works: software rendering in 500 lines of code
C++: Raycasting engine of Wolfenstein 3D
C++: Physically Based Rendering:From Theory To Implementation
C++: Ray Tracing in One Weekend
C++: Rasterization: a Practical Implementation
C# / TypeScript / JavaScript: Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript
Java / JavaScript: Build your own 3D renderer
Java: How to create your own simple 3D render engine in pure Java
JavaScript / Pseudocode: Computer Graphics from scratch
Python: A 3D Modeller
Build your own Augmented Reality
C#: How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D [video]
C#: How To Unity ARCore [video]
C#: AR Portal Tutorial with Unity [video]
C#: How to create a Dragon in Augmented Reality in Unity ARCore [video]
C#: How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down [video]
Python: Augmented Reality with Python and OpenCV
Build your own BitTorrent Client
C#: Building a BitTorrent client from scratch in C#
Go: Building a BitTorrent client from the ground up in Go
Nim: Writing a Bencode Parser
Node.js: Write your own bittorrent client
Python: A BitTorrent client in Python 3.5
Build your own Blockchain / Cryptocurrency
ATS: Functional Blockchain
C#: Programming The Blockchain in C#
Crystal: Write your own blockchain and PoW algorithm using Crystal
Go: Building Blockchain in Go
Go: Code your own blockchain in less than 200 lines of Go
Java: Creating Your First Blockchain with Java
JavaScript: A cryptocurrency implementation in less than 1500 lines of code
JavaScript: Build your own Blockchain in JavaScript
JavaScript: Learn & Build a JavaScript Blockchain
JavaScript: Creating a blockchain with JavaScript
JavaScript: How To Launch Your Own Production-Ready Cryptocurrency
JavaScript: Writing a Blockchain in Node.js
Kotlin: Let’s implement a cryptocurrency in Kotlin
Python: Learn Blockchains by Building One
Python: Build your own blockchain: a Python tutorial
Python: A Practical Introduction to Blockchain with Python
Python: Let’s Build the Tiniest Blockchain
Ruby: Programming Blockchains Step-by-Step (Manuscripts Book Edition)
Scala: How to build a simple actor-based blockchain
TypeScript: Naivecoin: a tutorial for building a cryptocurrency
TypeScript: NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus
Rust: Building A Blockchain in Rust & Substrate
Build your own Bot
Haskell: Roll your own IRC bot
Node.js: Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js
Node.js: How to make a responsive telegram bot
Node.js: Create a Discord bot
Node.js: gifbot - Building a GitHub App
Node.js: Building A Simple AI Chatbot With Web Speech API And Node.js
Python: How to Build Your First Slack Bot with Python
Python: How to build a Slack Bot with Python using Slack Events API & Django under 20 minute
Python: Build a Reddit Bot
Python: How To Make A Reddit Bot [video]
Python: How To Create a Telegram Bot Using Python
Python: Create a Twitter Bot in Python Using Tweepy
Python: Creating Reddit Bot with Python & PRAW [video]
R: Build A Cryptocurrency Trading Bot with R
Rust: A bot for Starcraft in Rust, C or any other language
Build your own Command-Line Tool
Go: Visualize your local git contributions with Go
Go: Build a command line app with Go: lolcat
Go: Building a cli command with Go: cowsay
Go: Go CLI tutorial: fortune clone
Nim: Writing a stow alternative to manage dotfiles
Node.js: Create a CLI tool in Javascript
Rust: Command line apps in Rust
Rust: Writing a Command Line Tool in Rust
Build your own Database
C: Let's Build a Simple Database
C++: Build Your Own Redis from Scratch
C#: Build Your Own Database
Clojure: An Archaeology-Inspired Database
Crystal: Why you should build your own NoSQL Database
Go: Build Your Own Database from Scratch: Persistence, Indexing, Concurrency
Go: Build Your Own Redis from Scratch
JavaScript: Dagoba: an in-memory graph database
Python: DBDB: Dog Bed Database
Python: Write your own miniature Redis with Python
Ruby: Build your own fast, persistent KV store in Ruby
Rust: Build your own Redis client and server
Build your own Docker
C: Linux containers in 500 lines of code
Go: Build Your Own Container Using Less than 100 Lines of Go
Go: Building a container from scratch in Go [video]
Python: A workshop on Linux containers: Rebuild Docker from Scratch
Python: A proof-of-concept imitation of Docker, written in 100% Python
Shell: Docker implemented in around 100 lines of bash
Build your own Emulator / Virtual Machine
C: Home-grown bytecode interpreters
C: Virtual machine in C
C: Write your Own Virtual Machine
C: Writing a Game Boy emulator, Cinoop
C++: How to write an emulator (CHIP-8 interpreter)
C++: Emulation tutorial (CHIP-8 interpreter)
C++: Emulation tutorial (GameBoy emulator)
C++: Emulation tutorial (Master System emulator)
C++: NES Emulator From Scratch [video]
Common Lisp: CHIP-8 in Common Lisp
JavaScript: GameBoy Emulation in JavaScript
Python: Emulation Basics: Write your own Chip 8 Emulator/Interpreter
Rust: 0dmg: Learning Rust by building a partial Game Boy emulator
Build your own Front-end Framework / Library
JavaScript: WTF is JSX (Let's Build a JSX Renderer)
JavaScript: A DIY guide to build your own React
JavaScript: Building React From Scratch [video]
JavaScript: Gooact: React in 160 lines of JavaScript
JavaScript: Learn how React Reconciler package works by building your own lightweight React DOM
JavaScript: Build Yourself a Redux
JavaScript: Let’s Write Redux!
JavaScript: Redux: Implementing Store from Scratch [video]
JavaScript: Build Your own Simplified AngularJS in 200 Lines of JavaScript
JavaScript: Make Your Own AngularJS
JavaScript: How to write your own Virtual DOM
JavaScript: Building a frontend framework, from scratch, with components (templating, state, VDOM)
JavaScript: Build your own React
JavaScript: Building a Custom React Renderer [video]
Build your own Game
C: Handmade Hero
C: How to Program an NES game in C
C: Chess Engine In C [video]
C: Let's Make: Dangerous Dave [video]
C: Learn Video Game Programming in C
  [video]
C: Coding A Sudoku Solver in C [video]
C: Coding a Rogue/Nethack RPG in C [video]
C: On Tetris and Reimplementation
C++: Breakout
C++: Beginning Game Programming v2.0
C++: Tetris tutorial in C++ platform independent focused in game logic for beginners
C++: Remaking Cavestory in C++ [video]
C++: Reconstructing Cave Story [video]
C++: Space Invaders from Scratch
C#: Learn C# by Building a Simple RPG
C#: Creating a Roguelike Game in C#
C#: Build a C#/WPF RPG
Go: Games With Go [video]
Java: Code a 2D Game Engine using Java - Full Course for Beginners [video]
Java: 3D Game Development with LWJGL 3
JavaScript: 2D breakout game using Phaser
JavaScript: How to Make Flappy Bird in HTML5 With Phaser
JavaScript: Developing Games with React, Redux, and SVG
JavaScript: Build your own 8-Ball Pool game from scratch [video]
JavaScript: How to Make Your First Roguelike
JavaScript: Think like a programmer: How to build Snake using only JavaScript, HTML & CSS
Lua: BYTEPATH
Python: Developing Games With PyGame
Python: Making Games with Python & Pygame [pdf]
Python: Roguelike Tutorial Revised
Ruby: Developing Games With Ruby
Ruby: Ruby Snake
Rust: Adventures in Rust: A Basic 2D Game
Rust: Roguelike Tutorial in Rust + tcod
Build your own Git
Haskell: Reimplementing “git clone” in Haskell from the bottom up
JavaScript: Gitlet
JavaScript: Build GIT - Learn GIT
Python: Just enough of a Git client to create a repo, commit, and push itself to GitHub
Python: Write yourself a Git!
Python: ugit: Learn Git Internals by Building Git Yourself
Ruby: Rebuilding Git in Ruby
Build your own Network Stack
C: Beej's Guide to Network Programming
C: Let's code a TCP/IP stack
C / Python: Build your own VPN/Virtual Switch
Ruby: How to build a network stack in Ruby
Build your own Neural Network
C#: Neural Network OCR
F#: Building Neural Networks in F#
Go: Build a multilayer perceptron with Golang
Go: How to build a simple artificial neural network with Go
Go: Building a Neural Net from Scratch in Go
JavaScript / Java: Neural Networks - The Nature of Code [video]
JavaScript: Neural networks from scratch for JavaScript linguists (Part1 — The Perceptron)
Python: A Neural Network in 11 lines of Python
Python: Implement a Neural Network from Scratch
Python: Optical Character Recognition (OCR)
Python: Traffic signs classification with a convolutional network
Python: Generate Music using LSTM Neural Network in Keras
Python: An Introduction to Convolutional Neural Networks
Python: Neural Networks: Zero to Hero
Build your own Operating System
Assembly: Writing a Tiny x86 Bootloader
Assembly: Baking Pi – Operating Systems Development
C: Building a software and hardware stack for a simple computer from scratch [video]
C: Operating Systems: From 0 to 1
C: The little book about OS development
C: Roll your own toy UNIX-clone OS
C: Kernel 101 – Let’s write a Kernel
C: Kernel 201 – Let’s write a Kernel with keyboard and screen support
C: Build a minimal multi-tasking kernel for ARM from scratch
C: How to create an OS from scratch
C: Malloc tutorial
C: Hack the virtual memory
C: Learning operating system development using Linux kernel and Raspberry Pi
C: Operating systems development for Dummies
C++: Write your own Operating System [video]
C++: Writing a Bootloader
Rust: Writing an OS in Rust
Rust: Add RISC-V Rust Operating System Tutorial
(any): Linux from scratch
Build your own Physics Engine
C: Video Game Physics Tutorial
C++: Game physics series by Allen Chou
C++: How to Create a Custom Physics Engine
C++: 3D Physics Engine Tutorial [video]
JavaScript: How Physics Engines Work
JavaScript: Broad Phase Collision Detection Using Spatial Partitioning
JavaScript: Build a simple 2D physics engine for JavaScript games
Build your own Programming Language
(any): mal - Make a Lisp
Assembly: Jonesforth
C: Baby's First Garbage Collector
C: Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code
C: Writing a Simple Garbage Collector in C
C: C interpreter that interprets itself.
C: A C & x86 version of the ""Let's Build a Compiler"" by Jack Crenshaw
C: A journey explaining how to build a compiler from scratch
C++: Writing Your Own Toy Compiler Using Flex
C++: How to Create a Compiler [video]
C++: Kaleidoscope: Implementing a Language with LLVM
F#: Understanding Parser Combinators
Elixir: Demystifying compilers by writing your own [video]
Go: The Super Tiny Compiler
Go: Lexical Scanning in Go [video]
Haskell: Let's Build a Compiler
Haskell: Write You a Haskell
Haskell: Write Yourself a Scheme in 48 Hours
Haskell: Write You A Scheme
Java: Crafting interpreters: A handbook for making programming languages
Java: Creating JVM Language
JavaScript: The Super Tiny Compiler
JavaScript: The Super Tiny Interpreter
JavaScript: Little Lisp interpreter
JavaScript: How to implement a programming language in JavaScript
JavaScript: Let’s go write a Lisp
OCaml: Writing a C Compiler
OCaml: Writing a Lisp, the series
Pascal: Let's Build a Compiler
Python: A Python Interpreter Written in Python
Python: lisp.py: Make your own Lisp interpreter
Python: How to Write a Lisp Interpreter in Python
Python: Let’s Build A Simple Interpreter
Python: Make Your Own Simple Interpreted Programming Language [video]
Python: From Source Code To Machine Code: Build Your Own Compiler From Scratch
Racket: Beautiful Racket: How to make your own programming languages with Racket
Ruby: A Compiler From Scratch
Ruby: Markdown compiler from scratch in Ruby
Rust: So You Want to Build a Language VM
Rust: Learning Parser Combinators With Rust
Swift: Building a LISP from scratch with Swift
TypeScript: Build your own WebAssembly Compiler
Build your own Regex Engine
C: A Regular Expression Matcher
C: Regular Expression Matching Can Be Simple And Fast
Go: How to build a regex engine from scratch
JavaScript: Build a Regex Engine in Less than 40 Lines of Code
JavaScript: How to implement regular expressions in functional javascript using derivatives
JavaScript: Implementing a Regular Expression Engine 
Perl: How Regexes Work
Python: Build Your Own Regular Expression Engines: Backtracking, NFA, DFA
Scala: No Magic: Regular Expressions
Build your own Search Engine
CSS: A search engine in CSS
Python: Building a search engine using Redis and redis-py
Python: Building a Vector Space Indexing Engine in Python
Python: Building A Python-Based Search Engine [video]
Python: Making text search learn from feedback
Python: Finding Important Words in Text Using TF-IDF
Build your own Shell
C: Tutorial - Write a Shell in C
C: Let's build a shell!
C: Writing a UNIX Shell
C: Build Your Own Shell
C: Write a shell in C
Go: Writing a simple shell in Go
Rust: Build Your Own Shell using Rust
Build your own Template Engine
JavaScript: JavaScript template engine in just 20 lines
JavaScript: Understanding JavaScript Micro-Templating
Python: Approach: Building a toy template engine in Python
Python: A Template Engine
Ruby: How to write a template engine in less than 30 lines of code
Build your own Text Editor
C: Build Your Own Text Editor
C++: Designing a Simple Text Editor
Python: Python Tutorial: Make Your Own Text Editor [video]
Python: Create a Simple Python Text Editor!
Ruby: Build a Collaborative Text Editor Using Rails
Rust: Hecto: Build your own text editor in Rust 
Build your own Visual Recognition System
Python: Developing a License Plate Recognition System with Machine Learning in Python
Python: Building a Facial Recognition Pipeline with Deep Learning in Tensorflow
Build your own Voxel Engine
C++: Let's Make a Voxel Engine
Java: Java Voxel Engine Tutorial [video]
Build your own Web Browser
Rust: Let's build a browser engine
Python: Browser Engineering
Build your own Web Server
C#: Writing a Web Server from Scratch
Node.js: Build Your Own Web Server From Scratch In JavaScript
Node.js: Let's code a web server from scratch with NodeJS Streams
Node.js: lets-build-express
PHP: Writing a webserver in pure PHP
Python: A Simple Web Server
Python: Let’s Build A Web Server.
Python: Web application from scratch
Python: Building a basic HTTP Server from scratch in Python
Python: Implementing a RESTful Web API with Python & Flask
Ruby: Building a simple websockets server from scratch in Ruby
Uncategorized
(any): From NAND to Tetris: Building a Modern Computer From First Principles
Alloy: The Same-Origin Policy
C: How to Write a Video Player in Less Than 1000 Lines
C: Learn how to write a hash table in C
C: The very basics of a terminal emulator
C: Write a System Call
C: Sol - An MQTT broker from scratch
C++: Build your own VR headset for $200
C++: How X Window Managers work and how to write one
C++: Writing a Linux Debugger
C++: How a 64k intro is made
C++: Make your own Game Engine
C#: C# Networking: Create a TCP chater server, TCP games, UDP Pong and more
C#: Loading and rendering 3D skeletal animations from scratch in C# and GLSL
Clojure: Building a spell-checker
Go: Build A Simple Terminal Emulator In 100 Lines of Golang
Go: Let's Create a Simple Load Balancer
Go: Video Encoding from Scratch
Java: How to Build an Android Reddit App [video]
JavaScript: Build Your Own Module Bundler - Minipack
JavaScript: Learn JavaScript Promises by Building a Promise from Scratch
JavaScript: Implementing promises from scratch (TDD way)
JavaScript: Implement your own — call(), apply() and bind() method in JavaScript
JavaScript: JavaScript Algorithms and Data Structures
JavaScript: Build a ride hailing app with React Native
JavaScript: Build Your Own AdBlocker in (Literally) 10 Minutes
Kotlin: Build Your Own Cache
Lua: Building a CDN from Scratch to Learn about CDN
Nim: Writing a Redis Protocol Parser
Nim: Writing a Build system
Nim: Writing a MiniTest Framework
Nim: Writing a DMIDecode Parser
Nim: Writing a INI Parser
Nim: Writing a Link Checker
Nim: Writing a URL Shortening Service
Node.js: Build a static site generator in 40 lines with Node.js
Node.js: Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js.
Node.js: How to create a real-world Node CLI app with Node
Node.js: Build a DNS Server in Node.js
PHP: Write your own MVC from scratch in PHP 
PHP: Make your own blog
PHP: Modern PHP Without a Framework
PHP: Code a Web Search Engine in PHP
Python: Build a Deep Learning Library [video]
Python: How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes
Python: Continuous Integration System
Python: Recommender Systems in Python: Beginner Tutorial
Python: Write SMS-spam detector with Scikit-learn
Python: A Simple Content-Based Recommendation Engine in Python
Python: Stock Market Predictions with LSTM in Python
Python: Building a simple Generative Adversarial Network (GAN) using Tensorflow
Python: Learn ML Algorithms by coding: Decision Trees
Python: JSON Decoding Algorithm
Python: Build your own Git plugin with python
Ruby: A Pedometer in the Real World
Ruby: Creating a Linux Desktop application with Ruby
Rust: Building a DNS server in Rust
Rust: Writing Scalable Chat Service from Scratch
Rust: WebGL + Rust: Basic Water Tutorial
TypeScript: Tiny Package Manager: Learns how npm or Yarn works
Contribute
Submissions welcome, just send a PR, or create an issue
Help us review pending submissions by leaving comments and ""reactions""
Origins & License
This repository is the work of many contributors. It was started by Daniel Stefanovic, and is now maintained by CodeCrafters, Inc. To the extent possible under law, CodeCrafters, Inc. has waived all copyright and related or neighboring rights to this work."
public-apis,public-apis,"['api', 'public-apis', 'free', 'apis', 'list', 'development', 'software', 'public', 'resources', 'dataset', 'open-source', 'public-api', 'lists']",2016-03-20 23:49:42+00:00,https://github.com/public-apis/public-apis,2024-10-31 19:50:01+00:00,Python,323958,A collective list of free APIs,"Try Public APIs for free
The Public APIs repository is manually curated by community members like you and folks working at APILayer. It includes an extensive list of public APIs from many domains that you can use for your own products. Consider it a treasure trove of APIs well-managed by the community over the years.
APILayer is the fastest way to integrate APIs into any product. There are a lot of APIs available at APILayer Marketplace.
APILayer APIs
| API | Description | Call this API |
|:---|:---|:---|
| IP Stack | Locate and Identify Website Visitors by IP Address | |
| Marketstack | Free, easy-to-use REST API interface delivering worldwide stock market data in JSON format | |
| Weatherstack | Retrieve instant, accurate weather information for any location in the world in lightweight JSON format | |
| Numverify | Global Phone Number Validation & Lookup JSON API ||
| Fixer | Fixer is a simple and lightweight API for current and historical foreign exchange (forex) rates. ||
Learn more about Public APIs
Get Involved
Contributing Guide
API for this project
Issues
Pull Requests
LICENSE 
Index
Animals
Anime
Anti-Malware
Art & Design
Authentication & Authorization
Blockchain
Books
Business
Calendar
Cloud Storage & File Sharing
Continuous Integration
Cryptocurrency
Currency Exchange
Data Validation
Development
Dictionaries
Documents & Productivity
Email
Entertainment
Environment
Events
Finance
Food & Drink
Games & Comics
Geocoding
Government
Health
Jobs
Machine Learning
Music
News
Open Data
Open Source Projects
Patent
Personality
Phone
Photography
Programming
Science & Math
Security
Shopping
Social
Sports & Fitness
Test Data
Text Analysis
Tracking
Transportation
URL Shorteners
Vehicle
Video
Weather
Animals
API | Description | Auth | HTTPS | CORS 
|:---|:---|:---|:---|:---|
| AdoptAPet | Resource to help get pets adopted | apiKey | Yes | Yes |
| Axolotl | Collection of axolotl pictures and facts | No | Yes | No |
| Cat Facts | Daily cat facts | No | Yes | No | |
| Cataas | Cat as a service (cats pictures and gifs) | No | Yes | No |
| Cats | Pictures of cats from Tumblr | apiKey | Yes | No |
| Dog Facts | Random dog facts | No | Yes | Yes |
| Dog Facts | Random facts of Dogs | No | Yes | Yes |
| Dogs | Based on the Stanford Dogs Dataset | No | Yes | Yes |
| eBird | Retrieve recent or notable birding observations within a region | apiKey | Yes | No |
| FishWatch | Information and pictures about individual fish species | No | Yes | Yes |
| HTTP Cat | Cat for every HTTP Status | No | Yes | Yes |
| HTTP Dog | Dogs for every HTTP response status code | No | Yes | Yes |
| IUCN | IUCN Red List of Threatened Species | apiKey | No | No |
| MeowFacts | Get random cat facts | No | Yes | No |
| Movebank | Movement and Migration data of animals | No | Yes | Yes |
| Petfinder | Petfinder is dedicated to helping pets find homes, another resource to get pets adopted | apiKey | Yes | Yes |
| PlaceBear | Placeholder bear pictures | No | Yes | Yes |
| PlaceDog | Placeholder Dog pictures | No | Yes | Yes |
| PlaceKitten | Placeholder Kitten pictures | No | Yes | Yes |
| RandomDog | Random pictures of dogs | No | Yes | Yes |
| RandomDuck | Random pictures of ducks | No | Yes | No |
| RandomFox | Random pictures of foxes | No | Yes | No |
| RescueGroups | Adoption | No | Yes | Unknown |
| Shibe.Online | Random pictures of Shiba Inu, cats or birds | No | Yes | Yes |
| The Dog | A public service all about Dogs, free to use when making your fancy new App, Website or Service | apiKey | Yes | No |
| xeno-canto | Bird recordings | No | Yes | Unknown |
| Zoo Animals | Facts and pictures of zoo animals | No | Yes | Yes |
⬆ Back to Index
Anime
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| AniAPI | Anime discovery, streaming & syncing with trackers | OAuth | Yes | Yes |
| AniDB | Anime Database | apiKey | No | Unknown |
| AniList | Anime discovery & tracking | OAuth | Yes | Unknown |
| AnimeChan | Anime quotes (over 10k+) | No | Yes | No |
| AnimeFacts | Anime Facts (over 100+) | No | Yes | Yes |
| AnimeNewsNetwork | Anime industry news | No | Yes | Yes |
| Catboy | Neko images, funny GIFs & more | No | Yes | Yes |
| Danbooru Anime | Thousands of anime artist database to find good anime art | apiKey | Yes | Yes |
| Jikan | Unofficial MyAnimeList API | No | Yes | Yes |
| Kitsu | Anime discovery platform | OAuth | Yes | Yes |
| MangaDex | Manga Database and Community | apiKey | Yes | Unknown |
| Mangapi | Translate manga pages from one language to another | apiKey | Yes | Unknown |
| MyAnimeList | Anime and Manga Database and Community | OAuth | Yes | Unknown |
| NekosBest | Neko Images & Anime roleplaying GIFs | No | Yes | Yes |
| Shikimori | Anime discovery, tracking, forum, rates | OAuth | Yes | Unknown |
| Studio Ghibli | Resources from Studio Ghibli films | No | Yes | Yes |
| Trace Moe | A useful tool to get the exact scene of an anime from a screenshot | No | Yes | No |
| Waifu.im | Get waifu pictures from an archive of over 4000 images and multiple tags | No | Yes | Yes |
| Waifu.pics | Image sharing platform for anime images | No | Yes | No |
⬆ Back to Index
Anti-Malware
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| AbuseIPDB | IP/domain/URL reputation | apiKey | Yes | Unknown |
| AlienVault Open Threat Exchange (OTX) | IP/domain/URL reputation | apiKey | Yes | Unknown |
| CAPEsandbox | Malware execution and analysis | apiKey | Yes | Unknown |
| Google Safe Browsing | Google Link/Domain Flagging | apiKey | Yes | Unknown |
| MalDatabase | Provide malware datasets and threat intelligence feeds | apiKey | Yes | Unknown |
| MalShare | Malware Archive / file sourcing | apiKey | Yes | No |
| MalwareBazaar | Collect and share malware samples | apiKey | Yes | Unknown |
| Metacert | Metacert Link Flagging | apiKey | Yes | Unknown |
| NoPhishy | Check links to see if they're known phishing attempts | apiKey | Yes | Yes |
| Phisherman | IP/domain/URL reputation | apiKey | Yes | Unknown |
| Scanii | Simple REST API that can scan submitted documents/files for the presence of threats | apiKey | Yes | Yes |
| URLhaus | Bulk queries and Download Malware Samples | No | Yes | Yes |
| URLScan.io | Scan and Analyse URLs | apiKey | Yes | Unknown |
| VirusTotal | VirusTotal File/URL Analysis | apiKey | Yes | Unknown |
| Web of Trust | IP/domain/URL reputation | apiKey | Yes | Unknown | 
⬆ Back to Index
Art & Design
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Améthyste | Generate images for Discord users | apiKey | Yes | Unknown |
| Art Institute of Chicago | Art | No | Yes | Yes |
| Colormind | Color scheme generator | No | No | Unknown |
| ColourLovers | Get various patterns, palettes and images | No | No | Unknown |
| Cooper Hewitt | Smithsonian Design Museum | apiKey | Yes | Unknown |
| Dribbble | Discover the world’s top designers & creatives | OAuth | Yes | Unknown |
| EmojiHub | Get emojis by categories and groups | No | Yes | Yes |
| Europeana | European Museum and Galleries content | apiKey | Yes | Unknown |
| Harvard Art Museums | Art | apiKey | No | Unknown |
| Icon Horse | Favicons for any website, with fallbacks | No | Yes | Yes |
| Iconfinder | Icons | apiKey | Yes | Unknown |
| Icons8 | Icons (find ""search icon"" hyperlink in page) | No | Yes | Unknown |
| Lordicon | Icons with predone Animations | No | Yes | Yes |
| Metropolitan Museum of Art | Met Museum of Art | No | Yes | No |
| Noun Project | Icons | OAuth | No | Unknown |
| PHP-Noise | Noise Background Image Generator | No | Yes | Yes |
| Pixel Encounter | SVG Icon Generator | No | Yes | No |
| Rijksmuseum | RijksMuseum Data | apiKey | Yes | Unknown |
| Word Cloud | Easily create word clouds | apiKey | Yes | Unknown |
| xColors | Generate & convert colors | No | Yes | Yes |
⬆ Back to Index
Authentication & Authorization
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Auth0 | Easy to implement, adaptable authentication and authorization platform | apiKey | Yes | Yes |
| GetOTP | Implement OTP flow quickly | apiKey | Yes | No |
| Micro User Service | User management and authentication | apiKey | Yes | No |
| MojoAuth | Secure and modern passwordless authentication platform | apiKey | Yes | Yes |
| SAWO Labs | Simplify login and improve user experience by integrating passwordless authentication in your app | apiKey | Yes | Yes |
| Stytch | User infrastructure for modern applications | apiKey | Yes | No |
| Warrant | APIs for authorization and access control | apiKey | Yes | Yes |
⬆ Back to Index
Blockchain
| API | Description | Auth | HTTPS | CORS |
|---|:---|:---|:---|:---|
| Bitquery | Onchain GraphQL APIs & DEX APIs | apiKey | Yes | Yes |
| Chainlink | Build hybrid smart contracts with Chainlink | No | Yes | Unknown |
| Chainpoint | Chainpoint is a global network for anchoring data to the Bitcoin blockchain | No | Yes | Unknown |
| Covalent | Multi-blockchain data aggregator platform | apiKey | Yes | Unknown |
| Etherscan | Ethereum explorer API | apiKey | Yes | Yes |
| Helium | Helium is a global, distributed network of Hotspots that create public, long-range wireless coverage | No | Yes | Unknown |
| Nownodes | Blockchain-as-a-service solution that provides high-quality connection via API | apiKey | Yes | Unknown |
| Steem | Blockchain-based blogging and social media website | No | No | No |
| The Graph | Indexing protocol for querying networks like Ethereum with GraphQL | apiKey | Yes | Unknown |
| Walltime | To retrieve Walltime's market info | No | Yes | Unknown |
| Watchdata | Provide simple and reliable API access to Ethereum blockchain | apiKey | Yes | Unknown |
⬆ Back to Index
Books
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| A Bíblia Digital | Do not worry about managing the multiple versions of the Bible | apiKey | Yes | No |
| Bhagavad Gita | Open Source Shrimad Bhagavad Gita API including 21+ authors translation in Sanskrit/English/Hindi | apiKey | Yes | Yes |
| Bhagavad Gita | Bhagavad Gita text | OAuth | Yes | Yes |
| Bhagavad Gita telugu | Bhagavad Gita API in telugu and odia languages | No | Yes | Yes |
| Bible-api | Free Bible API with multiple languages | No | Yes | Yes |
| British National Bibliography | Books | No | No | Unknown |
| Crossref Metadata Search | Books & Articles Metadata | No | Yes | Unknown |
| Ganjoor | Classic Persian poetry works including access to related manuscripts, recitations and music tracks | OAuth | Yes | Yes |
| Google Books | Books | OAuth | Yes | Unknown |
| GurbaniNow | Fast and Accurate Gurbani RESTful API | No | Yes | Unknown |
| Gutendex | Web-API for fetching data from Project Gutenberg Books Library | No | Yes | Unknown |
| Open Library | Books, book covers and related data | No | Yes | No |
| Penguin Publishing | Books, book covers and related data | No | Yes | Yes |
| PoetryDB | Enables you to get instant data from our vast poetry collection | No | Yes | Yes |
| Quran | RESTful Quran API with multiple languages | No | Yes | Yes |
| Quran Cloud | A RESTful Quran API to retrieve an Ayah, Surah, Juz or the entire Holy Quran | No | Yes | Yes |
| Quran-api | Free Quran API Service with 90+ different languages and 400+ translations | No | Yes | Yes |
| Rig Veda | Gods and poets, their categories, and the verse meters, with the mandal and sukta number | No | Yes | Unknown |
| The Bible | Everything you need from the Bible in one discoverable place | apiKey | Yes | Unknown |
| Thirukkural | 1330 Thirukkural poems and explanation in Tamil and English | No | Yes | Yes |
| Vedic Society | Descriptions of all nouns (names, places, animals, things) from vedic literature | No | Yes | Unknown |
| Wizard World | Get information from the Harry Potter universe | No | Yes | Yes |
| Wolne Lektury | API for obtaining information about e-books available on the WolneLektury.pl website | No | Yes | Unknown |
⬆ Back to Index
Business
API | Description | Auth | HTTPS | CORS |
|---|:---|:---|:---|:---|
| Apache Superset | API to manage your BI dashboards and data sources on Superset | apiKey | Yes | Yes |
| Charity Search | Non-profit charity data | apiKey | No | Unknown 
| Clearbit Logo | Search for company logos and embed them in your projects | apiKey | Yes | Unknown |
| Domainsdb.info | Registered Domain Names Search | No | Yes | No |
| Freelancer | Hire freelancers to get work done | OAuth | Yes | Unknown |
| Gmail | Flexible, RESTful access to the user's inbox | OAuth | Yes | Unknown |
| Google Analytics | Collect, configure and analyze your data to reach the right audience | OAuth | Yes | Unknown |
| Instatus | Post to and update maintenance and incidents on your status page through an HTTP REST API | apiKey | Yes | Unknown |
| Mailchimp | Send marketing campaigns and transactional mails | apiKey | Yes | Unknown |
| mailjet | Marketing email can be sent and mail templates made in MJML or HTML can be sent using API | apiKey | Yes | Unknown |
| markerapi | Trademark Search | No | No | Unknown |
| ORB Intelligence | Company lookup | apiKey | Yes | Unknown |
| Redash | Access your queries and dashboards on Redash | apiKey | Yes | Yes |
| Smartsheet | Allows you to programmatically access and Smartsheet data and account information | OAuth | Yes | No |
| Square | Easy way to take payments, manage refunds, and help customers checkout online | OAuth | Yes | Unknown |
| SwiftKanban | Kanban software, Visualize Work, Increase Organizations Lead Time, Throughput & Productivity | apiKey | Yes | Unknown |
| Tenders in Hungary | Get data for procurements in Hungary in JSON format | No | Yes | Unknown |
| Tenders in Poland | Get data for procurements in Poland in JSON format | No | Yes | Unknown |
| Tenders in Romania | Get data for procurements in Romania in JSON format | No | Yes | Unknown |
| Tenders in Spain | Get data for procurements in Spain in JSON format | No | Yes | Unknown |
| Tenders in Ukraine | Get data for procurements in Ukraine in JSON format | No | Yes | Unknown |
| Tomba email finder | Email Finder for B2B sales and email marketing and email verifier | apiKey | Yes | Yes |
| Trello | Boards, lists and cards to help you organize and prioritize your projects | OAuth | Yes | Unknown |
⬆ Back to Index
Calendar
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Abstract Public Holidays | Data on national, regional, and religious holidays via API | apiKey | Yes | Yes |
| Calendarific | Worldwide Holidays | apiKey | Yes | Unknown |
| Checkiday - National Holiday API | Industry-leading Holiday API. Over 5,000 holidays and thousands of descriptions. Trusted by the World’s leading companies | apiKey | Yes | Unknown |
| Church Calendar | Catholic liturgical calendar | No | No | Unknown |
| Czech Namedays Calendar | Lookup for a name and returns nameday date | No | No | Unknown |
| Festivo Public Holidays | Fastest and most advanced public holiday and observance service on the market | apiKey | Yes | Yes |
| Google Calendar | Display, create and modify Google calendar events | OAuth | Yes | Unknown |
| Hebrew Calendar | Convert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc | No | No | Unknown |
| Holidays | Historical data regarding holidays | apiKey | Yes | Unknown |
| LectServe | Protestant liturgical calendar | No | No | Unknown |
| Nager.Date | Public holidays for more than 90 countries | No | Yes | No |
| Namedays Calendar | Provides namedays for multiple countries | No | Yes | Yes |
| Non-Working Days | Database of ICS files for non working days | No | Yes | Unknown |
| Non-Working Days | Simple REST API for checking working, non-working or short days for Russia, CIS, USA and other | No | Yes | Yes |
| Russian Calendar | Check if a date is a Russian holiday or not | No | Yes | No |
| UK Bank Holidays | Bank holidays in England and Wales, Scotland and Northern Ireland | No | Yes | Unknown |
⬆ Back to Index
Cloud Storage & File Sharing
API | Description | Auth | HTTPS | CORS |
|---|:---|:---|:---|:---|
| AnonFiles | Upload and share your files anonymously | No | Yes | Unknown | |
| BayFiles | Upload and share your files | No | Yes | Unknown | |
| Box | File Sharing and Storage | OAuth | Yes | Unknown | |
| ddownload | File Sharing and Storage | apiKey | Yes | Unknown | |
| Dropbox | File Sharing and Storage | OAuth | Yes | Unknown | |
| File.io | Super simple file sharing, convenient, anonymous and secure | No | Yes | Unknown | |
| Filestack | Filestack File Uploader & File Upload API | apiKey | Yes | Unknown |    |
| GoFile | Unlimited size file uploads for free | apiKey | Yes | Unknown | |
| Google Drive | File Sharing and Storage | OAuth | Yes | Unknown | |
| Gyazo | Save & Share screen captures instantly | apiKey | Yes | Unknown | |
| Imgbb | Simple and quick private image sharing | apiKey | Yes | Unknown | |
| OneDrive | File Sharing and Storage | OAuth | Yes | Unknown | |
| Pantry | Free JSON storage for small projects | No | Yes | Yes | |
| Pastebin | Plain Text Storage | apiKey | Yes | Unknown | |
| Pinata | IPFS Pinning Services API | apiKey | Yes | Unknown | |
| Quip | File Sharing and Storage for groups | apiKey | Yes | Yes | |
| Storj | Decentralized Open-Source Cloud Storage | apiKey | Yes | Unknown | |
| The Null Pointer | No-bullshit file hosting and URL shortening service | No | Yes | Unknown | |
| Web3 Storage | File Sharing and Storage for Free with 1TB Space | apiKey | Yes | Yes | |
⬆ Back to Index
Continuous Integration
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Azure DevOps Health | Resource health helps you diagnose and get support when an Azure issue impacts your resources | apiKey | No | No |
| Bitrise | Build tool and processes integrations to create efficient development pipelines | apiKey | Yes | Unknown |
| Buddy | The fastest continuous integration and continuous delivery platform | OAuth | Yes | Unknown |
| CircleCI | Automate the software development process using continuous integration and continuous delivery | apiKey | Yes | Unknown |
| Codeship | Codeship is a Continuous Integration Platform in the cloud | apiKey | Yes | Unknown |
| Travis CI | Sync your GitHub projects with Travis CI to test your code in minutes | apiKey | Yes | Unknown |
⬆ Back to Index
Cryptocurrency
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 0x | API for querying token and pool stats across various liquidity pools | No | Yes | Yes |
| 1inch | API for querying decentralize exchange | No | Yes | Unknown |
| Alchemy Ethereum | Ethereum Node-as-a-Service Provider | apiKey | Yes | Yes |
| apilayer coinlayer | Real-time Crypto Currency Exchange Rates | apiKey | Yes | Unknown |
| Binance | Exchange for Trading Cryptocurrencies based in China | apiKey | Yes | Unknown |
| Bitcambio | Get the list of all traded assets in the exchange | No | Yes | Unknown |
| BitcoinAverage | Digital Asset Price Data for the blockchain industry | apiKey | Yes | Unknown |
| BitcoinCharts | Financial and Technical Data related to the Bitcoin Network | No | Yes | Unknown |
| Bitfinex | Cryptocurrency Trading Platform | apiKey | Yes | Unknown |
| Bitmex | Real-Time Cryptocurrency derivatives trading platform based in Hong Kong | apiKey | Yes | Unknown |
| Bittrex | Next Generation Crypto Trading Platform | apiKey | Yes | Unknown |
| Block | Bitcoin Payment, Wallet & Transaction Data | apiKey | Yes | Unknown |
| Blockchain | Bitcoin Payment, Wallet & Transaction Data | apiKey | Yes | Unknown |
| blockfrost Cardano | Interaction with the Cardano mainnet and several testnets | apiKey | Yes | Unknown |
| Brave NewCoin | Real-time and historic crypto data from more than 200+ exchanges | apiKey | Yes | Unknown |
| BtcTurk | Real-time cryptocurrency data, graphs and API that allows buy&sell | apiKey | Yes | Yes |
| Bybit | Cryptocurrency data feed and algorithmic trading | apiKey | Yes | Unknown |
| CoinAPI | All Currency Exchanges integrate under a single api | apiKey | Yes | No |
| Coinbase | Bitcoin, Bitcoin Cash, Litecoin and Ethereum Prices | apiKey | Yes | Unknown |
| Coinbase Pro | Cryptocurrency Trading Platform | apiKey | Yes | Unknown |
| CoinCap | Real time Cryptocurrency prices through a RESTful API | No | Yes | Unknown |
| CoinDCX | Cryptocurrency Trading Platform | apiKey | Yes | Unknown |
| CoinDesk | CoinDesk's Bitcoin Price Index (BPI) in multiple currencies | No | Yes | Unknown |
| CoinGecko | Cryptocurrency Price, Market, and Developer/Social Data | No | Yes | Yes |
| Coinigy | Interacting with Coinigy Accounts and Exchange Directly | apiKey | Yes | Unknown |
| Coinlib | Crypto Currency Prices | apiKey | Yes | Unknown |
| Coinlore | Cryptocurrencies prices, volume and more | No | Yes | Unknown |
| CoinMarketCap | Cryptocurrencies Prices | apiKey | Yes | Unknown |
| Coinpaprika | Cryptocurrencies prices, volume and more | No | Yes | Yes |
| CoinRanking | Live Cryptocurrency data | apiKey | Yes | Unknown |
| Coinremitter | Cryptocurrencies Payment & Prices | apiKey | Yes | Unknown |
| CoinStats | Crypto Tracker | No | Yes | Unknown |
| CryptAPI | Cryptocurrency Payment Processor | No | Yes | Unknown |
| CryptingUp | Cryptocurrency data | No | Yes | Unknown |
| CryptoCompare | Cryptocurrencies Comparison | No | Yes | Unknown |
| CryptoMarket | Cryptocurrencies Trading platform | apiKey | Yes | Yes |
| Cryptonator | Cryptocurrencies Exchange Rates | No | Yes | Unknown |
| dYdX | Decentralized cryptocurrency exchange | apiKey | Yes | Unknown |
| Ethplorer | Ethereum tokens, balances, addresses, history of transactions, contracts, and custom structures | apiKey | Yes | Unknown |
| EXMO | Cryptocurrencies exchange based in UK | apiKey | Yes | Unknown |
| FTX | Complete REST, websocket, and FTX APIs to suit your algorithmic trading needs | apiKey | Yes | Yes |
| Gateio | API provides spot, margin and futures trading operations | apiKey | Yes | Unknown |
| Gemini | Cryptocurrencies Exchange | No | Yes | Unknown |
| Hirak Exchange Rates | Exchange rates between 162 currency & 300 crypto currency update each 5 min, accurate, no limits | apiKey | Yes | Unknown |
| Huobi | Seychelles based cryptocurrency exchange | apiKey | Yes | Unknown |
| icy.tools | GraphQL based NFT API | apiKey | Yes | Unknown |
| Indodax | Trade your Bitcoin and other assets with rupiah | apiKey | Yes | Unknown |
| INFURA Ethereum | Interaction with the Ethereum mainnet and several testnets | apiKey | Yes | Yes |
| Kraken | Cryptocurrencies Exchange | apiKey | Yes | Unknown |
| KuCoin | Cryptocurrency Trading Platform | apiKey | Yes | Unknown |
| Localbitcoins | P2P platform to buy and sell Bitcoins | No | Yes | Unknown |
| Mempool | Bitcoin API Service focusing on the transaction fee | No | Yes | No |
| MercadoBitcoin | Brazilian Cryptocurrency Information | No | Yes | Unknown |
| Messari | Provides API endpoints for thousands of crypto assets | No | Yes | Unknown |
| Nexchange | Automated cryptocurrency exchange service | No | No | Yes |
| Nomics | Historical and realtime cryptocurrency prices and market data | apiKey | Yes | Yes |
| NovaDax | NovaDAX API to access all market data, trading management endpoints | apiKey | Yes | Unknown |
| OKEx | Cryptocurrency exchange based in Seychelles | apiKey | Yes | Unknown |
| Poloniex | US based digital asset exchange | apiKey | Yes | Unknown |
| Solana JSON RPC | Provides various endpoints to interact with the Solana Blockchain | No | Yes | Unknown |
| Technical Analysis | Cryptocurrency prices and technical analysis | apiKey | Yes | No |
| VALR | Cryptocurrency Exchange based in South Africa | apiKey | Yes | Unknown |
| WorldCoinIndex | Cryptocurrencies Prices | apiKey | Yes | Unknown |
| ZMOK | Ethereum JSON RPC API and Web3 provider | No | Yes | Unknown |
⬆ Back to Index
Currency Exchange
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 1Forge | Forex currency market data | apiKey | Yes | Unknown |
| Amdoren | Free currency API with over 150 currencies | apiKey | Yes | Unknown |
| apilayer fixer.io | Exchange rates and currency conversion | apiKey | No | Unknown |
| Bank of Russia | Exchange rates and currency conversion | No | Yes | Unknown |
| Currency-api | Free Currency Exchange Rates API with 150+ Currencies & No Rate Limits | No | Yes | Yes |
| CurrencyFreaks | Provides current and historical currency exchange rates with free plan 1K requests/month | apiKey | Yes | Yes |
| Currencylayer | Exchange rates and currency conversion | apiKey | Yes | Unknown |
| CurrencyScoop | Real-time and historical currency rates JSON API | apiKey | Yes | Yes |
| Czech National Bank | A collection of exchange rates | No | Yes | Unknown |
| Economia.Awesome | Portuguese free currency prices and conversion with no rate limits | No | Yes | Unknown |
| ExchangeRate-API | Free currency conversion | apiKey | Yes | Yes |
| Exchangerate.host | Free foreign exchange & crypto rates API | No | Yes | Unknown |
| Exchangeratesapi.io | Exchange rates with currency conversion | apiKey | Yes | Yes |
| Frankfurter | Exchange rates, currency conversion and time series | No | Yes | Yes |
| FreeForexAPI | Real-time foreign exchange rates for major currency pairs | No | Yes | No |
| National Bank of Poland | A collection of currency exchange rates (data in XML and JSON) | No | Yes | Yes |
| VATComply.com | Exchange rates, geolocation and VAT number validation | No | Yes | Yes |
⬆ Back to Index
Data Validation
API | Description | Auth | HTTPS | CORS |
|---|:---|:---|:---|:---|
| Lob.com | US Address Verification | apiKey | Yes | Unknown | |
| Postman Echo | Test api server to receive and return value from HTTP method | No | Yes | Unknown | |
| PurgoMalum | Content validator against profanity & obscenity | No | No | Unknown | |
| US Autocomplete | Enter address data quickly with real-time address suggestions | apiKey | Yes | Yes | |
| US Extract | Extract postal addresses from any text including emails | apiKey | Yes | Yes | |
| US Street Address | Validate and append data for any US postal address | apiKey | Yes | Yes | |
| vatlayer | VAT number validation | apiKey | Yes | Unknown | |
⬆ Back to Index
Development
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 24 Pull Requests | Project to promote open source collaboration during December | No | Yes | Yes |
| Abstract Screenshot | Take programmatic screenshots of web pages from any website | apiKey | Yes | Yes |
| Agify.io | Estimates the age from a first name | No | Yes | Yes |
| API Grátis | Multiples services and public APIs | No | Yes | Unknown |
| ApicAgent | Extract device details from user-agent string | No | Yes | Yes |
| ApiFlash | Chrome based screenshot API for developers | apiKey | Yes | Unknown |
| apilayer userstack | Secure User-Agent String Lookup JSON API | OAuth | Yes | Unknown |
| APIs.guru | Wikipedia for Web APIs, OpenAPI/Swagger specs for public APIs | No | Yes | Unknown |
| Azure DevOps | The Azure DevOps basic components of a REST API request/response pair | apiKey | Yes | Unknown |
| Base | Building quick backends | apiKey | Yes | Yes |
| Beeceptor | Build a mock Rest API endpoint in seconds | No | Yes | Yes |
| Bitbucket | Bitbucket API | OAuth | Yes | Unknown |
| Blague.xyz | La plus grande API de Blagues FR/The biggest FR jokes API | apiKey | Yes | Yes |
| Blitapp | Schedule screenshots of web pages and sync them to your cloud | apiKey | Yes | Unknown |
| Blynk-Cloud | Control IoT Devices from Blynk IoT Cloud | apiKey | No | Unknown |
| Bored | Find random activities to fight boredom | No | Yes | Unknown |
| Brainshop.ai | Make A Free A.I Brain | apiKey | Yes | Yes |
| Browshot | Easily make screenshots of web pages in any screen size, as any device | apiKey | Yes | Yes |
| CDNJS | Library info on CDNJS | No | Yes | Unknown |
| Changelogs.md | Structured changelog metadata from open source projects | No | Yes | Unknown |
| Ciprand | Secure random string generator | No | Yes | No |
| Cloudflare Trace | Get IP Address, Timestamp, User Agent, Country Code, IATA, HTTP Version, TLS/SSL Version & More | No | Yes | Yes |
| Codex | Online Compiler for Various Languages | No | Yes | Unknown |
| Contentful Images | Used to retrieve and apply transformations to images | apiKey | Yes | Yes |
| CORS Proxy | Get around the dreaded CORS error by using this proxy as a middle man | No | Yes | Yes |
| CountAPI | Free and simple counting service. You can use it to track page hits and specific events | No | Yes | Yes |
| Databricks | Service to manage your databricks account,clusters, notebooks, jobs and workspaces | apiKey | Yes | Yes |
| DigitalOcean Status | Status of all DigitalOcean services | No | Yes | Unknown |
| Docker Hub | Interact with Docker Hub | apiKey | Yes | Yes |
| DomainDb Info | Domain name search to find all domains containing particular words/phrases/etc | No | Yes | Unknown |
| ExtendsClass JSON Storage | A simple JSON store API | No | Yes | Yes |
| GeekFlare | Provide numerous capabilities for important testing and monitoring methods for websites | apiKey | Yes | Unknown |
| Genderize.io | Estimates a gender from a first name | No | Yes | Yes |
| GETPing | Trigger an email notification with a simple GET request | apiKey | Yes | Unknown |
| Ghost | Get Published content into your Website, App or other embedded media | apiKey | Yes | Yes |
| GitHub | Make use of GitHub repositories, code and user info programmatically | OAuth | Yes | Yes |
| Gitlab | Automate GitLab interaction programmatically | OAuth | Yes | Unknown |
| Gitter | Chat for Developers | OAuth | Yes | Unknown |
| Glitterly | Image generation API | apiKey | Yes | Yes |
| Google Docs | API to read, write, and format Google Docs documents | OAuth | Yes | Unknown |
| Google Firebase | Google's mobile application development platform that helps build, improve, and grow app | apiKey | Yes | Yes |
| Google Fonts | Metadata for all families served by Google Fonts | apiKey | Yes | Unknown |
| Google Keep | API to read, write, and format Google Keep notes | OAuth | Yes | Unknown |
| Google Sheets | API to read, write, and format Google Sheets data | OAuth | Yes | Unknown |
| Google Slides | API to read, write, and format Google Slides presentations | OAuth | Yes | Unknown |
| Gorest | Online REST API for Testing and Prototyping | OAuth | Yes | Unknown |
| Hasura | GraphQL and REST API Engine with built in Authorization | apiKey | Yes | Yes |
| Heroku | REST API to programmatically create apps, provision add-ons and perform other task on Heroku | OAuth | Yes | Yes |
| host-t.com | Basic DNS query via HTTP GET request | No | Yes | No |
| Host.io | Domains Data API for Developers | apiKey | Yes | Yes |
| HTTP2.Pro | Test endpoints for client and server HTTP/2 protocol support | No | Yes | Unknown |
| Httpbin | A Simple HTTP Request & Response Service | No | Yes | Yes |
| Httpbin Cloudflare | A Simple HTTP Request & Response Service with HTTP/3 Support by Cloudflare | No | Yes | Yes |
| Hunter | API for domain search, professional email finder, author finder and email verifier | apiKey | Yes | Unknown |
| IBM Text to Speech | Convert text to speech | apiKey | Yes | Yes |
| Icanhazepoch | Get Epoch time | No | Yes | Yes |
| Icanhazip | IP Address API | No | Yes | Yes |
| IFTTT | IFTTT Connect API | No | Yes | Unknown |
| Image-Charts | Generate charts, QR codes and graph images | No | Yes | Yes |
| import.io | Retrieve structured data from a website or RSS feed | apiKey | Yes | Unknown |
| ip-fast.com | IP address, country and city | No | Yes | Yes |
| IP2WHOIS Information Lookup | WHOIS domain name lookup | apiKey | Yes | Unknown |
| ipfind.io | Geographic location of an IP address or any domain name along with some other useful information | apiKey | Yes | Yes |
| IPify | A simple IP Address API | No | Yes | Unknown |
| IPinfo | Another simple IP Address API | No | Yes | Unknown |
| jsDelivr | Package info and download stats on jsDelivr CDN | No | Yes | Yes |
| JSON 2 JSONP | Convert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript | No | Yes | Unknown |
| JSONbin.io | Free JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps | apiKey | Yes | Yes |
| Kroki | Creates diagrams from textual descriptions | No | Yes | Yes |
| License-API | Unofficial REST API for choosealicense.com | No | Yes | No |
| Logs.to | Generate logs | apiKey | Yes | Unknown |
| Lua Decompiler | Online Lua 5.1 Decompiler | No | Yes | Yes |
| MAC address vendor lookup | Retrieve vendor details and other information regarding a given MAC address or an OUI | apiKey | Yes | Yes |
| Micro DB | Simple database service | apiKey | Yes | Unknown |
| MicroENV | Fake Rest API for developers | No | Yes | Unknown |
| Mocky | Mock user defined test JSON for REST API endpoints | No | Yes | Yes |
| MY IP | Get IP address information | No | Yes | Unknown |
| Nationalize.io | Estimate the nationality of a first name | No | Yes | Yes |
| Netlify | Netlify is a hosting service for the programmable web | OAuth | Yes | Unknown |
| NetworkCalc | Network calculators, including subnets, DNS, binary, and security tools | No | Yes | Yes |
| npm Registry | Query information about your favorite Node.js libraries programatically | No | Yes | Unknown |
| OneSignal | Self-serve customer engagement solution for Push Notifications, Email, SMS & In-App | apiKey | Yes | Unknown |
| Open Page Rank | API for calculating and comparing metrics of different websites using Page Rank algorithm | apiKey | Yes | Unknown |
| OpenAPIHub | The All-in-one API Platform | X-Mashape-Key | Yes | Unknown |
| OpenGraphr | Really simple API to retrieve Open Graph data from an URL | apiKey | Yes | Unknown |
| oyyi | API for Fake Data, image/video conversion, optimization, pdf optimization and thumbnail generation | No | Yes | Yes |
| PageCDN | Public API for javascript, css and font libraries on PageCDN | apiKey | Yes | Yes |
| Postman | Tool for testing APIs | apiKey | Yes | Unknown |
| ProxyCrawl | Scraping and crawling anticaptcha service | apiKey | Yes | Unknown |
| ProxyKingdom | Rotating Proxy API that produces a working proxy on every request | apiKey | Yes | Yes |
| Pusher Beams | Push notifications for Android & iOS | apiKey | Yes | Unknown |
| QR code | Create an easy to read QR code and URL shortener | No | Yes | Yes |
| QR code | Generate and decode / read QR code graphics | No | Yes | Unknown |
| Qrcode Monkey | Integrate custom and unique looking QR codes into your system or workflow | No | Yes | Unknown |
| QuickChart | Generate chart and graph images | No | Yes | Yes |
| Random Stuff | Can be used to get AI Response, jokes, memes, and much more at lightning-fast speed | apiKey | Yes | Yes |
| Rejax | Reverse AJAX service to notify clients | apiKey | Yes | No |
| ReqRes | A hosted REST-API ready to respond to your AJAX requests | No | Yes | Unknown |
| RSS feed to JSON | Returns RSS feed in JSON format using feed URL | No | Yes | Yes |
| SavePage.io | A free, RESTful API used to screenshot any desktop, or mobile website | apiKey | Yes | Yes |
| ScrapeNinja | Scraping API with Chrome fingerprint and residential proxies | apiKey | Yes | Unknown |
| ScraperApi | Easily build scalable web scrapers | apiKey | Yes | Unknown |
| scraperBox | Undetectable web scraping API | apiKey | Yes | Yes |
| scrapestack | Real-time, Scalable Proxy & Web Scraping REST API | apiKey | Yes | Unknown |
| ScrapingAnt | Headless Chrome scraping with a simple API | apiKey | Yes | Unknown |
| ScrapingDog | Proxy API for Web scraping | apiKey | Yes | Unknown |
| ScreenshotAPI.net | Create pixel-perfect website screenshots | apiKey | Yes | Yes |
| Serialif Color | Color conversion, complementary, grayscale and contrasted text | No | Yes | No |
| serpstack | Real-Time & Accurate Google Search Results API | apiKey | Yes | Yes |
| Sheetsu | Easy google sheets integration | apiKey | Yes | Unknown |
| SHOUTCLOUD | ALL-CAPS AS A SERVICE | No | No | Unknown |
| Sonar | Project Sonar DNS Enumeration API | No | Yes | Yes |
| SonarQube | SonarQube REST APIs to detect bugs, code smells & security vulnerabilities | OAuth | Yes | Unknown |
| StackExchange | Q&A forum for developers | OAuth | Yes | Unknown |
| Statically | A free CDN for developers | No | Yes | Yes |
| Supportivekoala | Autogenerate images with template | apiKey | Yes | Yes |
| Tyk | Api and service management platform | apiKey | Yes | Yes |
| Wandbox | Code compiler supporting 35+ languages mentioned at wandbox.org | No | Yes | Unknown |
| WebScraping.AI | Web Scraping API with built-in proxies and JS rendering | apiKey | Yes | Yes |
| ZenRows | Web Scraping API that bypasses anti-bot solutions while offering JS rendering, and rotating proxies | apiKey | Yes | Unknown |
⬆ Back to Index
Dictionaries
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Chinese Character Web | Chinese character definitions and pronunciations | No | No | No |
| Chinese Text Project | Online open-access digital library for pre-modern Chinese texts | No | Yes | Unknown |
| Collins | Bilingual Dictionary and Thesaurus Data | apiKey | Yes | Unknown |
| Free Dictionary | Definitions, phonetics, pronounciations, parts of speech, examples, synonyms | No | Yes | Unknown |
| Indonesia Dictionary | Indonesia dictionary many words | No | Yes | Unknown |
| Lingua Robot | Word definitions, pronunciations, synonyms, antonyms and others | apiKey | Yes | Yes |
| Merriam-Webster | Dictionary and Thesaurus Data | apiKey | Yes | Unknown |
| OwlBot | Definitions with example sentence and photo if available | apiKey | Yes | Yes |
| Oxford | Dictionary Data | apiKey | Yes | No |
| Synonyms | Synonyms, thesaurus and antonyms information for any given word | apiKey | Yes | Unknown |
| Wiktionary | Collaborative dictionary data | No | Yes | Yes |
| Wordnik | Dictionary Data | apiKey | Yes | Unknown |
| Words | Definitions and synonyms for more than 150,000 words | apiKey | Yes | Unknown |
⬆ Back to Index
Documents & Productivity
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Airtable | Integrate with Airtable | apiKey | Yes | Unknown |
| Api2Convert | Online File Conversion API | apiKey | Yes | Unknown |
| apilayer pdflayer | HTML/URL to PDF | apiKey | Yes | Unknown |
| Asana | Programmatic access to all data in your asana system | apiKey | Yes | Yes |
| ClickUp | ClickUp is a robust, cloud-based project management tool for boosting productivity | OAuth | Yes | Unknown |
| Clockify | Clockify's REST-based API can be used to push/pull data to/from it & integrate it with other systems | apiKey | Yes | Unknown |
| CloudConvert | Online file converter for audio, video, document, ebook, archive, image, spreadsheet, presentation | apiKey | Yes | Unknown |
| Cloudmersive Document and Data Conversion | HTML/URL to PDF/PNG, Office documents to PDF, image conversion | apiKey | Yes | Yes |
| Code::Stats | Automatic time tracking for programmers | apiKey | Yes | No |
| CraftMyPDF | Generate PDF documents from templates with a drop-and-drop editor and a simple API | apiKey | Yes | No |
| Flowdash | Automate business workflows | apiKey | Yes | Unknown |
| Html2PDF | HTML/URL to PDF | apiKey | Yes | Unknown |
| iLovePDF | Convert, merge, split, extract text and add page numbers for PDFs. Free for 250 documents/month | apiKey | Yes | Yes |
| JIRA | JIRA is a proprietary issue tracking product that allows bug tracking and agile project management | OAuth | Yes | Unknown |
| Mattermost | An open source platform for developer collaboration | OAuth | Yes | Unknown |
| Mercury | Web parser | apiKey | Yes | Unknown |
| Monday | Programmatically access and update data inside a monday.com account | apiKey | Yes | Unknown |
| Notion | Integrate with Notion | OAuth | Yes | Unknown |
| PandaDoc | DocGen and eSignatures API | apiKey | Yes | No |
| Pocket | Bookmarking service | OAuth | Yes | Unknown |
| Podio | File sharing and productivity | OAuth | Yes | Unknown |
| PrexView | Data from XML or JSON to PDF, HTML or Image | apiKey | Yes | Unknown |
| Restpack | Provides screenshot, HTML to PDF and content extraction APIs | apiKey | Yes | Unknown |
| Todoist | Todo Lists | OAuth | Yes | Unknown |
| Smart Image Enhancement API | Performs image upscaling by adding detail to images through multiple super-resolution algorithms | apiKey | Yes | Unknown |
| Vector Express v2.0 | Free vector file converting API | No | Yes | No |
| WakaTime | Automated time tracking leaderboards for programmers | No | Yes | Unknown |
| Zube | Full stack project management | OAuth | Yes | Unknown |
⬆ Back to Index
Email
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Abstract Email Validation | Validate email addresses for deliverability and spam | apiKey | Yes | Yes |
| apilayer mailboxlayer | Email address validation | apiKey | Yes | Unknown |
| Cloudmersive Validate | Validate email addresses, phone numbers, VAT numbers and domain names | apiKey | Yes | Yes |
| Disify | Validate and detect disposable and temporary email addresses | No | Yes | Yes |
| DropMail | GraphQL API for creating and managing ephemeral e-mail inboxes | No | Yes | Unknown |
| EVA | Validate email addresses | No | Yes | Yes |
| Guerrilla Mail | Disposable temporary Email addresses | No | Yes | Unknown |
| ImprovMX | API for free email forwarding service | apiKey | Yes | Unknown |
| Kickbox | Email verification API | No | Yes | Yes |
| mail.gw | 10 Minute Mail | No | Yes | Yes |
| mail.tm | Temporary Email Service | No | Yes | Yes |
| MailboxValidator | Validate email address to improve deliverability | apiKey | Yes | Unknown |
| MailCheck.ai | Prevent users to sign up with temporary email addresses | No | Yes | Unknown |
| Mailtrap | A service for the safe testing of emails sent from the development and staging environments | apiKey | Yes | Unknown |
| Sendgrid | A cloud-based SMTP provider that allows you to send emails without having to maintain email servers | apiKey | Yes | Unknown |
| Sendinblue | A service that provides solutions relating to marketing and/or transactional email and/or SMS | apiKey | Yes | Unknown |
| Verifier | Verifies that a given email is real | apiKey | Yes | Yes |
⬆ Back to Index
Entertainment
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| chucknorris.io | JSON API for hand curated Chuck Norris jokes | No | Yes | Unknown |
| Corporate Buzz Words | REST API for Corporate Buzz Words | No | Yes | Yes |
| Excuser | Get random excuses for various situations | No | Yes | Unknown |
| Fun Fact | A simple HTTPS api that can randomly select and return a fact from the FFA database | No | Yes | Yes |
| Imgflip | Gets an array of popular memes | No | Yes | Unknown |
| Meme Maker | REST API for create your own meme | No | Yes | Unknown |
| NaMoMemes | Memes on Narendra Modi | No | Yes | Unknown |
| Random Useless Facts | Get useless, but true facts | No | Yes | Unknown |
| Techy | JSON and Plaintext API for tech-savvy sounding phrases | No | Yes | Unknown |
| Yo Momma Jokes | REST API for Yo Momma Jokes | No | Yes | Unknown |
⬆ Back to Index
Environment
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| BreezoMeter Pollen | Daily Forecast pollen conditions data for a specific location | apiKey | Yes | Unknown |
| Carbon Interface | API to calculate carbon (C02) emissions estimates for common C02 emitting activities | apiKey | Yes | Yes |
| Climatiq | Calculate the environmental footprint created by a broad range of emission-generating activities | apiKey | Yes | Yes |
| Cloverly | API calculates the impact of common carbon-intensive activities in real time | apiKey | Yes | Unknown |
| CO2 Offset | API calculates and validates the carbon footprint | No | Yes | Unknown |
| Danish data service Energi | Open energy data from Energinet to society | No | Yes | Unknown |
| GrünstromIndex | Green Power Index for Germany (Grünstromindex/GSI) | No | No | Yes |
| IQAir | Air quality and weather data | apiKey | Yes | Unknown |
| Luchtmeetnet | Predicted and actual air quality components for The Netherlands (RIVM) | No | Yes | Unknown |
| National Grid ESO | Open data from Great Britain’s Electricity System Operator | No | Yes | Unknown |
| OpenAQ | Open air quality data | apiKey | Yes | Unknown |
| PM2.5 Open Data Portal | Open low-cost PM2.5 sensor data | No | Yes | Unknown |
| PM25.in | Air quality of China | apiKey | No | Unknown |
| PVWatts | Energy production photovoltaic (PV) energy systems | apiKey | Yes | Unknown |
| Srp Energy | Hourly usage energy report for Srp customers | apiKey | Yes | No |
| UK Carbon Intensity | The Official Carbon Intensity API for Great Britain developed by National Grid | No | Yes | Unknown |
| Website Carbon | API to estimate the carbon footprint of loading web pages | No | Yes | Unknown |
⬆ Back to Index
Events
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Eventbrite | Find events | OAuth | Yes | Unknown |
| SeatGeek | Search events, venues and performers | apiKey | Yes | Unknown |
| Ticketmaster | Search events, attractions, or venues | apiKey | Yes | Unknown |
⬆ Back to Index
Finance
API | Description | Auth | HTTPS | CORS |
|---|:---|:---|:---|:---|
| Abstract VAT Validation | Validate VAT numbers and calculate VAT rates | apiKey | Yes | Yes | |
| Aletheia | Insider trading data, earnings call analysis, financial statements, and more | apiKey | Yes | Yes | |
| Alpaca | Realtime and historical market data on all US equities and ETFs | apiKey | Yes | Yes | |
| Alpha Vantage | Realtime and historical stock data | apiKey | Yes | Unknown | |
| apilayer marketstack | Real-Time, Intraday & Historical Market Data API | apiKey | Yes | Unknown | |
| Banco do Brasil | All Banco do Brasil financial transaction APIs | OAuth | Yes | Yes | |
| Bank Data API | Instant IBAN and SWIFT number validation across the globe | apiKey | Yes | Unknown | |
| Billplz | Payment platform | apiKey | Yes | Unknown | |
| Binlist | Public access to a database of IIN/BIN information | No | Yes | Unknown | |
| Boleto.Cloud | A api to generate boletos in Brazil | apiKey | Yes | Unknown | |
| Citi | All Citigroup account and statement data APIs | apiKey | Yes | Unknown | |
| Econdb | Global macroeconomic data | No | Yes | Yes | |
| Fed Treasury | U.S. Department of the Treasury Data | No | Yes | Unknown | |
| Finage | Finage is a stock, currency, cryptocurrency, indices, and ETFs real-time & historical data provider | apiKey | Yes | Unknown | |
| Financial Modeling Prep | Realtime and historical stock data | apiKey | Yes | Unknown | |
| Finnhub | Real-Time RESTful APIs and Websocket for Stocks, Currencies, and Crypto | apiKey | Yes | Unknown | |
| FRED | Economic data from the Federal Reserve Bank of St. Louis | apiKey | Yes | Yes | |
| Front Accounting APIs | Front accounting is multilingual and multicurrency software for small businesses | OAuth | Yes | Yes | |
| Hotstoks | Stock market data powered by SQL | apiKey | Yes | Yes | |
| IEX Cloud | Realtime & Historical Stock and Market Data | apiKey | Yes | Yes | |
| IG | Spreadbetting and CFD Market Data | apiKey | Yes | Unknown | |
| Indian Mutual Fund | Get complete history of India Mutual Funds Data | No | Yes | Unknown | |
| Intrinio | A wide selection of financial data feeds | apiKey | Yes | Unknown | |
| Klarna | Klarna payment and shopping service | apiKey | Yes | Unknown | |
| MercadoPago | Mercado Pago API reference - all the information you need to develop your integrations | apiKey | Yes | Unknown | |
| Mono | Connect with users’ bank accounts and access transaction data in Africa | apiKey | Yes | Unknown | |
| Moov | The Moov API makes it simple for platforms to send, receive, and store money | apiKey | Yes | Unknown | |
| Nordigen | Connect to bank accounts using official bank APIs and get raw transaction data | apiKey | Yes | Unknown | |
| OpenFIGI | Equity, index, futures, options symbology from Bloomberg LP | apiKey | Yes | Yes | |
| Plaid | Connect with user's bank accounts and access transaction data    | apiKey | YES | |  |
| Polygon | Historical stock market data | apiKey | Yes | Unknown | |
| Portfolio Optimizer | Portfolio analysis and optimization | No | Yes | Yes | |
| Razorpay IFSC | Indian Financial Systems Code (Bank Branch Codes) | No | Yes | Unknown | |
| Real Time Finance | Websocket API to access realtime stock data | apiKey | No | Unknown | |
| SEC EDGAR Data | API to access annual reports of public US companies | No | Yes | Yes | |
| SmartAPI | Gain access to set of  and create end-to-end broking services | apiKey | Yes | Unknown | |
| StockData | Real-Time, Intraday & Historical Market Data, News and Sentiment API | apiKey | Yes | Yes | |
| Styvio | Realtime and historical stock data and current stock sentiment | apiKey | Yes | Unknown | |
| Tax Data API | Instant VAT number and tax validation across the globe | apiKey | Yes | Unkown | |
| Tradier | US equity/option market data (delayed, intraday, historical) | OAuth | Yes | Yes | |
| Twelve Data | Stock market data (real-time & historical) | apiKey | Yes | Unknown | |
| WallstreetBets | WallstreetBets Stock Comments Sentiment Analysis | No | Yes | Unknown | |
| Yahoo Finance | Real time low latency Yahoo Finance API for stock market, crypto currencies, and currency exchange | apiKey | Yes | Yes | |
| YNAB | Budgeting & Planning | OAuth | Yes | Yes | |
| Zoho Books | Online accounting software, built for your business | OAuth | Yes | Unknown | |
⬆ Back to Index
Food & Drink
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| BaconMockup | Resizable bacon placeholder images | No | Yes | Yes |
| Chomp | Data about various grocery products and foods | apiKey | Yes | Unknown |
| Coffee | Random pictures of coffee | No | Yes | Unknown |
| Edamam nutrition | Nutrition Analysis | apiKey | Yes | Unknown |
| Edamam recipes | Recipe Search | apiKey | Yes | Unknown |
| Foodish | Random pictures of food dishes | No | Yes | Yes |
| Fruityvice | Data about all kinds of fruit | No | Yes | Unknown |
| Kroger | Supermarket Data | apiKey | Yes | Unknown |
| LCBO | Alcohol | apiKey | Yes | Unknown |
| Open Brewery DB | Breweries, Cideries and Craft Beer Bottle Shops | No | Yes | Yes |
| Open Food Facts | Food Products Database | No | Yes | Unknown |
| PunkAPI | Brewdog Beer Recipes | No | Yes | Unknown |
| Rustybeer | Beer brewing tools | No | Yes | No |
| Spoonacular | Recipes, Food Products, and Meal Planning | apiKey | Yes | Unknown |
| Systembolaget | Govornment owned liqour store in Sweden | apiKey | Yes | Unknown |
| TacoFancy | Community-driven taco database | No | No | Unknown |
| Tasty | API to query data about recipe, plan, ingredients | apiKey | Yes | Unknown |
| The Report of the Week | Food & Drink Reviews | No | Yes | Unknown |
| TheCocktailDB | Cocktail Recipes | apiKey | Yes | Yes |
| TheMealDB | Meal Recipes | apiKey | Yes | Yes |
| Untappd | Social beer sharing | OAuth | Yes | Unknown |
| What's on the menu? | NYPL human-transcribed historical menu collection | apiKey | No | Unknown |
| WhiskyHunter | Past online whisky auctions statistical data | No | Yes | Unknown |
| Zestful | Parse recipe ingredients | apiKey | Yes | Yes |
⬆ Back to Index
Games & Comics
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Age of Empires II | Get information about Age of Empires II resources | No | Yes | No |
| AmiiboAPI | Nintendo Amiibo Information | No | Yes | Yes |
| Animal Crossing: New Horizons | API for critters, fossils, art, music, furniture and villagers | No | Yes | Unknown |
| Autochess VNG | Rest Api for Autochess VNG | No | Yes | Yes |
| Barter.VG | Provides information about Game, DLC, Bundles, Giveaways, Trading | No | Yes | Yes |
| Battle.net | Diablo III, Hearthstone, StarCraft II and World of Warcraft game data APIs | OAuth | Yes | Yes |
| Board Game Geek | Board games, RPG and videogames | No | Yes | No |
| Brawl Stars | Brawl Stars Game Information | apiKey | Yes | Unknown |
| Bugsnax | Get information about Bugsnax | No | Yes | Yes |
| CheapShark | Steam/PC Game Prices and Deals | No | Yes | Yes |
| Chess.com | Chess.com read-only REST API | No | Yes | Unknown |
| Chuck Norris Database | Jokes | No | No | Unknown |
| Clash of Clans | Clash of Clans Game Information | apiKey | Yes | Unknown |
| Clash Royale | Clash Royale Game Information | apiKey | Yes | Unknown |
| Comic Vine | Comics | No | Yes | Unknown |
| Crafatar | API for Minecraft skins and faces | No | Yes | Yes |
| Cross Universe | Cross Universe Card Data | No | Yes | Yes |
| Deck of Cards | Deck of Cards | No | No | Unknown |
| Destiny The Game | Bungie Platform API | apiKey | Yes | Unknown |
| Digimon Information | Provides information about digimon creatures | No | Yes | Unknown |
| Digimon TCG | Search for Digimon cards in digimoncard.io | No | Yes | Unknown |
| Disney | Information of Disney characters | No | Yes | Yes |
| Dota 2 | Provides information about Player stats , Match stats, Rankings for Dota 2 | apiKey | Yes | Unknown |
| Dungeons and Dragons | Reference for 5th edition spells, classes, monsters, and more | No | No | No |
| Dungeons and Dragons (Alternate) | Includes all monsters and spells from the SRD (System Reference Document) as well as a search API | No | Yes | Yes |
| Eve Online | Third-Party Developer Documentation | OAuth | Yes | Unknown |
| FFXIV Collect | Final Fantasy XIV data on collectables | No | Yes | Yes |
| FIFA Ultimate Team | FIFA Ultimate Team items API | No | Yes | Unknown |
| Final Fantasy XIV | Final Fantasy XIV Game data API | No | Yes | Yes |
| Fortnite | Fortnite Stats | apiKey | Yes | Unknown |
| Forza | Show random image of car from Forza | No | Yes | Unknown |
| FreeToGame | Free-To-Play Games Database | No | Yes | Yes |
| Fun Facts | Random Fun Facts | No | Yes | Yes |
| FunTranslations | Translate Text into funny languages | No | Yes | Yes |
| GamerPower | Game Giveaways Tracker | No | Yes | Yes |
| GDBrowser | Easy way to use the Geometry Dash Servers | No | Yes | Unknown |  
| Geek-Jokes | Fetch a random geeky/programming related joke for use in all sorts of applications | No | Yes | Yes |
| Genshin Impact | Genshin Impact game data | No | Yes | Yes |
| Giant Bomb | Video Games | apiKey | Yes | Unknown |
| GraphQL Pokemon | GraphQL powered Pokemon API. Supports generations 1 through 8 | No | Yes | Yes |
| Guild Wars 2 | Guild Wars 2 Game Information | apiKey | Yes | Unknown |
| GW2Spidy | GW2Spidy API, Items data on the Guild Wars 2 Trade Market | No | Yes | Unknown |
| Halo | Halo 5 and Halo Wars 2 Information | apiKey | Yes | Unknown |
| Hearthstone | Hearthstone Cards Information | X-Mashape-Key | Yes | Unknown |
| Humble Bundle | Humble Bundle's current bundles | apiKey | Yes | Unknown |
| Humor | Humor, Jokes, and Memes | apiKey | Yes | Unknown |
| Hypixel | Hypixel player stats | apiKey | Yes | Unknown |
| Hyrule Compendium | Data on all interactive items from The Legend of Zelda: BOTW | No | Yes | Unknown |
| Hytale | Hytale blog posts and jobs | No | Yes | Unknown |
| IGDB.com | Video Game Database | apiKey | Yes | Unknown |
| JokeAPI | Programming, Miscellaneous and Dark Jokes | No | Yes | Yes |
| Jokes One | Joke of the day and large category of jokes accessible via REST API | apiKey | Yes | Yes |
| Jservice | Jeopardy Question Database | No | No | Unknown |
| Lichess | Access to all data of users, games, puzzles and etc on Lichess | OAuth | Yes | Unknown |
| Magic The Gathering | Magic The Gathering Game Information | No | No | Unknown |
| Mario Kart Tour | API for Drivers, Karts, Gliders and Courses | OAuth | Yes | Unknown |
| Marvel | Marvel Comics | apiKey | Yes | Unknown |
| Minecraft Server Status | API to get Information about a Minecraft Server | No | Yes | No |  
| MMO Games | MMO Games Database, News and Giveaways | No | Yes | No |
| mod.io | Cross Platform Mod API | apiKey | Yes | Unknown |
| Mojang | Mojang / Minecraft API | apiKey | Yes | Unknown |
| Monster Hunter World | Monster Hunter World data | No | Yes | Yes |
| Open Trivia | Trivia Questions | No | Yes | Unknown |
| PandaScore | E-sports games and results | apiKey | Yes | Unknown |
| Path of Exile | Path of Exile Game Information | OAuth | Yes | Unknown |
| PlayerDB | Query Minecraft, Steam and XBox Accounts | No | Yes | Unknown |
| Pokéapi | Pokémon Information | No | Yes | Unknown |
| PokéAPI (GraphQL) | The Unofficial GraphQL for PokeAPI | No | Yes | Yes |
| Pokémon TCG | Pokémon TCG Information | No | Yes | Unknown |
| Psychonauts | Psychonauts World Characters Information and PSI Powers | No | Yes | Yes |
| PUBG | Access in-game PUBG data | apiKey | Yes | Yes |
| Puyo Nexus | Puyo Puyo information from Puyo Nexus Wiki | No | Yes | Yes |
| quizapi.io | Access to various kind of quiz questions | apiKey | Yes | Yes |
| Raider | Provides detailed character and guild rankings for Raiding and Mythic+ content in World of Warcraft | No | Yes | Unknown |
| RAWG.io | 500,000+ games for 50 platforms including mobiles | apiKey | Yes | Unknown |
| Rick and Morty | All the Rick and Morty information, including images | No | Yes | Yes |
| Riot Games | League of Legends Game Information | apiKey | Yes | Unknown |
| RPS 101 | Rock, Paper, Scissors with 101 objects | No | Yes | Yes |
| RuneScape | RuneScape and OSRS RPGs information | No | Yes | No |
| Sakura CardCaptor | Sakura CardCaptor Cards Information | No | Yes | Unknown |
| Scryfall | Magic: The Gathering database | No | Yes | Yes |
| SpaceTradersAPI | A playable inter-galactic space trading MMOAPI | OAuth | Yes | Yes |
| Steam | Steam Web API documentation | apiKey | Yes | No |
| Steam | Internal Steam Web API documentation | No | Yes | No |
| SuperHeroes | All SuperHeroes and Villains data from all universes under a single API | apiKey | Yes | Unknown |
| TCGdex | Multi languages Pokémon TCG Information | No | Yes | Yes |
| Tebex | Tebex API for information about game purchases | X-Mashape-Key | Yes | No |
| TETR.IO | TETR.IO Tetra Channel API | No | Yes | Unknown |
| Tronald Dump | The dumbest things Donald Trump has ever said | No | Yes | Unknown |
| Universalis | Final Fantasy XIV market board data | No | Yes | Yes |
| Valorant (non-official) | An extensive API containing data of most Valorant in-game items, assets and more | No | Yes | Unknown |
| Warface (non-official) | Official API proxy with better data structure and more features | No | Yes | No |
| Wargaming.net | Wargaming.net info and stats | apiKey | Yes | No |
| When is next MCU film | Upcoming MCU film information | No | Yes | Unknown |
| xkcd | Retrieve xkcd comics as JSON | No | Yes | No |
| Yu-Gi-Oh! | Yu-Gi-Oh! TCG Information | No | Yes | Unknown |
⬆ Back to Index
Geocoding
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Abstract IP Geolocation | Geolocate website visitors from their IPs | apiKey | Yes | Yes |
| Actinia Grass GIS | Actinia is an open source REST API for geographical data that uses GRASS GIS | apiKey | Yes | Unknown |
| administrative-divisons-db | Get all administrative divisions of a country | No | Yes | Yes |
| adresse.data.gouv.fr | Address database of France, geocoding and reverse | No | Yes | Unknown |
| Airtel IP | IP Geolocation API. Collecting data from multiple sources | No | Yes | Unknown |
| Apiip | Get location information by IP address | apiKey | Yes | Yes |
| apilayer ipstack | Locate and identify website visitors by IP address | apiKey | Yes | Unknown |
| Battuta | A (country/region/city) in-cascade location API | apiKey | No | Unknown |
| BigDataCloud | Provides fast and accurate IP geolocation APIs along with security checks and confidence area | apiKey | Yes | Unknown |
| Bing Maps | Create/customize digital maps based on Bing Maps data | apiKey | Yes | Unknown |
| bng2latlong | Convert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude | No | Yes | Yes |
| Cartes.io | Create maps and markers for anything | No | Yes | Unknown |
| Cep.la | Brazil RESTful API to find information about streets, zip codes, neighborhoods, cities and states | No | No | Unknown |
| CitySDK | Open APIs for select European cities | No | Yes | Unknown |
| Country | Get your visitor's country from their IP | No | Yes | Yes |
| CountryStateCity | World countries, states, regions, provinces, cities & towns in JSON, SQL, XML, YAML, & CSV format | apiKey | Yes | Yes |
| Ducks Unlimited | API explorer that gives a query URL with a JSON response of locations and cities | No | Yes | No |
| GeoApi | French geographical data | No | Yes | Unknown |
| Geoapify | Forward and reverse geocoding, address autocomplete | apiKey | Yes | Yes |
| Geocod.io | Address geocoding / reverse geocoding in bulk | apiKey | Yes | Unknown |
| Geocode.xyz | Provides worldwide forward/reverse geocoding, batch geocoding and geoparsing | No | Yes | Unknown |
| Geocodify.com | Worldwide geocoding, geoparsing and autocomplete for addresses | apiKey | Yes | Yes |
| Geodata.gov.gr | Open geospatial data and API service for Greece | No | Yes | Unknown |
| GeoDataSource | Geocoding of city name by using latitude and longitude coordinates | apiKey | Yes | Unknown |
| GeoDB Cities | Get global city, region, and country data | apiKey | Yes | Unknown |
| GeographQL | A Country, State, and City GraphQL API | No | Yes | Yes |
| GeoJS | IP geolocation with ChatOps integration | No | Yes | Yes |
| Geokeo | Geokeo geocoding service- with 2500 free api requests daily | No | Yes | Yes |
| GeoNames | Place names and other geographical data | No | No | Unknown |
| geoPlugin | IP geolocation and currency conversion | No | Yes | Yes |
| Google Earth Engine | A cloud-based platform for planetary-scale environmental data analysis | apiKey | Yes | Unknown |
| Google Maps | Create/customize digital maps based on Google Maps data | apiKey | Yes | Unknown |
| Graph Countries | Country-related data like currencies, languages, flags, regions+subregions and bordering countries | No | Yes | Unknown |
| HelloSalut | Get hello translation following user language | No | Yes | Unknown |
| HERE Maps | Create/customize digital maps based on HERE Maps data | apiKey | Yes | Unknown |
| Hirak IP to Country | Ip to location with country code, currency code & currency name, fast response, unlimited requests | apiKey | Yes | Unknown |
| Hong Kong GeoData Store | API for accessing geo-data of Hong Kong | No | Yes | Unknown |
| IBGE | Aggregate services of IBGE (Brazilian Institute of Geography and Statistics) | No | Yes | Unknown |
| IP 2 Country | Map an IP to a country | No | Yes | Unknown |
| IP Address Details | Find geolocation with ip address | No | Yes | Unknown |
| IP Vigilante | Free IP Geolocation API | No | Yes | Unknown |
| ip-api | Find location with IP address or domain | No | No | Unknown |
| IP2Location | IP geolocation web service to get more than 55 parameters | apiKey | Yes | Unknown |
| IP2Proxy | Detect proxy and VPN using IP address | apiKey | Yes | Unknown |
| ipapi.co | Find IP address location information | No | Yes | Yes |
| ipapi.com | Real-time Geolocation & Reverse IP Lookup REST API | apiKey | Yes | Unknown |
| IPGEO | Unlimited free IP Address API with useful information | No | Yes | Unknown |
| ipgeolocation | IP Geolocation AP with free plan 30k requests per month | apiKey | Yes | Yes |
| IPInfoDB | Free Geolocation tools and APIs for country, region, city and time zone lookup by IP address | apiKey | Yes | Unknown |
| ipstack | Locate and identify website visitors by IP address | apiKey | Yes | Unknown |
| Kakao Maps | Kakao Maps provide multiple APIs for Korean maps | apiKey | Yes | Unknown |
| keycdn IP Location Finder | Get the IP geolocation data through the simple REST API. All the responses are JSON encoded | apiKey | Yes | Unknown |
| LocationIQ | Provides forward/reverse geocoding and batch geocoding | apiKey | Yes | Yes |
| Longdo Map | Interactive map with detailed places and information portal in Thailand | apiKey | Yes | Yes |
| Mapbox | Create/customize beautiful digital maps | apiKey | Yes | Unknown |
| MapQuest | To access tools and resources to map the world | apiKey | Yes | No | Yes
| Mexico | Mexico RESTful zip codes API | No | Yes | Unknown |
| Nominatim | Provides worldwide forward / reverse geocoding | No | Yes | Yes |
| One Map, Singapore | Singapore Land Authority REST API services for Singapore addresses | apiKey | Yes | Unknown |
| OnWater | Determine if a lat/lon is on water or land | No | Yes | Unknown |
| Open Topo Data | Elevation and ocean depth for a latitude and longitude | No | Yes | No |
| OpenCage | Forward and reverse geocoding using open data | apiKey | Yes | Yes |
| openrouteservice.org | Directions, POIs, isochrones, geocoding (+reverse), elevation, and more | apiKey | Yes | Unknown |
| OpenStreetMap | Navigation, geolocation and geographical data | OAuth | No | Unknown |
| Pinball Map | A crowdsourced map of public pinball machines | No | Yes | Yes |
| positionstack | Forward & Reverse Batch Geocoding REST API | apiKey | Yes | Unknown |
| Postali | Mexico Zip Codes API | No | Yes | Yes |
| PostcodeData.nl | Provide geolocation data based on postcode for Dutch addresses | No | No | Unknown |
| Postcodes.io | Postcode lookup & Geolocation for the UK | No | Yes | Yes |
| Queimadas INPE | Access to heat focus data (probable wildfire) | No | Yes | Unknown |
| REST Countries | Get information about countries via a RESTful API | No | Yes | Yes |
| RoadGoat Cities | Cities content & photos API | apiKey | Yes | No |
| Rwanda Locations | Rwanda Provences, Districts, Cities, Capital City, Sector, cells, villages and streets | No | Yes | Unknown |
| SLF | German city, country, river, database | No | Yes | Yes |
| SpotSense | Add location based interactions to your mobile app | apiKey | Yes | Unknown |
| Telize | Telize offers location information from any IP address | apiKey | Yes | Yes |
| TomTom | Maps, Directions, Places and Traffic APIs | apiKey | Yes | Yes |
| Uebermaps | Discover and share maps with friends | apiKey | Yes | Unknown |
| US ZipCode | Validate and append data for any US ZipCode | apiKey | Yes | Yes |
| Utah AGRC | Utah Web API for geocoding Utah addresses | apiKey | Yes | Unknown |
| ViaCep | Brazil RESTful zip codes API | No | Yes | Unknown |
| What3Words | Three words as rememberable and unique coordinates worldwide | apiKey | Yes | Unknown |
| Yandex.Maps Geocoder | Use geocoding to get an object's coordinates from its address | apiKey | Yes | Unknown |
| ZipCodeAPI | US zip code distance, radius and location API | apiKey | Yes | Unknown |
| Zippopotam.us | Get information about place such as country, city, state, etc | No | No | Unknown |
| Ziptastic | Get the country, state, and city of any US zip-code | No | Yes | Unknown |
⬆ Back to Index
Government
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Bank Negara Malaysia Open Data | Malaysia Central Bank Open Data | No | Yes | Unknown |
| BCLaws | Access to the laws of British Columbia | No | No | Unknown |
| Brazil | Community driven API for Brazil Public Data | No | Yes | Yes |
| Brazil Central Bank Open Data | Brazil Central Bank Open Data | No | Yes | Unknown |
| Brazil Receita WS | Consult companies by CNPJ for Brazilian companies | No | Yes | Unknown |
| Brazilian Chamber of Deputies Open Data | Provides legislative information in Apis XML and JSON, as well as files in various formats | No | Yes | No |
| Census.gov | The US Census Bureau provides various APIs and data sets on demographics and businesses | No | Yes | Unknown |
| City, Berlin | Berlin(DE) City Open Data | No | Yes | Unknown |
| City, Gdańsk | Gdańsk (PL) City Open Data | No | Yes | Unknown |
| City, Gdynia | Gdynia (PL) City Open Data | No | No | Unknown |
| City, Helsinki | Helsinki(FI) City Open Data | No | Yes | Unknown |
| City, Lviv | Lviv(UA) City Open Data | No | Yes | Unknown |
| City, Nantes Open Data | Nantes(FR) City Open Data | apiKey | Yes | Unknown |
| City, New York Open Data | New York (US) City Open Data | No | Yes | Unknown |
| City, Prague Open Data | Prague(CZ) City Open Data | No | No | Unknown |
| City, Toronto Open Data | Toronto (CA) City Open Data | No | Yes | Yes |
| Code.gov | The primary platform for Open Source and code sharing for the U.S. Federal Government | apiKey | Yes | Unknown |
| Colorado Information Marketplace | Colorado State Government Open Data | No | Yes | Unknown |
| Data USA | US Public Data | No | Yes | Unknown |
| Data.gov | US Government Data | apiKey | Yes | Unknown |
| Data.parliament.uk | Contains live datasets including information about petitions, bills, MP votes, attendance and more | No | No | Unknown |
| Deutscher Bundestag DIP | This API provides read access to DIP entities (e.g. activities, persons, printed material) | apiKey | Yes | Unknown |
| District of Columbia Open Data | Contains D.C. government public datasets, including crime, GIS, financial data, and so on | No | Yes | Unknown |
| EPA | Web services and data sets from the US Environmental Protection Agency | No | Yes | Unknown |
| FBI Wanted | Access information on the FBI Wanted program | No | Yes | Unknown |
| FEC | Information on campaign donations in federal elections | apiKey | Yes | Unknown |
| Federal Register | The Daily Journal of the United States Government | No | Yes | Unknown |
| Food Standards Agency | UK food hygiene rating data API | No | No | Unknown |
| Gazette Data, UK | UK official public record API | OAuth | Yes | Unknown |
| Gun Policy | International firearm injury prevention and policy | apiKey | Yes | Unknown |
| INEI | Peruvian Statistical Government Open Data | No | No | Unknown |
| Interpol Red Notices | Access and search Interpol Red Notices | No | Yes | Unknown |
| Istanbul (İBB) Open Data | Data sets from the İstanbul Metropolitan Municipality (İBB) | No | Yes | Unknown |
| National Park Service, US | Data from the US National Park Service | apiKey | Yes | Yes |
| Open Government, ACT | Australian Capital Territory Open Data | No | Yes | Unknown |
| Open Government, Argentina | Argentina Government Open Data | No | Yes | Unknown |
| Open Government, Australia | Australian Government Open Data | No | Yes | Unknown |
| Open Government, Austria | Austria Government Open Data | No | Yes | Unknown |
| Open Government, Belgium | Belgium Government Open Data | No | Yes | Unknown |
| Open Government, Canada | Canadian Government Open Data | No | No | Unknown |
| Open Government, Colombia | Colombia Government Open Data | No | No | Unknown |
| Open Government, Cyprus | Cyprus Government Open Data | No | Yes | Unknown |
| Open Government, Czech Republic | Czech Republic Government Open Data | No | Yes | Unknown |
| Open Government, Denmark | Denmark Government Open Data | No | Yes | Unknown |
| Open Government, Estonia | Estonia Government Open Data | apiKey | Yes | Unknown |
| Open Government, Finland | Finland Government Open Data | No | Yes | Unknown |
| Open Government, France | French Government Open Data | apiKey | Yes | Unknown |
| Open Government, Germany | Germany Government Open Data | No | Yes | Unknown |
| Open Government, Greece | Greece Government Open Data | OAuth | Yes | Unknown |
| Open Government, India | Indian Government Open Data | apiKey | Yes | Unknown |
| Open Government, Ireland | Ireland Government Open Data | No | Yes | Unknown |
| Open Government, Italy | Italy Government Open Data | No | Yes | Unknown |
| Open Government, Korea | Korea Government Open Data | apiKey | Yes | Unknown |
| Open Government, Lithuania | Lithuania Government Open Data | No | Yes | Unknown |
| Open Government, Luxembourg | Luxembourgish Government Open Data | apiKey | Yes | Unknown |
| Open Government, Mexico | Mexican Statistical Government Open Data | No | Yes | Unknown |
| Open Government, Mexico | Mexico Government Open Data | No | Yes | Unknown |
| Open Government, Netherlands | Netherlands Government Open Data | No | Yes | Unknown |
| Open Government, New South Wales | New South Wales Government Open Data | apiKey | Yes | Unknown |
| Open Government, New Zealand | New Zealand Government Open Data | No | Yes | Unknown |
| Open Government, Norway | Norwegian Government Open Data | No | Yes | Yes |
| Open Government, Peru | Peru Government Open Data | No | Yes | Unknown |
| Open Government, Poland | Poland Government Open Data | No | Yes | Yes |
| Open Government, Portugal | Portugal Government Open Data | No | Yes | Yes |
| Open Government, Queensland Government | Queensland Government Open Data | No | Yes | Unknown |
| Open Government, Romania | Romania Government Open Data | No | No | Unknown |
| Open Government, Saudi Arabia | Saudi Arabia Government Open Data | No | Yes | Unknown |
| Open Government, Singapore | Singapore Government Open Data | No | Yes | Unknown |
| Open Government, Slovakia | Slovakia Government Open Data | No | Yes | Unknown |
| Open Government, Slovenia | Slovenia Government Open Data | No | Yes | No |
| Open Government, South Australian Government | South Australian Government Open Data | No | Yes | Unknown |
| Open Government, Spain | Spain Government Open Data | No | Yes | Unknown |
| Open Government, Sweden | Sweden Government Open Data | No | Yes | Unknown |
| Open Government, Switzerland | Switzerland Government Open Data | No | Yes | Unknown |
| Open Government, Taiwan | Taiwan Government Open Data | No | Yes | Unknown |
| Open Government, Thailand | Thailand Government Open Data | apiKey | Yes | Unknown |
| Open Government, UK | UK Government Open Data | No | Yes | Unknown |
| Open Government, USA | United States Government Open Data | No | Yes | Unknown |
| Open Government, Victoria State Government | Victoria State Government Open Data | No | Yes | Unknown |
| Open Government, West Australia | West Australia Open Data | No | Yes | Unknown |
| PRC Exam Schedule | Unofficial Philippine Professional Regulation Commission's examination schedule | No | Yes | Yes |
| Represent by Open North | Find Canadian Government Representatives | No | Yes | Unknown |
| UK Companies House | UK Companies House Data from the UK government | OAuth | Yes | Unknown |
| US Presidential Election Data by TogaTech | Basic candidate data and live electoral vote counts for top two parties in US presidential election | No | Yes | No |
| USA.gov | Authoritative information on U.S. programs, events, services and more | apiKey | Yes | Unknown |
| USAspending.gov | US federal spending data | No | Yes | Unknown |
⬆ Back to Index
Health
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| CMS.gov | Access to the data from the CMS - medicare.gov | apiKey | Yes | Unknown |
| Coronavirus | HTTP API for Latest Covid-19 Data | No | Yes | Unknown |
| Coronavirus in the UK | UK Government coronavirus data, including deaths and cases by region | No | Yes | Unknown |
| Covid Tracking Project | Covid-19  data for the US | No | Yes | No |
| Covid-19 | Covid 19 spread, infection and recovery | No | Yes | Yes |
| Covid-19 | Covid 19 cases, deaths and recovery per country | No | Yes | Yes |
| Covid-19 Datenhub | Maps, datasets, applications and more in the context of COVID-19 | No | Yes | Unknown |
| Covid-19 Government Response | Government measures tracker to fight against the Covid-19 pandemic | No | Yes | Yes |
| Covid-19 India | Covid 19 statistics state and district wise about cases, vaccinations, recovery within India | No | Yes | Unknown |
| Covid-19 JHU CSSE | Open-source API for exploring Covid19 cases based on JHU CSSE | No | Yes | Yes |
| Covid-19 Live Data | Global and countrywise data of Covid 19 daily Summary, confirmed cases, recovered and deaths | No | Yes | Yes |
| Covid-19 Philippines | Unofficial Covid-19 Web API for Philippines from data collected by DOH | No | Yes | Yes |
| COVID-19 Tracker Canada | Details on Covid-19 cases across Canada | No | Yes | Unknown |
| COVID-19 Tracker Sri Lanka | Provides situation of the COVID-19 patients reported in Sri Lanka | No | Yes | Unknown |
| COVID-ID | Indonesian government Covid data per province | No | Yes | Yes |
| Dataflow Kit COVID-19 | COVID-19 live statistics into sites per hour | No | Yes | Unknown |
| FoodData Central | National Nutrient Database for Standard Reference | apiKey | Yes | Unknown |
| Healthcare.gov | Educational content about the US Health Insurance Marketplace | No | Yes | Unknown |
| Humanitarian Data Exchange | Humanitarian Data Exchange (HDX) is open platform for sharing data across crises and organisations | No | Yes | Unknown |
| Infermedica | NLP based symptom checker and patient triage API for health diagnosis from text | apiKey | Yes | Yes |
| LAPIS | SARS-CoV-2 genomic sequences from public sources | No | Yes | Yes |
| Lexigram | NLP that extracts mentions of clinical concepts from text, gives access to clinical ontology | apiKey | Yes | Unknown |
| Makeup | Makeup Information | No | No | Unknown |
| MyVaccination | Vaccination data for Malaysia | No | Yes | Unknown |
| NPPES | National Plan & Provider Enumeration System, info on healthcare providers registered in US | No | Yes | Unknown |
| Nutritionix | Worlds largest verified nutrition database | apiKey | Yes | Unknown |
| Open Data NHS Scotland | Medical reference data and statistics by Public Health Scotland | No | Yes | Unknown |
| Open Disease | API for Current cases and more stuff about COVID-19 and Influenza | No | Yes | Yes |
| openFDA | Public FDA data about drugs, devices and foods | apiKey | Yes | Unknown |
| Orion Health | Medical platform which allows the development of applications for different healthcare scenarios | OAuth | Yes | Unknown |
| Quarantine | Coronavirus API with free COVID-19 live updates | No | Yes | Yes |
⬆ Back to Index
Jobs
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Adzuna | Job board aggregator | apiKey | Yes | Unknown |
| Arbeitnow | API for Job board aggregator in Europe / Remote | No | Yes | Yes |
| Arbeitsamt | API for the ""Arbeitsamt"", which is a german Job board aggregator | OAuth | Yes | Unknown |
| Careerjet | Job search engine | apiKey | No | Unknown |
| DevITjobs UK | Jobs with GraphQL | No | Yes | Yes |
| Findwork | Job board | apiKey | Yes | Unknown |
| GraphQL Jobs | Jobs with GraphQL | No | Yes | Yes |
| Jobs2Careers | Job aggregator | apiKey | Yes | Unknown |
| Jooble | Job search engine | apiKey | Yes | Unknown |
| Juju | Job search engine | apiKey | No | Unknown |
| Open Skills | Job titles, skills and related jobs data | No | No | Unknown |
| Reed | Job board aggregator | apiKey | Yes | Unknown |
| The Muse | Job board and company profiles | apiKey | Yes | Unknown |
| Upwork | Freelance job board and management system | OAuth | Yes | Unknown |
| USAJOBS | US government job board | apiKey | Yes | Unknown |
| WhatJobs | Job search engine | apiKey | Yes | Unknown |
| ZipRecruiter | Job search app and website | apiKey | Yes | Unknown |
⬆ Back to Index
Machine Learning
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| AI For Thai | Free Various Thai AI API | apiKey | Yes | Yes |
| Clarifai | Computer Vision | OAuth | Yes | Unknown |
| Cloudmersive | Image captioning, face recognition, NSFW classification | apiKey | Yes | Yes |
| Deepcode | AI for code review | No | Yes | Unknown |
| Dialogflow | Natural Language Processing | apiKey | Yes | Unknown |
| EXUDE-API | Used for the primary ways for filtering the stopping, stemming words from the text data | No | Yes | Yes |
| Hirak FaceAPI | Face detection, face recognition with age estimation/gender estimation, accurate, no quota limits | apiKey | Yes | Unknown |  
| Imagga | Image Recognition Solutions like Tagging, Visual Search, NSFW moderation | apiKey | Yes | Unknown |
| Inferdo | Computer Vision services like Facial detection, Image labeling, NSFW classification | apiKey | Yes | Unknown |
| IPS Online | Face and License Plate Anonymization | apiKey | Yes | Unknown |
| Irisnet | Realtime content moderation API that blocks or blurs unwanted images in real-time | apiKey | Yes | Yes |
| Keen IO | Data Analytics | apiKey | Yes | Unknown |
| Machinetutors | AI Solutions: Video/Image Classification & Tagging, NSFW, Icon/Image/Audio Search, NLP | apiKey | Yes | Yes |
| MessengerX.io | A FREE API for developers to build and monetize personalized ML based chat apps | apiKey | Yes | Yes |
| NLP Cloud | NLP API using spaCy and transformers for NER, sentiments, classification, summarization, and more | apiKey | Yes | Unknown |
| OpenVisionAPI | Open source computer vision API based on open source models | No | Yes | Yes |
| Perspective | NLP API to return probability that if text is toxic, obscene, insulting or threatening | apiKey | Yes | Unknown |
| Roboflow Universe | Pre-trained computer vision models | apiKey | Yes | Yes |
| SkyBiometry | Face Detection, Face Recognition and Face Grouping | apiKey | Yes | Unknown |
| Time Door | A time series analysis API | apiKey | Yes | Yes |
| Unplugg | Forecasting API for timeseries data | apiKey | Yes | Unknown |
| WolframAlpha | Provides specific answers to questions using data and algorithms | apiKey | Yes | Unknown |
⬆ Back to Index
Music
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 7digital | Api of Music store 7digital | OAuth | Yes | Unknown |
| AI Mastering | Automated Music Mastering | apiKey | Yes | Yes |
| Audiomack | Api of the streaming music hub Audiomack | OAuth | Yes | Unknown |
| Bandcamp | API of Music store Bandcamp | OAuth | Yes | Unknown |
| Bandsintown | Music Events | No | Yes | Unknown |
| Deezer | Music | OAuth | Yes | Unknown |
| Discogs | Music | OAuth | Yes | Unknown |
| Freesound | Music Samples | apiKey | Yes | Unknown |
| Gaana | API to retrieve song information from Gaana | No | Yes | Unknown |
| Genius | Crowdsourced lyrics and music knowledge | OAuth | Yes | Unknown |
| Genrenator | Music genre generator | No | Yes | Unknown |
| iTunes Search | Software products | No | Yes | Unknown |
| Jamendo | Music | OAuth | Yes | Unknown |
| JioSaavn | API to retrieve song information, album meta data and many more from JioSaavn | No | Yes | Unknown |
| KKBOX | Get music libraries, playlists, charts, and perform out of KKBOX's platform | OAuth | Yes | Unknown |
| KSoft.Si Lyrics | API to get lyrics for songs | apiKey | Yes | Unknown |
| LastFm | Music | apiKey | Yes | Unknown |
| Lyrics.ovh | Simple API to retrieve the lyrics of a song | No | Yes | Unknown |
| Mixcloud | Music | OAuth | Yes | Yes |
| MusicBrainz | Music | No | Yes | Unknown |
| Musixmatch | Music | apiKey | Yes | Unknown |
| Napster | Music | apiKey | Yes | Yes |
| Openwhyd | Download curated playlists of streaming tracks (YouTube, SoundCloud, etc...) | No | Yes | No |
| Phishin | A web-based archive of legal live audio recordings of the improvisational rock band Phish | apiKey | Yes | No |
| Radio Browser | List of internet radio stations | No | Yes | Yes |
| Songkick | Music Events | apiKey | Yes | Unknown |
| Songlink / Odesli | Get all the services on which a song is available | apiKey | Yes | Yes |
| Songsterr | Provides guitar, bass and drums tabs and chords | No | Yes | Unknown |
| SoundCloud | With SoundCloud API you can build applications that will give more power to control your content | OAuth | Yes | Unknown |
| Spotify | View Spotify music catalog, manage users' libraries, get recommendations and more | OAuth | Yes | Unknown |
| TasteDive | Similar artist API (also works for movies and TV shows) | apiKey | Yes | Unknown |
| TheAudioDB | Music | apiKey | Yes | Unknown |
| Vagalume | Crowdsourced lyrics and music knowledge | apiKey | Yes | Unknown |
⬆ Back to Index
News
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| apilayer mediastack | Free, Simple REST API for Live News & Blog Articles | apiKey | Yes | Unknown |
| Associated Press | Search for news and metadata from Associated Press | apiKey | Yes | Unknown |
| Chronicling America | Provides access to millions of pages of historic US newspapers from the Library of Congress | No | No | Unknown |
| Currents | Latest news published in various news sources, blogs and forums | apiKey | Yes | Yes |
| Feedbin | RSS reader | OAuth | Yes | Unknown |
| GNews | Search for news from various sources | apiKey | Yes | Yes |
| Graphs for Coronavirus | Each Country separately and Worldwide Graphs for Coronavirus. Daily updates | No | Yes | Yes |
| Inshorts News | Provides news from inshorts | No | Yes | Unknown |
| MarketAux | Live stock market news with tagged tickers + sentiment and stats JSON API | apiKey | Yes | Yes |
| New York Times | The New York Times Developer Network | apiKey | Yes | Unknown |
| News | Headlines currently published on a range of news sources and blogs | apiKey | Yes | Unknown |
| NewsData | News data API for live-breaking news and headlines from reputed  news sources | apiKey | Yes | Unknown |
| NewsX | Get or Search Latest Breaking News with ML Powered Summaries 🤖 | apiKey | Yes | Unknown |
| NPR One | Personalized news listening experience from NPR | OAuth | Yes | Unknown |
| Spaceflight News | Spaceflight related news 🚀 | No | Yes | Yes |
| The Guardian | Access all the content the Guardian creates, categorised by tags and section | apiKey | Yes | Unknown |
| The Old Reader | RSS reader | apiKey | Yes | Unknown |
| TheNews | Aggregated headlines, top story and live news JSON API | apiKey | Yes | Yes |
| Trove | Search through the National Library of Australia collection of 1000s of digitised newspapers | apiKey | Yes | Unknown |
⬆ Back to Index
Open Data
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 18F | Unofficial US Federal Government API Development | No | No | Unknown |
| API Setu | An Indian Government platform that provides a lot of APIS for KYC, business, education & employment | No | Yes | Yes |
| Archive.org | The Internet Archive | No | Yes | No |
| Black History Facts | Contribute or search one of the largest black history fact databases on the web | apiKey | Yes | Yes |
| BotsArchive | JSON formatted details about Telegram Bots available in database | No | Yes | Unknown |
| Callook.info | United States ham radio callsigns | No | Yes | Unknown |
| CARTO | Location Information Prediction | apiKey | Yes | Unknown |
| CollegeScoreCard.ed.gov | Data on higher education institutions in the United States | No | Yes | Unknown |
| Enigma Public | Broadest collection of public data | apiKey | Yes | Yes |
| French Address Search | Address search via the French Government | No | Yes | Unknown |
| GENESIS | Federal Statistical Office Germany | OAuth | Yes | Unknown |
| Joshua Project | People groups of the world with the fewest followers of Christ | apiKey | Yes | Unknown |
| Kaggle | Create and interact with Datasets, Notebooks, and connect with Kaggle | apiKey | Yes | Unknown |
| LinkPreview | Get JSON formatted summary with title, description and preview image for any requested URL | apiKey | Yes | Yes |
| Lowy Asia Power Index | Get measure resources and influence to rank the relative power of states in Asia | No | Yes | Unknown |
| Microlink.io | Extract structured data from any website | No | Yes | Yes |
| Nasdaq Data Link | Stock market data | apiKey | Yes | Unknown |
| Nobel Prize | Open data about nobel prizes and events | No | Yes | Yes |
| Open Data Minneapolis | Spatial (GIS) and non-spatial city data for Minneapolis | No | Yes | No |
| openAFRICA | Large datasets repository of African open data | No | Yes | Unknown |
| OpenCorporates | Data on corporate entities and directors in many countries | apiKey | Yes | Unknown |
| OpenSanctions | Data on international sanctions, crime and politically exposed persons | No | Yes | Yes |
| PeakMetrics | News articles and public datasets | apiKey | Yes | Unknown |
| Recreation Information Database | Recreational areas, federal lands, historic sites, museums, and other attractions/resources(US) | apiKey | Yes | Unknown |
| Scoop.it | Content Curation Service | apiKey | No | Unknown |
| Socrata | Access to Open Data from Governments, Non-profits and NGOs around the world | OAuth | Yes | Yes |
| Teleport | Quality of Life Data | No | Yes | Unknown |
| Umeå Open Data | Open data of the city Umeå in northen Sweden | No | Yes | Yes |
| Universities List | University names, countries and domains | No | Yes | Unknown |
| University of Oslo | Courses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway) | No | Yes | Unknown |
| UPC database | More than 1.5 million barcode numbers from all around the world | apiKey | Yes | Unknown |
| Urban Observatory | The largest set of publicly available real time urban data in the UK | No | No | No |
| Wikidata | Collaboratively edited knowledge base operated by the Wikimedia Foundation | OAuth | Yes | Unknown |
| Wikipedia | Mediawiki Encyclopedia | No | Yes | Unknown |
| Yelp | Find Local Business | OAuth | Yes | Unknown |
⬆ Back to Index
Open Source Projects
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Countly | Countly web analytics | No | No | Unknown |
| Creative Commons Catalog | Search among openly licensed and public domain works | OAuth | Yes | Yes |
| Datamuse | Word-finding query engine | No | Yes | Unknown |
| Drupal.org | Drupal.org | No | Yes | Unknown |
| Evil Insult Generator | Evil Insults | No | Yes | Yes |
| GitHub Contribution Chart Generator | Create an image of your GitHub contributions | No | Yes | Yes |
| GitHub ReadMe Stats | Add dynamically generated statistics to your GitHub profile ReadMe | No | Yes | Yes |
| Metabase | An open source Business Intelligence server to share data and analytics inside your company | No | Yes | Yes |
| Shields | Concise, consistent, and legible badges in SVG and raster format | No | Yes | Unknown |
⬆ Back to Index
Patent
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| EPO | European patent search system api | OAuth | Yes | Unknown |
| PatentsView  | API is intended to explore and visualize trends/patterns across the US innovation landscape | No | Yes | Unknown |
| TIPO | Taiwan patent search system api | apiKey | Yes | Unknown |
| USPTO | USA patent api services | No | Yes | Unknown |
⬆ Back to Index
Personality
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Advice Slip | Generate random advice slips | No | Yes | Unknown |
| Biriyani As A Service | Biriyani images placeholder | No | Yes | No |
| Dev.to | Access Forem articles, users and other resources via API | apiKey | Yes | Unknown |
| Dictum | API to get access to the collection of the most inspiring expressions of mankind | No | Yes | Unknown |
| FavQs.com | FavQs allows you to collect, discover and share your favorite quotes | apiKey | Yes | Unknown |
| FOAAS | Fuck Off As A Service | No | No | Unknown |
| Forismatic | Inspirational Quotes | No | No | Unknown |
| icanhazdadjoke | The largest selection of dad jokes on the internet | No | Yes | Unknown |
| Inspiration | Motivational and Inspirational quotes | No | Yes | Yes |
| kanye.rest | REST API for random Kanye West quotes | No | Yes | Yes |
| kimiquotes | Team radio and interview quotes by Finnish F1 legend Kimi Räikkönen | No | Yes | Yes |
| Medium | Community of readers and writers offering unique perspectives on ideas | OAuth | Yes | Unknown |
| Programming Quotes | Programming Quotes API for open source projects | No | Yes | Unknown |
| Quotable Quotes | Quotable is a free, open source quotations API | No | Yes | Unknown |
| Quote Garden | REST API for more than 5000 famous quotes | No | Yes | Unknown |
| quoteclear | Ever-growing list of James Clear quotes from the 3-2-1 Newsletter | No | Yes | Yes |
| Quotes on Design | Inspirational Quotes | No | Yes | Unknown |
| Stoicism Quote | Quotes about Stoicism | No | Yes | Unknown |
| They Said So Quotes | Quotes Trusted by many fortune brands around the world | No | Yes | Unknown |
| Traitify | Assess, collect and analyze Personality | No | Yes | Unknown |
| Udemy(instructor) | API for instructors on Udemy | apiKey | Yes | Unknown |
| Vadivelu HTTP Codes | On demand HTTP Codes with images | No | Yes | No |
| Zen Quotes | Large collection of Zen quotes for inspiration | No | Yes | Yes |
⬆ Back to Index
Phone
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Abstract Phone Validation | Validate phone numbers globally | apiKey | Yes | Yes |
| apilayer numverify | Phone number validation | apiKey | Yes | Unknown |
| Cloudmersive Validate | Validate international phone numbers | apiKey | Yes | Yes |
| Phone Specification | Rest Api for Phone specifications | No | Yes | Yes |
| Veriphone | Phone number validation & carrier lookup | apiKey | Yes | Yes |
⬆ Back to Index
Photography
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| apilayer screenshotlayer | URL 2 Image | No | Yes | Unknown |
| APITemplate.io | Dynamically generate images and PDFs from templates with a simple API | apiKey | Yes | Yes |  
| Bruzu | Image generation with query string | apiKey | Yes | Yes |
| CheetahO | Photo optimization and resize | apiKey | Yes | Unknown |
| Dagpi | Image manipulation and processing | apiKey | Yes | Unknown |
| Duply | Generate, Edit, Scale and Manage Images and Videos Smarter & Faster | apiKey | Yes | Yes |
| DynaPictures | Generate Hundreds of Personalized Images in Minutes | apiKey | Yes | Yes |
| Flickr | Flickr Services | OAuth | Yes | Unknown |
| Getty Images | Build applications using the world's most powerful imagery | OAuth | Yes | Unknown |
| Gfycat | Jiffier GIFs | OAuth | Yes | Unknown |
| Giphy | Get all your gifs | apiKey | Yes | Unknown |
| Google Photos | Integrate Google Photos with your apps or devices | OAuth | Yes | Unknown |
| Image Upload | Image Optimization | apiKey | Yes | Unknown |
| Imgur | Images | OAuth | Yes | Unknown |
| Imsea | Free image search | No | Yes | Unknown |
| Lorem Picsum | Images from Unsplash | No | Yes | Unknown |
| ObjectCut | Image Background removal | apiKey | Yes | Yes |
| Pexels | Free Stock Photos and Videos | apiKey | Yes | Yes |
| PhotoRoom | Remove background from images | apiKey | Yes | Unknown |
| Pixabay | Photography | apiKey | Yes | Unknown |
| PlaceKeanu | Resizable Keanu Reeves placeholder images with grayscale and young Keanu options | No | Yes | Unknown |
| Readme typing SVG | Customizable typing and deleting text SVG | No | Yes | Unknown |
| Remove.bg | Image Background removal | apiKey | Yes | Unknown |
| ReSmush.it | Photo optimization | No | No | Unknown |
| shutterstock | Stock Photos and Videos | OAuth | Yes | Unknown |
| Sirv | Image management solutions like optimization, manipulation, hosting | apiKey | Yes | Unknown |
| Unsplash | Photography | OAuth | Yes | Unknown |
| Wallhaven | Wallpapers | apiKey | Yes | Unknown |
| Webdam | Images | OAuth | Yes | Unknown |
⬆ Back to Index
Programming
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Codeforces | Get access to Codeforces data | apiKey | Yes | Unknown |
| Hackerearth | For compiling and running code in several languages | apiKey | Yes | Unknown |
| Judge0 CE | Online code execution system | apiKey | Yes | Unknown |
| KONTESTS | For upcoming and ongoing competitive coding contests | No | Yes | Unknown |
| Mintlify | For programmatically generating documentation for code | apiKey | Yes | Yes |
⬆ Back to Index
Science & Math
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| arcsecond.io | Multiple astronomy data sources | No | Yes | Unknown |
| arXiv | Curated research-sharing platform: physics, mathematics, quantitative finance, and economics | No | Yes | Unknown |
| CORE | Access the world's Open Access research papers | apiKey | Yes | Unknown |
| GBIF | Global Biodiversity Information Facility | No | Yes | Yes |
| iDigBio | Access millions of museum specimens from organizations around the world | No | Yes | Unknown |
| inspirehep.net | High Energy Physics info. system | No | Yes | Unknown |
| isEven (humor) | Check if a number is even | No | Yes | Unknown |
| ISRO | ISRO Space Crafts Information | No | Yes | No |
| ITIS | Integrated Taxonomic Information System | No | Yes | Unknown |
| Launch Library 2 | Spaceflight launches and events database | No | Yes | Yes |
| Materials Platform for Data Science | Curated experimental data for materials science | apiKey | Yes | No |
| Minor Planet Center | Asterank.com Information | No | No | Unknown |
| NASA | NASA data, including imagery | No | Yes | No |
| NASA ADS | NASA Astrophysics Data System | OAuth | Yes | Yes |
| Newton | Symbolic and Arithmetic Math Calculator | No | Yes | No |
| Noctua | REST API used to access NoctuaSky features | No | Yes | Unknown |
| Numbers | Number of the day, random number, number facts and anything else you want to do with numbers | apiKey | Yes | No |
| Numbers | Facts about numbers | No | No | No |
| Ocean Facts | Facts pertaining to the physical science of Oceanography | No | Yes | Unknown |
| Open Notify | ISS astronauts, current location, etc | No | No | No |
| Open Science Framework | Repository and archive for study designs, research materials, data, manuscripts, etc | No | Yes | Unknown |
| Purple Air | Real Time Air Quality Monitoring | No | Yes | Unknown |
| Remote Calc | Decodes base64 encoding and parses it to return a solution to the calculation in JSON | No | Yes | Yes |
| SHARE | A free, open, dataset about research and scholarly activities | No | Yes | No |
| SpaceX | Company, vehicle, launchpad and launch data | No | Yes | No |
| SpaceX | GraphQL, Company, Ships, launchpad and launch data | No | Yes | Unknown |
| Sunrise and Sunset | Sunset and sunrise times for a given latitude and longitude | No | Yes | No |
| Times Adder | With this API you can add each of the times introduced in the array sended | No | Yes | No |
| TLE | Satellite information | No | Yes | No |
| USGS Earthquake Hazards Program | Earthquakes data real-time | No | Yes | No |
| USGS Water Services | Water quality and level info for rivers and lakes | No | Yes | No |
| World Bank | World Data | No | Yes | No |
| xMath | Random mathematical expressions | No | Yes | Yes |
⬆ Back to Index
Security
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Application Environment Verification | Android library and API to verify the safety of user devices, detect rooted devices and other risks | apiKey | Yes | Yes |
| BinaryEdge | Provide access to BinaryEdge 40fy scanning platform | apiKey | Yes | Yes |
| BitWarden | Best open-source password manager | OAuth | Yes | Unknown |
| Botd | Botd is a browser library for JavaScript bot detection | apiKey | Yes | Yes |
| Bugcrowd | Bugcrowd API for interacting and tracking the reported issues programmatically | apiKey | Yes | Unknown |
| Censys | Search engine for Internet connected host and devices | apiKey | Yes | No |
| Classify | Encrypting & decrypting text messages | No | Yes | Yes |
| Complete Criminal Checks | Provides data of offenders from all U.S. States and Pureto Rico | apiKey | Yes | Yes |
| CRXcavator | Chrome extension risk scoring | apiKey | Yes | Unknown |
| Dehash.lt | Hash decryption MD5, SHA1, SHA3, SHA256, SHA384, SHA512 | No | Yes | Unknown |
| EmailRep | Email address threat and risk prediction | No | Yes | Unknown |
| Escape | An API for escaping different kind of queries | No | Yes | No |
| FilterLists | Lists of filters for adblockers and firewalls | No | Yes | Unknown |
| FingerprintJS Pro | Fraud detection API offering highly accurate browser fingerprinting | apiKey | Yes | Yes |
| FraudLabs Pro | Screen order information using AI to detect frauds | apiKey | Yes | Unknown |
| FullHunt | Searchable attack surface database of the entire internet | apiKey | Yes | Unknown |
| GitGuardian | Scan files for secrets (API Keys, database credentials) | apiKey | Yes | No |
| GreyNoise | Query IPs in the GreyNoise dataset and retrieve a subset of the full IP context data | apiKey | Yes | Unknown |
| HackerOne | The industry’s first hacker API that helps increase productivity towards creative bug bounty hunting | apiKey | Yes | Unknown |
| Hashable | A REST API to access high level cryptographic functions and methods | No | Yes | Yes |
| HaveIBeenPwned | Passwords which have previously been exposed in data breaches | apiKey | Yes | Unknown |
| Intelligence X | Perform OSINT via Intelligence X | apiKey | Yes | Unknown |
| LoginRadius | Managed User Authentication Service | apiKey | Yes | Yes |
| Microsoft Security Response Center (MSRC) | Programmatic interfaces to engage with the Microsoft Security Response Center (MSRC) | No | Yes | Unknown |
| Mozilla http scanner | Mozilla observatory http scanner | No | Yes | Unknown |
| Mozilla tls scanner | Mozilla observatory tls scanner | No | Yes | Unknown |
| National Vulnerability Database | U.S. National Vulnerability Database | No | Yes | Unknown |
| Passwordinator | Generate random passwords of varying complexities | No | Yes | Yes |
| PhishStats | Phishing database | No | Yes | Unknown |
| Privacy.com | Generate merchant-specific and one-time use credit card numbers that link back to your bank | apiKey | Yes | Unknown |
| Pulsedive | Scan, search and collect threat intelligence data in real-time | apiKey | Yes | Unknown |
| SecurityTrails | Domain and IP related information such as current and historical WHOIS and DNS records | apiKey | Yes | Unknown |
| Shodan | Search engine for Internet connected devices | apiKey | Yes | Unknown |
| Spyse | Access data on all Internet assets and build powerful attack surface management applications | apiKey | Yes | Unknown |
| Threat Jammer | Risk scoring service from curated threat intelligence data | apiKey | Yes | Unknown |
| UK Police | UK Police data | No | Yes | Unknown |
| Virushee | Virushee file/data scanning | No | Yes | Yes |
| VulDB | VulDB API allows to initiate queries for one or more items along with transactional bots | apiKey | Yes | Unknown |
⬆ Back to Index
Shopping
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Best Buy | Products, Buying Options, Categories, Recommendations, Stores and Commerce | apiKey | Yes | Unknown |
| Digi-Key | Retrieve price and inventory of electronic components as well as place orders | OAuth | Yes | Unknown |
| Dummy Products | An api to fetch dummy e-commerce products JSON data with placeholder images | apiKey | Yes | Yes |
| eBay | Sell and Buy on eBay | OAuth | Yes | Unknown |
| Etsy | Manage shop and interact with listings | OAuth | Yes | Unknown |
| Flipkart Marketplace | Product listing management, Order Fulfilment in the Flipkart Marketplace | OAuth | Yes | Yes |
| Lazada | Retrieve product ratings and seller performance metrics | apiKey | Yes | Unknown |
| Mercadolibre | Manage sales, ads, products, services and Shops | apiKey | Yes | Unknown |
| Octopart | Electronic part data for manufacturing, design, and sourcing | apiKey | Yes | Unknown |
| OLX Poland | Integrate with local sites by posting, managing adverts and communicating with OLX users | apiKey | Yes | Unknown |
| Rappi | Manage orders from Rappi's app | OAuth | Yes | Unknown |
| Shopee | Shopee's official API for integration of various services from Shopee | apiKey | Yes | Unknown |
| Tokopedia | Tokopedia's Official API for integration of various services from Tokopedia | OAuth | Yes | Unknown |
| WooCommerce | WooCommerce REST APIS to create, read, update, and delete data on wordpress website in JSON format | apiKey | Yes | Yes |
⬆ Back to Index
Social
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| 4chan | Simple image-based bulletin board dedicated to a variety of topics | No | Yes | Yes |
| Ayrshare | Social media APIs to post, get analytics, and manage multiple users social media accounts | apiKey | Yes | Yes |
| aztro | Daily horoscope info for yesterday, today, and tomorrow | No | Yes | Unknown |
| Blogger | The Blogger APIs allows client applications to view and update Blogger content | OAuth | Yes | Unknown |
| Cisco Spark | Team Collaboration Software | OAuth | Yes | Unknown |
| Dangerous Discord Database | Database of malicious Discord accounts | apiKey | Yes | Unknown |
| Discord | Make bots for Discord, integrate Discord onto an external platform | OAuth | Yes | Unknown | | |
| Disqus | Communicate with Disqus data | OAuth | Yes | Unknown |
| Doge-Meme | Top meme posts from r/dogecoin which include 'Meme' flair | No | Yes | Yes |
| Facebook | Facebook Login, Share on FB, Social Plugins, Analytics and more | OAuth | Yes | Unknown |
| Foursquare | Interact with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc) | OAuth | Yes | Unknown |
| Fuck Off as a Service | Asks someone to fuck off | No | Yes | Unknown |
| Full Contact | Get Social Media profiles and contact Information | OAuth | Yes | Unknown |
| HackerNews | Social news for CS and entrepreneurship | No | Yes | Unknown |
| Hashnode | A blogging platform built for developers | No | Yes | Unknown |
| Instagram | Instagram Login, Share on Instagram, Social Plugins and more | OAuth | Yes | Unknown |
| Kakao | Kakao Login, Share on KakaoTalk, Social Plugins and more | OAuth | Yes | Unknown |
| Lanyard | Retrieve your presence on Discord through an HTTP REST API or WebSocket | No | Yes | Yes |
| Line | Line Login, Share on Line, Social Plugins and more | OAuth | Yes | Unknown |
| LinkedIn | The foundation of all digital integrations with LinkedIn | OAuth | Yes | Unknown |
| Meetup.com | Data about Meetups from Meetup.com | apiKey | Yes | Unknown |
| Microsoft Graph | Access the data and intelligence in Microsoft 365, Windows 10, and Enterprise Mobility | OAuth | Yes | Unknown |
| NAVER | NAVER Login, Share on NAVER, Social Plugins and more | OAuth | Yes | Unknown |
| Open Collective | Get Open Collective data | No | Yes | Unknown |
| Pinterest | The world's catalog of ideas | OAuth | Yes | Unknown |
| Product Hunt | The best new products in tech | OAuth | Yes | Unknown |
| Reddit | Homepage of the internet | OAuth | Yes | Unknown |
| Revolt | Revolt open source Discord alternative | apiKey | Yes | Unknown |
| Saidit | Open Source Reddit Clone | OAuth | Yes | Unknown |
| Slack | Team Instant Messaging | OAuth | Yes | Unknown |
| TamTam | Bot API to interact with TamTam | apiKey | Yes | Unknown |
| Telegram Bot | Simplified HTTP version of the MTProto API for bots | apiKey | Yes | Unknown |
| Telegram MTProto | Read and write Telegram data | OAuth | Yes | Unknown |
| Telegraph | Create attractive blogs easily, to share | apiKey | Yes | Unknown |
| TikTok | Fetches user info and user's video posts on TikTok platform | OAuth | Yes | Unknown |
| Trash Nothing | A freecycling community with thousands of free items posted every day | OAuth | Yes | Yes |
| Tumblr | Read and write Tumblr Data | OAuth | Yes | Unknown |
| Twitch | Game Streaming API | OAuth | Yes | Unknown |
| Twitter | Read and write Twitter data | OAuth | Yes | No |
| vk | Read and write vk data | OAuth | Yes | Unknown |
⬆ Back to Index
Sports & Fitness
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| API-FOOTBALL | Get information about Football Leagues & Cups | apiKey | Yes | Yes |
| ApiMedic | ApiMedic offers a medical symptom checker API primarily for patients | apiKey | Yes | Unknown |
| balldontlie | Balldontlie provides access to stats data from the NBA | No | Yes | Yes |
| Canadian Football League (CFL) | Official JSON API providing real-time league, team and player statistics about the CFL | apiKey | Yes | No |
| City Bikes | City Bikes around the world | No | Yes | Unknown |
| Cloudbet | Official Cloudbet API provides real-time sports odds and betting API to place bets programmatically | apiKey | Yes | Yes |
| CollegeFootballData.com | Unofficial detailed American college football statistics, records, and results API | apiKey | Yes | Unknown |
| Ergast F1 | F1 data from the beginning of the world championships in 1950 | No | Yes | Unknown |
| Fitbit | Fitbit Information | OAuth | Yes | Unknown |
| Football | A simple Open Source Football API to get squads’ stats, best scorers and more | X-Mashape-Key | Yes | Unknown |
| Football (Soccer) Videos | Embed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more | No | Yes | Yes |
| Football Standings | Display football standings e.g epl, la liga, serie a etc. The data is based on espn site | No | Yes | Yes |
| Football-Data | Football data with matches info, players, teams, and competitions | X-Mashape-Key | Yes | Unknown |
| JCDecaux Bike | JCDecaux's self-service bicycles | apiKey | Yes | Unknown |
| MLB Records and Stats | Current and historical MLB statistics | No | No | Unknown |
| NBA Data | All NBA Stats DATA, Games, Livescore, Standings, Statistics | apiKey | Yes | Unknown |
| NBA Stats | Current and historical NBA Statistics | No | Yes | Unknown |
| NHL Records and Stats | NHL historical data and statistics | No | Yes | Unknown |
| Oddsmagnet | Odds history from multiple UK bookmakers | No | Yes | Yes |
| OpenLigaDB | Crowd sourced sports league results | No | Yes | Yes |
| Premier League Standings  | All Current Premier League Standings and Statistics | apiKey | Yes | Unknown |
| Sport Data | Get sports data from all over the world | apiKey | Yes | Unknown |
| Sport List & Data | List of and resources related to sports | No | Yes | Yes |
| Sport Places | Crowd-source sports places around the world | No | Yes | No |
| Sport Vision | Identify sport, brands and gear in an image. Also does image sports captioning | apiKey | Yes | Yes |
| Sportmonks Cricket | Live cricket score, player statistics and fantasy API | apiKey | Yes | Unknown |
| Sportmonks Football | Football score/schedule, news api, tv channels, stats, history, display standing e.g. epl, la liga | apiKey | Yes | Unknown |
| Squiggle | Fixtures, results and predictions for Australian Football League matches | No | Yes | Yes |
| Strava | Connect with athletes, activities and more | OAuth | Yes | Unknown |
| SuredBits | Query sports data, including teams, players, games, scores and statistics | No | No | No |
| TheSportsDB | Crowd-Sourced Sports Data and Artwork | apiKey | Yes | Yes |
| Tredict | Get and set activities, health data and more | OAuth | Yes | Unknown |
| Wger | Workout manager data as exercises, muscles or equipment | apiKey | Yes | Unknown |
⬆ Back to Index
Test Data
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Bacon Ipsum | A Meatier Lorem Ipsum Generator | No | Yes | Unknown |
| Dicebear Avatars | Generate random pixel-art avatars | No | Yes | No |
| English Random Words | Generate English Random Words with Pronunciation | No | Yes | No |
| FakeJSON | Service to generate test and fake data | apiKey | Yes | Yes |
| FakerAPI | APIs collection to get fake data | No | Yes | Yes |
| FakeStoreAPI | Fake store rest API for your e-commerce or shopping website prototype | No | Yes | Unknown |
| GeneradorDNI | Data generator API. Profiles, vehicles, banks and cards, etc | apiKey | Yes | Unknown |
| ItsThisForThat | Generate Random startup ideas | No | Yes | No |
| JSONPlaceholder | Fake data for testing and prototyping | No | No | Unknown |
| Loripsum | The ""lorem ipsum"" generator that doesn't suck | No | No | Unknown |
| Mailsac | Disposable Email | apiKey | Yes | Unknown |
| Metaphorsum | Generate demo paragraphs giving number of words and sentences | No | No | Unknown |
| Mockaroo | Generate fake data to JSON, CSV, TXT, SQL and XML | apiKey | Yes | Unknown |
| QuickMocker | API mocking tool to generate contextual, fake or random data | No | Yes | Yes |
| Random Data | Random data generator | No | Yes | Unknown |
| Randommer | Random data generator | apiKey | Yes | Yes |
| RandomUser | Generates and list user data | No | Yes | Unknown |
| RoboHash | Generate random robot/alien avatars | No | Yes | Unknown |
| Spanish random names | Generate spanish names (with gender) randomly | No | Yes | Unknown |
| Spanish random words | Generate spanish words randomly | No | Yes | Unknown |
| This Person Does not Exist | Generates real-life faces of people who do not exist | No | Yes | Unknown |
| Toolcarton | Generate random testimonial data | No | Yes | Unknown |
| UUID Generator | Generate UUIDs | No | Yes | No |
| What The Commit | Random commit message generator | No | No | Yes |
| Yes No | Generate yes or no randomly | No | Yes | Unknown |
⬆ Back to Index
Text Analysis
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Code Detection API | Detect, label, format and enrich the code in your app or in your data pipeline | OAuth | Yes | Unknown |
| apilayer languagelayer | Language Detection JSON API supporting 173 languages | OAuth | Yes | Unknown |
| Aylien Text Analysis | A collection of information retrieval and natural language APIs | apiKey | Yes | Unknown |
| Cloudmersive Natural Language Processing | Natural language processing and text analysis | apiKey | Yes | Yes |
| Detect Language | Detects text language | apiKey | Yes | Unknown |
| ELI | Natural Language Processing Tools for Thai Language | apiKey | Yes | Unknown |
| Google Cloud Natural | Natural language understanding technology, including sentiment, entity and syntax analysis | apiKey | Yes | Unknown |
| Hirak OCR | Image to text -text recognition- from image more than 100 language, accurate, unlimited requests | apiKey | Yes | Unknown |
| Hirak Translation | Translate between 21 of most used languages, accurate, unlimited requests | apiKey | Yes | Unknown |
| Lecto Translation | Translation API with free tier and reasonable prices | apiKey | Yes | Yes |
| LibreTranslate | Translation tool with 17 available languages | No | Yes | Unknown |
| Semantria | Text Analytics with sentiment analysis, categorization & named entity extraction | OAuth | Yes | Unknown |
| Sentiment Analysis | Multilingual sentiment analysis of texts from different sources | apiKey | Yes | Yes |
| Tisane | Text Analytics with focus on detection of abusive content and law enforcement applications | OAuth | Yes | Yes |
| Watson Natural Language Understanding | Natural language processing for advanced text analysis | OAuth | Yes | Unknown |
⬆ Back to Index
Tracking
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Aftership | API to update, manage and track shipment efficiently | apiKey | Yes | Yes |
| Correios | Integration to provide information and prepare shipments using Correio's services | apiKey | Yes | Unknown |
| Pixela | API for recording and tracking habits or effort, routines | X-Mashape-Key | Yes | Yes |
| PostalPinCode | API for getting Pincode details in India | No | Yes | Unknown |
| Postmon | An API to query Brazilian ZIP codes and orders easily, quickly and free | No | No | Unknown |
| PostNord | Provides information about parcels in transport for Sweden and Denmark | apiKey | No | Unknown |
| UPS | Shipment and Address information | apiKey | Yes | Unknown |
| WeCanTrack | Automatically place subids in affiliate links to attribute affiliate conversions to click data | apiKey | Yes | Yes |
| WhatPulse | Small application that measures your keyboard/mouse usage | No | Yes | Unknown |
⬆ Back to Index
Transportation
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| ADS-B Exchange | Access real-time and historical data of any and all airborne aircraft | No | Yes | Unknown |
| airportsapi | Get name and website-URL for airports by ICAO code | No | Yes | Unknown |
| AIS Hub | Real-time data of any marine and inland vessel equipped with AIS tracking system | apiKey | No | Unknown |
| Amadeus for Developers | Travel Search - Limited usage | OAuth | Yes | Unknown |
| apilayer aviationstack | Real-time Flight Status & Global Aviation Data API | OAuth | Yes | Unknown |
| AviationAPI | FAA Aeronautical Charts and Publications, Airport Information, and Airport Weather | No | Yes | No |
| AZ511 | Access traffic data from the ADOT API | apiKey | Yes | Unknown |
| Bay Area Rapid Transit | Stations and predicted arrivals for BART | apiKey | No | Unknown |
| BC Ferries | Sailing times and capacities for BC Ferries | No | Yes | Yes |
| BIC-Boxtech | Container technical detail for the global container fleet | OAuth | Yes | Unknown |
| BlaBlaCar | Search car sharing trips | apiKey | Yes | Unknown |
| Boston MBTA Transit | Stations and predicted arrivals for MBTA | apiKey | Yes | Unknown |
| Community Transit | Transitland API | No | Yes | Unknown |
| Compare Flight Prices | API for comparing flight prices across platforms | apiKey | Yes | Unknown |
| CTS | CTS Realtime API | apiKey | Yes | Yes |
| Grab | Track deliveries, ride fares, payments and loyalty points | OAuth | Yes | Unknown |
| GraphHopper | A-to-B routing with turn-by-turn instructions | apiKey | Yes | Unknown |
| Icelandic APIs | Open APIs that deliver services in or regarding Iceland | No | Yes | Unknown |
| Impala Hotel Bookings | Hotel content, rates and room bookings | apiKey | Yes | No |
| Izi | Audio guide for travellers | apiKey | Yes | Unknown |
| Land Transport Authority DataMall, Singapore | Singapore transport information | apiKey | No | Unknown |
| Metro Lisboa | Delays in subway lines | No | No | No |
| Navitia | The open API for building cool stuff with transport data | apiKey | Yes | Unknown |
| Open Charge Map | Global public registry of electric vehicle charging locations | apiKey | Yes | Yes |
| OpenSky Network | Free real-time ADS-B aviation data | No | Yes | Unknown |
| Railway Transport for France | SNCF public API | apiKey | Yes | Unknown |
| REFUGE Restrooms | Provides safe restroom access for transgender, intersex and gender nonconforming individuals | No | Yes | Unknown |
| Sabre for Developers | Travel Search - Limited usage | apiKey | Yes | Unknown |
| Schiphol Airport | Schiphol | apiKey | Yes | Unknown |
| Tankerkoenig | German realtime gas/diesel prices | apiKey | Yes | Yes |
| TransitLand | Transit Aggregation | No | Yes | Unknown |
| Transport for Atlanta, US | Marta | No | No | Unknown |
| Transport for Auckland, New Zealand | Auckland Transport | No | Yes | Unknown |
| Transport for Belgium | The iRail API is a third-party API for Belgian public transport by train | No | Yes | Yes |
| Transport for Berlin, Germany | Third-party VBB API | No | Yes | Unknown |
| Transport for Bordeaux, France | Bordeaux Métropole public transport and more (France) | apiKey | Yes | Unknown |
| Transport for Budapest, Hungary | Budapest public transport API | No | Yes | Unknown |
| Transport for Chicago, US | Chicago Transit Authority (CTA) | apiKey | No | Unknown |
| Transport for Czech Republic | Czech transport API | No | Yes | Unknown |
| Transport for Denver, US | RTD | No | No | Unknown |
| Transport for Finland | Finnish transport API | No | Yes | Unknown |
| Transport for Germany | Deutsche Bahn (DB) API | apiKey | No | Unknown |
| Transport for Grenoble, France | Grenoble public transport | No | No | No |
| Transport for Hessen, Germany | RMV API (Public Transport in Hessen) | No | Yes | Unknown |
| Transport for Honolulu, US | Honolulu Transportation Information | apiKey | No | Unknown |
| Transport for Lisbon, Portugal | Data about buses routes, parking and traffic | apiKey | Yes | Unknown |
| Transport for London, England | TfL API | apiKey | Yes | Unknown |
| Transport for Los Angeles, US | Data about positions of Metro vehicles in real time and travel their routes | No | Yes | Unknown |
| Transport for Manchester, England | TfGM transport network data | apiKey | Yes | No |
| Transport for Norway | Transport APIs and dataset for Norway | No | Yes | Unknown |
| Transport for Ottawa, Canada | OC Transpo API | apiKey | Yes | Unknown |
| Transport for Paris, France | RATP Open Data API | No | No | Unknown |
| Transport for Philadelphia, US | SEPTA APIs | No | No | Unknown |
| Transport for Sao Paulo, Brazil | SPTrans | OAuth | No | Unknown |
| Transport for Spain | Public trains of Spain | No | Yes | Unknown |
| Transport for Sweden | Public Transport consumer | OAuth | Yes | Unknown |
| Transport for Switzerland | Official Swiss Public Transport Open Data | apiKey | Yes | Unknown |
| Transport for Switzerland | Swiss public transport API | No | Yes | Unknown |
| Transport for The Netherlands | NS, only trains | apiKey | No | Unknown |
| Transport for The Netherlands | OVAPI, country-wide public transport | No | Yes | Unknown |
| Transport for Toronto, Canada | TTC | No | Yes | Unknown |
| Transport for UK | Transport API and dataset for UK | apiKey | Yes | Unknown |
| Transport for United States | NextBus API | No | No | Unknown |
| Transport for Vancouver, Canada | TransLink | OAuth | Yes | Unknown |
| Transport for Washington, US | Washington Metro transport API | OAuth | Yes | Unknown |
| transport.rest | Community maintained, developer-friendly public transport API | No | Yes | Yes |
| Tripadvisor | Rating content for a hotel, restaurant, attraction or destination | apiKey | Yes | Unknown |
| Uber | Uber ride requests and price estimation | OAuth | Yes | Yes |
| Velib metropolis, Paris, France | Velib Open Data API | No | Yes | No |
⬆ Back to Index
URL Shorteners
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 1pt | A simple URL shortener | No | Yes | Yes |
| Bitly | URL shortener and link management | OAuth | Yes | Unknown |
| CleanURI | URL shortener service | No | Yes | Yes |
| ClickMeter | Monitor, compare and optimize your marketing links | apiKey | Yes | Unknown |
| Clico | URL shortener service | apiKey | Yes | Unknown |
| Cutt.ly | URL shortener service | apiKey | Yes | Unknown |
| Drivet URL Shortener | Shorten a long URL easily and fast | No | Yes | Unknown |
| Free Url Shortener | Free URL Shortener offers a powerful API to interact with other sites | No | Yes | Unknown |
| Git.io | Git.io URL shortener | No | Yes | Unknown |
| GoTiny | A lightweight URL shortener, focused on ease-of-use for the developer and end-user | No | Yes | Yes |
| Kutt | Free Modern URL Shortener | apiKey | Yes | Yes |
| Mgnet.me | Torrent URL shorten API | No | Yes | No |
| owo | A simple link obfuscator/shortener | No | Yes | Unknown |
| Rebrandly | Custom URL shortener for sharing branded links | apiKey | Yes | Unknown |
| Short Link | Short URLs support so many domains | No | Yes | Unknown |
| Shrtcode | URl Shortener with multiple Domains | No | Yes | Yes |
| Shrtlnk | Simple and efficient short link creation | apiKey | Yes | Yes |
| TinyURL | Shorten long URLs | apiKey | Yes | No |
| UrlBae | Simple and efficient short link creation | apiKey | Yes | Yes |
⬆ Back to Index
Vehicle
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| Brazilian Vehicles and Prices | Vehicles information from Fundação Instituto de Pesquisas Econômicas - Fipe | No | Yes | No |
| Helipaddy sites | Helicopter and passenger drone landing site directory, Helipaddy data and much more | apiKey | Yes | Unknown |
| Kelley Blue Book | Vehicle info, pricing, configuration, plus much more | apiKey | Yes | No |
| Mercedes-Benz | Telematics data, remotely access vehicle functions, car configurator, locate service dealers | apiKey | Yes | No |
| NHTSA | NHTSA Product Information Catalog and Vehicle Listing | No | Yes | Unknown |
| Smartcar | Lock and unlock vehicles and get data like odometer reading and location. Works on most new cars | OAuth | Yes | Yes |
⬆ Back to Index
Video
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| An API of Ice And Fire | Game Of Thrones API | No | Yes | Unknown |
| Bob's Burgers | Bob's Burgers API | No | Yes | Yes |
| Breaking Bad | Breaking Bad API | No | Yes | Unknown |
| Breaking Bad Quotes | Some Breaking Bad quotes | No | Yes | Unknown |
| Catalogopolis | Doctor Who API | No | Yes | Unknown |
| Catch The Show | REST API for next-episode.net | No | Yes | Unknown |
| Czech Television | TV programme of Czech TV | No | No | Unknown |
| Dailymotion | Dailymotion Developer API | OAuth | Yes | Unknown |
| Dune | A simple API which provides you with book, character, movie and quotes JSON data | No | Yes | Yes |
| Final Space | Final Space API | No | Yes | Yes |
| Game of Thrones Quotes | Some Game of Thrones quotes | No | Yes | Unknown |
| Harry Potter Charactes | Harry Potter Characters Data with with imagery | No | Yes | Unknown |
| IMDb-API | API for receiving movie, serial and cast information | apiKey | Yes | Unknown |
| IMDbOT | Unofficial IMDb Movie / Series Information | No | Yes | Yes |
| JSON2Video | Create and edit videos programmatically: watermarks,resizing,slideshows,voice-over,text animations | apiKey | Yes | No |
| Lucifer Quotes | Returns Lucifer quotes | No | Yes | Unknown |
| MCU Countdown | A Countdown to the next MCU Film | No | Yes | Yes |
| Motivational Quotes | Random Motivational Quotes | No | Yes | Unknown |
| Movie Quote | Random Movie and Series Quotes | No | Yes | Yes |
| Open Movie Database | Movie information | apiKey | Yes | Unknown |
| Owen Wilson Wow | API for actor Owen Wilson's ""wow"" exclamations in movies | No | Yes | Yes |
| Ron Swanson Quotes | Television | No | Yes | Unknown |
| Simkl | Movie, TV and Anime data | apiKey | Yes | Unknown |
| STAPI | Information on all things Star Trek | No | No | No |
| Stranger Things Quotes | Returns Stranger Things quotes | No | Yes | Unknown |
| Stream | Czech internet television, films, series and online videos for free | No | Yes | No |
| Stromberg Quotes | Returns Stromberg quotes and more | No | Yes | Unknown |
| SWAPI | All the Star Wars data you've ever wanted | No | Yes | Yes |
| SWAPI | All things Star Wars | No | Yes | Yes |
| SWAPI GraphQL | Star Wars GraphQL API | No | Yes | Unknown |
| The Lord of the Rings | The Lord of the Rings API | apiKey | Yes | Unknown |
| The Vampire Diaries | TV Show Data | apiKey | Yes | Yes |
| ThronesApi | Game Of Thrones Characters Data with imagery | No | Yes | Unknown |
| TMDb | Community-based movie data | apiKey | Yes | Unknown |
| TrailerAddict | Easily embed trailers from TrailerAddict | apiKey | No | Unknown |  
| Trakt | Movie and TV Data | apiKey | Yes | Yes |
| TVDB | Television data | apiKey | Yes | Unknown |
| TVMaze | TV Show Data | No | No | Unknown |
| uNoGS | Unofficial Netflix Online Global Search, Search all netflix regions in one place | apiKey | Yes | Yes |
| Vimeo | Vimeo Developer API | OAuth | Yes | Unknown |
| Watchmode | API for finding out the streaming availability of movies & shows | apiKey | Yes | Unknown |
| Web Series Quotes Generator | API generates various Web Series Quote Images | No | Yes | Yes |
| YouTube | Add YouTube functionality to your sites and apps | OAuth | Yes | Unknown |
⬆ Back to Index
Weather
API | Description | Auth | HTTPS | CORS |
|:---|:---|:---|:---|:---|
| 7Timer! | Weather, especially for Astroweather | No | No | Unknown |
| AccuWeather | Weather and forecast data | apiKey | No | Unknown |
| Aemet | Weather and forecast data from Spain | apiKey | Yes | Unknown |
| apilayer weatherstack | Real-Time & Historical World Weather Data API | apiKey | Yes | Unknown |
| APIXU | Weather | apiKey | Yes | Unknown |
| AQICN | Air Quality Index Data for over 1000 cities | apiKey | Yes | Unknown |
| AviationWeather | NOAA aviation weather forecasts and observations | No | Yes | Unknown |
| ColorfulClouds | Weather | apiKey | Yes | Yes |
| Euskalmet | Meteorological data of the Basque Country | apiKey | Yes | Unknown |
| Foreca | Weather | OAuth | Yes | Unknown |
| HG Weather | Provides weather forecast data for cities in Brazil | apiKey | Yes | Yes |
| Hong Kong Obervatory | Provide weather information, earthquake information, and climate data | No | Yes | Unknown |
| MetaWeather | Weather | No | Yes | No |
| Meteorologisk Institutt | Weather and climate data | User-Agent | Yes | Unknown |
| Micro Weather | Real time weather forecasts and historic data | apiKey | Yes | Unknown |
| ODWeather | Weather and weather webcams | No | No | Unknown |
| Oikolab | 70+ years of global, hourly historical and forecast weather data from NOAA and ECMWF | apiKey | Yes | Yes |
| Open-Meteo | Global weather forecast API for non-commercial use | No | Yes | Yes |
| openSenseMap | Data from Personal Weather Stations called senseBoxes | No | Yes | Yes |
| OpenUV | Real-time UV Index Forecast | apiKey | Yes | Unknown |
| OpenWeatherMap | Weather | apiKey | Yes | Unknown |
| QWeather | Location-based weather data | apiKey | Yes | Yes |
| RainViewer | Radar data collected from different websites across the Internet | No | Yes | Unknown |
| Storm Glass | Global marine weather from multiple sources | apiKey | Yes | Yes |
| Tomorrow | Weather API Powered by Proprietary Technology | apiKey | Yes | Unknown |
| US Weather | US National Weather Service | No | Yes | Yes |
| Visual Crossing | Global historical and weather forecast data | apiKey | Yes | Yes |
| weather-api | A RESTful free API to check the weather | No | Yes | No |
| WeatherAPI | Weather API with other stuff like Astronomy and Geolocation API | apiKey | Yes | Yes |
| Weatherbit | Weather | apiKey | Yes | Unknown |
| Yandex.Weather | Assesses weather condition in specific locations | apiKey | Yes | No |
⬆ Back to Index
License
MIT (c) 2022 public-apis"
coding-interview-university,jwasham,"['computer-science', 'interview', 'programming-interviews', 'study-plan', 'data-structures', 'algorithms', 'software-engineering', 'algorithm', 'coding-interviews', 'interview-prep', 'coding-interview', 'interview-preparation']",2016-06-06 02:34:12+00:00,https://github.com/jwasham/coding-interview-university,2024-12-05 23:46:51+00:00,,309997,A complete computer science study plan to become a software engineer.,"Coding Interview University
I originally created this as a short to-do list of study topics for becoming a software engineer,
but it grew to the large list you see today. After going through this study plan, I got hired
as a Software Development Engineer at Amazon!
You probably won't have to study as much as I did. Anyway, everything you need is here.
I studied about 8-12 hours a day, for several months. This is my story: Why I studied full-time for 8 months for a Google interview
Please Note: You won't need to study as much as I did. I wasted a lot of time on things I didn't need to know. More info about that is below. I'll help you get there without wasting your precious time.
The items listed here will prepare you well for a technical interview at just about any software company,
including the giants: Amazon, Facebook, Google, and Microsoft.
Best of luck to you!
Translations:
- [Bahasa Indonesia](translations/README-id.md)
- [Bulgarian](translations/README-bg.md)
- [Español](translations/README-es.md)
- [German](translations/README-de.md)
- [Japanese (日本語)](translations/README-ja.md)
- [Marathi](translations/README-mr.md)
- [Polish](translations/README-pl.md)
- [Português Brasileiro](translations/README-ptbr.md)
- [Russian](translations/README-ru.md)
- [Tiếng Việt - Vietnamese](translations/README-vi.md)
- [Urdu - اردو](translations/README-ur.md)
- [Uzbek](translations/README-uz.md)
- [বাংলা - Bangla](translations/README-bn.md)
- [ខ្មែរ - Khmer](translations/README-kh.md)
- [简体中文](translations/README-cn.md)
- [繁體中文](translations/README-tw.md)
Translations in progress:
- [Afrikaans](https://github.com/jwasham/coding-interview-university/issues/1164)
- [Arabic](https://github.com/jwasham/coding-interview-university/issues/98)
- [French](https://github.com/jwasham/coding-interview-university/issues/89)
- [Greek](https://github.com/jwasham/coding-interview-university/issues/166)
- [Italian](https://github.com/jwasham/coding-interview-university/issues/1030)
- [Korean(한국어)](https://github.com/jwasham/coding-interview-university/issues/118)
- [Malayalam](https://github.com/jwasham/coding-interview-university/issues/239)
- [Persian - Farsi](https://github.com/jwasham/coding-interview-university/issues/186)
- [Telugu](https://github.com/jwasham/coding-interview-university/issues/117)
- [Thai](https://github.com/jwasham/coding-interview-university/issues/156)
- [Turkish](https://github.com/jwasham/coding-interview-university/issues/90)
- [Українська](https://github.com/jwasham/coding-interview-university/issues/106)
- [עברית](https://github.com/jwasham/coding-interview-university/issues/82)
- [हिन्दी](https://github.com/jwasham/coding-interview-university/issues/81)
What is it?
This is my multi-month study plan for becoming a software engineer for a large company.
Required:
* A little experience with coding (variables, loops, methods/functions, etc)
* Patience
* Time
Note this is a study plan for software engineering, not frontend engineering or full-stack development. There are really
super roadmaps and coursework for those career paths elsewhere (see https://roadmap.sh/ for more info).
There is a lot to learn in a university Computer Science program, but only knowing about 75% is good enough for an interview, so that's what I cover here.
For a complete CS self-taught program, the resources for my study plan have been included in Kamran Ahmed's Computer Science Roadmap: https://roadmap.sh/computer-science
Table of Contents
The Study Plan
What is it?
Why use it?
How to use it
Don't feel you aren't smart enough
A Note About Video Resources
Choose a Programming Language
Books for Data Structures and Algorithms
Interview Prep Books
Don't Make My Mistakes
What you Won't See Covered
The Daily Plan
Coding Question Practice
Coding Problems
Topics of Study
Algorithmic complexity / Big-O / Asymptotic analysis
Data Structures
Arrays
Linked Lists
Stack
Queue
Hash table
More Knowledge
Binary search
Bitwise operations
Trees
Trees - Intro
Binary search trees: BSTs
Heap / Priority Queue / Binary Heap
balanced search trees (general concept, not details)
traversals: preorder, inorder, postorder, BFS, DFS
Sorting
selection
insertion
heapsort
quicksort
mergesort
Graphs
directed
undirected
adjacency matrix
adjacency list
traversals: BFS, DFS
Even More Knowledge
Recursion
Dynamic Programming
Design Patterns
Combinatorics (n choose k) & Probability
NP, NP-Complete and Approximation Algorithms
How computers process a program
Caches
Processes and Threads
Testing
String searching & manipulations
Tries
Floating Point Numbers
Unicode
Endianness
Networking
Final Review
Getting the Job
Update Your Resume
Find a Job
Interview Process & General Interview Prep
Be thinking of for when the interview comes
Have questions for the interviewer
Once You've Got The Job
---------------- Everything below this point is optional ----------------
Optional Extra Topics & Resources
Additional Books
System Design, Scalability, Data Handling (if you have 4+ years experience)
Additional Learning
Compilers
Emacs and vi(m)
Unix command line tools
Information theory
Parity & Hamming Code
Entropy
Cryptography
Compression
Computer Security
Garbage collection
Parallel Programming
Messaging, Serialization, and Queueing Systems
A*
Fast Fourier Transform
Bloom Filter
HyperLogLog
Locality-Sensitive Hashing
van Emde Boas Trees
Augmented Data Structures
Balanced search trees
AVL trees
Splay trees
Red/black trees
2-3 search trees
2-3-4 Trees (aka 2-4 trees)
N-ary (K-ary, M-ary) trees
B-Trees
k-D Trees
Skip lists
Network Flows
Disjoint Sets & Union Find
Math for Fast Processing
Treap
Linear Programming
Geometry, Convex hull
Discrete math
Additional Detail on Some Subjects
Video Series
Computer Science Courses
Papers
Why use it?
If you want to work as a software engineer for a large company, these are the things you have to know.
If you missed out on getting a degree in computer science, like I did, this will catch you up and save four years of your life.
When I started this project, I didn't know a stack from a heap, didn't know Big-O anything, or anything about trees, or how to
traverse a graph. If I had to code a sorting algorithm, I can tell ya it would have been terrible.
Every data structure I had ever used was built into the language, and I didn't know how they worked
under the hood at all. I never had to manage memory unless a process I was running would give an ""out of
memory"" error, and then I'd have to find a workaround. I used a few multidimensional arrays in my life and
thousands of associative arrays, but I never created data structures from scratch.
It's a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.
⬆ back to top
How to use it
Everything below is an outline, and you should tackle the items in order from top to bottom.
I'm using GitHub's special markdown flavor, including tasks lists to track progress.
  - More about GitHub-flavored markdown
If you don't want to use git
On this page, click the Code button near the top, then click ""Download ZIP"". Unzip the file and you can work with the text files.
If you're open in a code editor that understands markdown, you'll see everything formatted nicely.
If you're comfortable with git
Create a new branch so you can check items like this, just put an x in the brackets: [x]
Fork the GitHub repo: https://github.com/jwasham/coding-interview-university by clicking on the Fork button.
Clone to your local repo:
bash
git clone https://github.com/<YOUR_GITHUB_USERNAME>/coding-interview-university.git
cd coding-interview-university
git remote add upstream https://github.com/jwasham/coding-interview-university.git
git remote set-url --push upstream DISABLE  # so that you don't push your personal progress back to the original repo
Mark all boxes with X after you completed your changes:
```bash
git commit -am ""Marked personal progress""
git pull upstream main  # keep your fork up-to-date with changes from the original repo
git push # just pushes to your fork
```
⬆ back to top
Don't feel you aren't smart enough
Successful software engineers are smart, but many have an insecurity that they aren't smart enough.
The following videos may help you overcome this insecurity:
The myth of the Genius Programmer
It's Dangerous to Go Alone: Battling the Invisible Monsters in Tech
⬆ back to top
A Note About Video Resources
Some videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs.
Sometimes the classes are not in session so you have to wait a couple of months, so you have no access.
It would be great to replace the online course resources with free and always-available public sources,
such as YouTube videos (preferably university lectures), so that you people can study these anytime,
not just when a specific online course is in session.
⬆ back to top
Choose a Programming Language
You'll need to choose a programming language for the coding interviews you do,
but you'll also need to find a language that you can use to study computer science concepts.
Preferably the language would be the same, so that you only need to be proficient in one.
For this Study Plan
When I did the study plan, I used 2 languages for most of it: C and Python
C: Very low level. Allows you to deal with pointers and memory allocation/deallocation, so you feel the data structures
    and algorithms in your bones. In higher-level languages like Python or Java, these are hidden from you. In day-to-day work, that's terrific,
    but when you're learning how these low-level data structures are built, it's great to feel close to the metal.
C is everywhere. You'll see examples in books, lectures, videos, everywhere while you're studying.
The C Programming Language, 2nd Edition
This is a short book, but it will give you a great handle on the C language and if you practice it a little
    you'll quickly get proficient. Understanding C helps you understand how programs and memory work.
You don't need to go super deep in the book (or even finish it). Just get to where you're comfortable reading and writing in C.
Python: Modern and very expressive, I learned it because it's just super useful and also allows me to write less code in an interview.
This is my preference. You do what you like, of course.
You may not need it, but here are some sites for learning a new language:
- Exercism
- Codewars
- HackerEarth
- Scaler Topics (Java, C++)
- Programiz PRO Community Challenges)
For your Coding Interview
You can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:
C++
Java
Python
You could also use these, but read around first. There may be caveats:
JavaScript
Ruby
Here is an article I wrote about choosing a language for the interview:
Pick One Language for the Coding Interview.
This is the original article my post was based on: Choosing a Programming Language for Interviews
You need to be very comfortable in the language and be knowledgeable.
Read more about choices:
- Choose the Right Language for Your Coding Interview
See language-specific resources here
⬆ back to top
Books for Data Structures and Algorithms
This book will form your foundation for computer science.
Just choose one, in a language that you will be comfortable with. You'll be doing a lot of reading and coding.
Python
Coding Interview Patterns: Nail Your Next Coding Interview (Main Recommendation)
An insider’s perspective on what interviewers are truly looking for and why.
101 real coding interview problems with detailed solutions.
Intuitive explanations that guide you through each problem as if you were solving it in a live interview.
1000+ diagrams to illustrate key concepts and patterns.   
C
Algorithms in C, Parts 1-5 (Bundle), 3rd Edition
Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms
Java
Your choice:
Goodrich, Tamassia, Goldwasser
Data Structures and Algorithms in Java
Sedgewick and Wayne:
Algorithms
Free Coursera course that covers the book (taught by the authors!):
Algorithms I
Algorithms II
C++
Your choice:
Goodrich, Tamassia, and Mount
Data Structures and Algorithms in C++, 2nd Edition
Sedgewick and Wayne
Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching
Algorithms in C++ Part 5: Graph Algorithms
⬆ back to top
Interview Prep Books
Here are some recommended books to supplement your learning.
Coding Interview Patterns: Nail Your Next Coding Interview
Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition
Answers in C++ and Java
This is a good warm-up for Cracking the Coding Interview
Not too difficult. Most problems may be easier than what you'll see in an interview (from what I've read)
Cracking the Coding Interview, 6th Edition
answers in Java
If you have tons of extra time:
Choose one:
Elements of Programming Interviews (C++ version)
Elements of Programming Interviews in Python
Elements of Programming Interviews (Java version)
        - Companion Project - Method Stub and Test Cases for Every Problem in the Book
⬆ back to top
Don't Make My Mistakes
This list grew over many months, and yes, it got out of hand.
Here are some mistakes I made so you'll have a better experience. And you'll save months of time.
1. You Won't Remember it All
I watched hours of videos and took copious notes, and months later there was much I didn't remember. I spent 3 days going
through my notes and making flashcards, so I could review. I didn't need all of that knowledge.
Please, read so you won't make my mistakes:
Retaining Computer Science Knowledge.
2. Use Flashcards
To solve the problem, I made a little flashcard site where I could add flashcards of 2 types: general and code.
Each card has a different formatting. I made a mobile-first website, so I could review on my phone or tablet, wherever I am.
Make your own for free:
Flashcards site repo
I DON'T RECOMMEND using my flashcards. There are too many and most of them are trivia that you don't need.
But if you don't want to listen to me, here you go:
- My flash cards database (1200 cards):
- My flash cards database (extreme - 1800 cards):
Keep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics.
It's way too much for what's required.
Note on flashcards: The first time you recognize you know the answer, don't mark it as known. You have to see the
same card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in
your brain.
An alternative to using my flashcard site is Anki, which has been recommended to me numerous times.
It uses a repetition system to help you remember. It's user-friendly, available on all platforms, and has a cloud sync system.
It costs $25 on iOS but is free on other platforms.
My flashcard database in Anki format: https://ankiweb.net/shared/info/25173560 (thanks @xiewenya).
Some students have mentioned formatting issues with white space that can be fixed by doing the following: open the deck, edit the card, click cards, select the ""styling"" radio button, and add the member ""white-space: pre;"" to the card class.
3. Do Coding Interview Questions While You're Learning
THIS IS VERY IMPORTANT.
Start doing coding interview questions while you're learning data structures and algorithms.
You need to apply what you're learning to solve problems, or you'll forget. I made this mistake.
Once you've learned a topic, and feel somewhat comfortable with it, for example, linked lists:
1. Open one of the coding interview books (or coding problem websites, listed below)
1. Do 2 or 3 questions regarding linked lists.
1. Move on to the next learning topic.
1. Later, go back and do another 2 or 3 linked list problems.
1. Do this with each new topic you learn.
Keep doing problems while you're learning all this stuff, not after.
You're not being hired for knowledge, but how you apply the knowledge.
There are many resources for this, listed below. Keep going.
4. Focus
There are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music
without lyrics and you'll be able to focus pretty well.
⬆ back to top
What you won't see covered
These are prevalent technologies but not part of this study plan:
Javascript
HTML, CSS, and other front-end technologies
SQL
⬆ back to top
The Daily Plan
This course goes over a lot of subjects. Each will probably take you a few days, or maybe even a week or more. It depends on your schedule.
Each day, take the next subject in the list, watch some videos about that subject, and then write an implementation
of that data structure or algorithm in the language you chose for this course.
You can see my code here:
 - C
 - C++
 - Python
You don't need to memorize every algorithm. You just need to be able to understand it enough to be able to write your own implementation.
⬆ back to top
Coding Question Practice
Why is this here? I'm not ready to interview.
Then go back and read this.
Why you need to practice doing programming problems:
- Problem recognition, and where the right data structures and algorithms fit in
- Gathering requirements for the problem
- Talking your way through the problem like you will in the interview
- Coding on a whiteboard or paper, not a computer
- Coming up with time and space complexity for your solutions (see Big-O below)
- Testing your solutions
There is a great intro for methodical, communicative problem-solving in an interview. You'll get this from the programming
interview books, too, but I found this outstanding:
Algorithm design canvas
Write code on a whiteboard or paper, not a computer. Test with some sample inputs. Then type it and test it out on a computer.
If you don't have a whiteboard at home, pick up a large drawing pad from an art store. You can sit on the couch and practice.
This is my ""sofa whiteboard"". I added the pen in the photo just for scale. If you use a pen, you'll wish you could erase.
Gets messy quickly. I use a pencil and eraser.
Coding question practice is not about memorizing answers to programming problems.
⬆ back to top
Coding Problems
Don't forget your key coding interview books here.
Solving Problems:
- How to Find a Solution
- How to Dissect a Topcoder Problem Statement
Coding Interview Question Videos:
- IDeserve (88 videos)
- Tushar Roy (5 playlists)
    - Super for walkthroughs of problem solutions
- Nick White - LeetCode Solutions (187 Videos)
    - Good explanations of the solution and the code
    - You can watch several in a short time
- FisherCoder - LeetCode Solutions
Challenge/Practice sites:
- LeetCode
    - My favorite coding problem site. It's worth the subscription money for the 1-2 months you'll likely be preparing.
    - See Nick White and FisherCoder Videos above for code walk-throughs.
- HackerRank
- TopCoder
- Codeforces
- Codility
- Geeks for Geeks
- AlgoExpert
    - Created by Google engineers, this is also an excellent resource to hone your skills.
- Project Euler
    - very math-focused, and not really suited for coding interviews
⬆ back to top
Let's Get Started
Alright, enough talk, let's learn!
But don't forget to do coding problems from above while you learn!
Algorithmic complexity / Big-O / Asymptotic analysis
Nothing to implement here, you're just watching videos and taking notes! Yay!
There are a lot of videos here. Just watch enough until you understand it. You can always come back and review.
Don't worry if you don't understand all the math behind it.
You just need to understand how to express the complexity of an algorithm in terms of Big-O.
[ ] Harvard CS50 - Asymptotic Notation (video)
[ ] Big O Notations (general quick tutorial) (video)
[ ] Big O Notation (and Omega and Theta) - best mathematical explanation (video)
[ ] Skiena (video)
[ ] UC Berkeley Big O (video)
[ ] Amortized Analysis (video)
[ ] TopCoder (includes recurrence relations and master theorem):
Computational Complexity: Section 1
Computational Complexity: Section 2
[ ] Cheat sheet
[ ] [Review] Analyzing Algorithms (playlist) in 18 minutes (video)
Well, that's about enough of that.
When you go through ""Cracking the Coding Interview"", there is a chapter on this, and at the end there is a quiz to see
if you can identify the runtime complexity of different algorithms. It's a super review and test.
⬆ back to top
Data Structures
Arrays
[ ] About Arrays:
Arrays CS50 Harvard University
Arrays (video)
UC Berkeley CS61B - Linear and Multi-Dim Arrays (video) (Start watching from 15m 32s)
Dynamic Arrays (video)
Jagged Arrays (video)
[ ] Implement a vector (mutable array with automatic resizing):
[ ] Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.
[ ] New raw data array with allocated memory
can allocate int array under the hood, just not use its features
start with 16, or if the starting number is greater, use power of 2 - 16, 32, 64, 128
[ ] size() - number of items
[ ] capacity() - number of items it can hold
[ ] is_empty()
[ ] at(index) - returns the item at a given index, blows up if index out of bounds
[ ] push(item)
[ ] insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right
[ ] prepend(item) - can use insert above at index 0
[ ] pop() - remove from end, return value
[ ] delete(index) - delete item at index, shifting all trailing elements left
[ ] remove(item) - looks for value and removes index holding it (even if in multiple places)
[ ] find(item) - looks for value and returns first index with that value, -1 if not found
[ ] resize(new_capacity) // private function
when you reach capacity, resize to double the size
when popping an item, if the size is 1/4 of capacity, resize to half
[ ] Time
O(1) to add/remove at end (amortized for allocations for more space), index, or update
O(n) to insert/remove elsewhere
[ ] Space
contiguous in memory, so proximity helps performance
space needed = (array capacity, which is >= n) * size of item, but even if 2n, still O(n)
Linked Lists
[ ] Description:
[ ] Linked Lists CS50 Harvard University - this builds the intuition.
[ ] Singly Linked Lists (video)
[ ] CS 61B - Linked Lists 1 (video)
[ ] CS 61B - Linked Lists 2 (video)
[ ] [Review] Linked lists in 4 minutes (video)
[ ] C Code (video)
        - not the whole video, just portions about Node struct and memory allocation
[ ] Linked List vs Arrays:
Core Linked Lists Vs Arrays (video)
In The Real World Linked Lists Vs Arrays (video)
[ ] Why you should avoid linked lists (video)
[ ] Gotcha: you need pointer to pointer knowledge:
    (for when you pass a pointer to a function that may change the address where that pointer points)
    This page is just to get a grasp on ptr to ptr. I don't recommend this list traversal style. Readability and maintainability suffer due to cleverness.
Pointers to Pointers
[ ] Implement (I did with tail pointer & without):
[ ] size() - returns the number of data elements in the list
[ ] empty() - bool returns true if empty
[ ] value_at(index) - returns the value of the nth item (starting at 0 for first)
[ ] push_front(value) - adds an item to the front of the list
[ ] pop_front() - remove the front item and return its value
[ ] push_back(value) - adds an item at the end
[ ] pop_back() - removes end item and returns its value
[ ] front() - get the value of the front item
[ ] back() - get the value of the end item
[ ] insert(index, value) - insert value at index, so the current item at that index is pointed to by the new item at the index
[ ] erase(index) - removes node at given index
[ ] value_n_from_end(n) - returns the value of the node at the nth position from the end of the list
[ ] reverse() - reverses the list
[ ] remove_value(value) - removes the first item in the list with this value
[ ] Doubly-linked List
Description (video)
No need to implement
Stack
[ ] Stacks (video)
[ ] [Review] Stacks in 3 minutes (video)
[ ] Will not implement. Implementing with the array is trivial
Queue
[ ] Queue (video)
[ ] Circular buffer/FIFO
[ ] [Review] Queues in 3 minutes (video)
[ ] Implement using linked-list, with tail pointer:
enqueue(value) - adds value at a position at the tail
dequeue() - returns value and removes least recently added element (front)
empty()
[ ] Implement using a fixed-sized array:
enqueue(value) - adds item at end of available storage
dequeue() - returns value and removes least recently added element
empty()
full()
[ ] Cost:
a bad implementation using a linked list where you enqueue at the head and dequeue at the tail would be O(n)
    because you'd need the next to last element, causing a full traversal of each dequeue
enqueue: O(1) (amortized, linked list and array [probing])
dequeue: O(1) (linked list and array)
empty: O(1) (linked list and array)
Hash table
[ ] Videos:
[ ] Hashing with Chaining (video)
[ ] Table Doubling, Karp-Rabin (video)
[ ] Open Addressing, Cryptographic Hashing (video)
[ ] PyCon 2010: The Mighty Dictionary (video)
[ ] PyCon 2017: The Dictionary Even Mightier (video)
[ ] (Advanced) Randomization: Universal & Perfect Hashing (video)
[ ] (Advanced) Perfect hashing (video)
[ ] [Review] Hash tables in 4 minutes (video)
[ ] Online Courses:
[ ] Core Hash Tables (video)
[ ] Data Structures (video)
[ ] Phone Book Problem (video)
[ ] distributed hash tables:
Instant Uploads And Storage Optimization In Dropbox (video)
Distributed Hash Tables (video)
[ ] Implement with array using linear probing
hash(k, m) - m is the size of the hash table
add(key, value) - if the key already exists, update value
exists(key)
get(key)
remove(key)
⬆ back to top
More Knowledge
Binary search
[ ] Binary Search (video)
[ ] Binary Search (video)
[ ] detail
[ ] blueprint
[ ] [Review] Binary search in 4 minutes (video)
[ ] Implement:
binary search (on a sorted array of integers)
binary search using recursion
Bitwise operations
[ ] Bits cheat sheet
you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)
[ ] Get a really good understanding of manipulating bits with: &, |, ^, ~, >>, <<
[ ] words
[ ] Good intro:
    Bit Manipulation (video)
[ ] C Programming Tutorial 2-10: Bitwise Operators (video)
[ ] Bit Manipulation
[ ] Bitwise Operation
[ ] Bithacks
[ ] The Bit Twiddler
[ ] The Bit Twiddler Interactive
[ ] Bit Hacks (video)
[ ] Practice Operations
[ ] 2s and 1s complement
Binary: Plusses & Minuses (Why We Use Two's Complement) (video)
1s Complement
2s Complement
[ ] Count set bits
4 ways to count bits in a byte (video)
Count Bits
How To Count The Number Of Set Bits In a 32 Bit Integer
[ ] Swap values:
Swap
[ ] Absolute value:
Absolute Integer
⬆ back to top
Trees
Trees - Intro
[ ] Intro to Trees (video)
[ ] Tree Traversal (video)
[ ] BFS(breadth-first search) and DFS(depth-first search) (video)
BFS notes:
level order (BFS, using queue)
time complexity: O(n)
space complexity: best: O(1), worst: O(n/2)=O(n)
DFS notes:
time complexity: O(n)
space complexity:
    best: O(log n) - avg. height of tree
    worst: O(n)
inorder (DFS: left, self, right)
postorder (DFS: left, right, self)
preorder (DFS: self, left, right)
[ ] [Review] Breadth-first search in 4 minutes (video)
[ ] [Review] Depth-first search in 4 minutes (video)
[ ] [Review] Tree Traversal (playlist) in 11 minutes (video)
Binary search trees: BSTs
[ ] Binary Search Tree Review (video)
[ ] Introduction (video)
[ ] MIT (video)
C/C++:
[ ] Binary search tree - Implementation in C/C++ (video)
[ ] BST implementation - memory allocation in stack and heap (video)
[ ] Find min and max element in a binary search tree (video)
[ ] Find the height of a binary tree (video)
[ ] Binary tree traversal - breadth-first and depth-first strategies (video)
[ ] Binary tree: Level Order Traversal (video)
[ ] Binary tree traversal: Preorder, Inorder, Postorder (video)
[ ] Check if a binary tree is a binary search tree or not (video)
[ ] Delete a node from Binary Search Tree (video)
[ ] Inorder Successor in a binary search tree (video)
[ ] Implement:
[ ] insert    // insert value into tree
[ ] get_node_count // get count of values stored
[ ] print_values // prints the values in the tree, from min to max
[ ] delete_tree
[ ] is_in_tree // returns true if a given value exists in the tree
[ ] get_height // returns the height in nodes (single node's height is 1)
[ ] get_min   // returns the minimum value stored in the tree
[ ] get_max   // returns the maximum value stored in the tree
[ ] is_binary_search_tree
[ ] delete_value
[ ] get_successor // returns the next-highest value in the tree after given value, -1 if none
Heap / Priority Queue / Binary Heap
visualized as a tree, but is usually linear in storage (array, linked list)
[ ] Heap
[ ] Introduction (video)
[ ] Binary Trees (video)
[ ] Tree Height Remark (video)
[ ] Basic Operations (video)
[ ] Complete Binary Trees (video)
[ ] Pseudocode (video)
[ ] Heap Sort - jumps to start (video)
[ ] Heap Sort (video)
[ ] Building a heap (video)
[ ] MIT 6.006 Introduction to Algorithms: Binary Heaps
[ ] CS 61B Lecture 24: Priority Queues (video)
[ ] Linear Time BuildHeap (max-heap)
[ ] [Review] Heap (playlist) in 13 minutes (video)
[ ] Implement a max-heap:
[ ] insert
[ ] sift_up - needed for insert
[ ] get_max - returns the max item, without removing it
[ ] get_size() - return number of elements stored
[ ] is_empty() - returns true if the heap contains no elements
[ ] extract_max - returns the max item, removing it
[ ] sift_down - needed for extract_max
[ ] remove(x) - removes item at index x
[ ] heapify - create a heap from an array of elements, needed for heap_sort
[ ] heap_sort() - take an unsorted array and turn it into a sorted array in place using a max heap or min heap
⬆ back to top
Sorting
[ ] Notes:
Implement sorts & know best case/worst case, average complexity of each:
no bubble sort - it's terrible - O(n^2), except when n <= 16
[ ] Stability in sorting algorithms (""Is Quicksort stable?"")
Sorting Algorithm Stability
Stability In Sorting Algorithms
Stability In Sorting Algorithms
Sorting Algorithms - Stability
[ ] Which algorithms can be used on linked lists? Which on arrays? Which of both?
I wouldn't recommend sorting a linked list, but merge sort is doable.
Merge Sort For Linked List
For heapsort, see the Heap data structure above. Heap sort is great, but not stable
[ ] Sedgewick - Mergesort (5 videos)
[ ] 1. Mergesort
[ ] 2. Bottom-up Mergesort
[ ] 3. Sorting Complexity
[ ] 4. Comparators
[ ] 5. Stability
[ ] Sedgewick - Quicksort (4 videos)
[ ] 1. Quicksort
[ ] 2. Selection
[ ] 3. Duplicate Keys
[ ] 4. System Sorts
[ ] UC Berkeley:
[ ] CS 61B Lecture 29: Sorting I (video)
[ ] CS 61B Lecture 30: Sorting II (video)
[ ] CS 61B Lecture 32: Sorting III (video)
[ ] CS 61B Lecture 33: Sorting V (video)
[ ] CS 61B 2014-04-21: Radix Sort(video)
[ ] Bubble Sort (video)
[ ] Analyzing Bubble Sort (video)
[ ] Insertion Sort, Merge Sort (video)
[ ] Insertion Sort (video)
[ ] Merge Sort (video)
[ ] Quicksort (video)
[ ] Selection Sort (video)
[ ] Merge sort code:
[ ] Using output array (C)
[ ] Using output array (Python)
[ ] In-place (C++)
[ ] Quick sort code:
[ ] Implementation (C)
[ ] Implementation (C)
[ ] Implementation (Python)
[ ] [Review] Sorting (playlist) in 18 minutes
[ ] Quick sort in 4 minutes (video)
[ ] Heap sort in 4 minutes (video)
[ ] Merge sort in 3 minutes (video)
[ ] Bubble sort in 2 minutes (video)
[ ] Selection sort in 3 minutes (video)
[ ] Insertion sort in 2 minutes (video)
[ ] Implement:
[ ] Mergesort: O(n log n) average and worst case
[ ] Quicksort O(n log n) average case
Selection sort and insertion sort are both O(n^2) average and worst-case
For heapsort, see Heap data structure above
[ ] Not required, but I recommended them:
[ ] Sedgewick - Radix Sorts (6 videos)
[ ] 1. Strings in Java
[ ] 2. Key Indexed Counting
[ ] 3. Least Significant Digit First String Radix Sort
[ ] 4. Most Significant Digit First String Radix Sort
[ ] 5. 3 Way Radix Quicksort
[ ] 6. Suffix Arrays
[ ] Radix Sort
[ ] Radix Sort (video)
[ ] Radix Sort, Counting Sort (linear time given constraints) (video)
[ ] Randomization: Matrix Multiply, Quicksort, Freivalds' algorithm (video)
[ ] Sorting in Linear Time (video)
As a summary, here is a visual representation of 15 sorting algorithms.
If you need more detail on this subject, see the ""Sorting"" section in Additional Detail on Some Subjects
⬆ back to top
Graphs
Graphs can be used to represent many problems in computer science, so this section is long, like trees and sorting.
Notes:
There are 4 basic ways to represent a graph in memory:
objects and pointers
adjacency matrix
adjacency list
adjacency map
Familiarize yourself with each representation and its pros & cons
BFS and DFS - know their computational complexity, their trade-offs, and how to implement them in real code
When asked a question, look for a graph-based solution first, then move on if none
[ ] MIT(videos):
[ ] Breadth-First Search
[ ] Depth-First Search
[ ] Skiena Lectures - great intro:
[ ] CSE373 2020 - Lecture 10 - Graph Data Structures (video)
[ ] CSE373 2020 - Lecture 11 - Graph Traversal (video)
[ ] CSE373 2020 - Lecture 12 - Depth First Search (video)
[ ] CSE373 2020 - Lecture 13 - Minimum Spanning Trees (video)
[ ] CSE373 2020 - Lecture 14 - Minimum Spanning Trees (con't) (video)
[ ] CSE373 2020 - Lecture 15 - Graph Algorithms (con't 2) (video)
[ ] Graphs (review and more):
[ ] 6.006 Single-Source Shortest Paths Problem (video)
[ ] 6.006 Dijkstra (video)
[ ] 6.006 Bellman-Ford (video)
[ ] 6.006 Speeding Up Dijkstra (video)
[ ] Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim's Algorithm -  Lecture 6 (video)
[ ] Aduni: Graph Algorithms II - DFS, BFS, Kruskal's Algorithm, Union Find Data Structure - Lecture 7 (video)
[ ] Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)
[ ] Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)
[ ] CS 61B 2014: Weighted graphs (video)
[ ] Greedy Algorithms: Minimum Spanning Tree (video)
[ ] Strongly Connected Components Kosaraju's Algorithm Graph Algorithm (video)
[ ] [Review] Shortest Path Algorithms (playlist) in 16 minutes (video)
[ ] [Review] Minimum Spanning Trees (playlist) in 4 minutes (video)
Full Coursera Course:
[ ] Algorithms on Graphs (video)
I'll implement:
[ ] DFS with adjacency list (recursive)
[ ] DFS with adjacency list (iterative with stack)
[ ] DFS with adjacency matrix (recursive)
[ ] DFS with adjacency matrix (iterative with stack)
[ ] BFS with adjacency list
[ ] BFS with adjacency matrix
[ ] single-source shortest path (Dijkstra)
[ ] minimum spanning tree
DFS-based algorithms (see Aduni videos above):
[ ] check for a cycle (needed for topological sort, since we'll check for the cycle before starting)
[ ] topological sort
[ ] count connected components in a graph
[ ] list strongly connected components
[ ] check for bipartite graph
⬆ back to top
Even More Knowledge
Recursion
[ ] Stanford lectures on recursion & backtracking:
[ ] Lecture 8 | Programming Abstractions (video)
[ ] Lecture 9 | Programming Abstractions (video)
[ ] Lecture 10 | Programming Abstractions (video)
[ ] Lecture 11 | Programming Abstractions (video)
When it is appropriate to use it?
How is tail recursion better than not?
[ ] What Is Tail Recursion Why Is It So Bad?
[ ] Tail Recursion (video)
[ ] 5 Simple Steps for Solving Any Recursive Problem(video)
Backtracking Blueprint: Java
Python
- ### Dynamic Programming
- You probably won't see any dynamic programming problems in your interview, but it's worth being able to recognize a
problem as being a candidate for dynamic programming.
- This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.
- I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.
- [ ] Videos:
    - [ ] Skiena: CSE373 2020 - Lecture 19 - Introduction to Dynamic Programming (video)
    - [ ] Skiena: CSE373 2020 - Lecture 20 - Edit Distance (video)
    - [ ] Skiena: CSE373 2020 - Lecture 20 - Edit Distance (continued) (video)
    - [ ] Skiena: CSE373 2020 - Lecture 21 - Dynamic Programming (video)
    - [ ] Skiena: CSE373 2020 - Lecture 22 - Dynamic Programming and Review (video)
    - [ ] Simonson: Dynamic Programming 0 (starts at 59:18) (video)
    - [ ] Simonson: Dynamic Programming I - Lecture 11 (video)
    - [ ] Simonson: Dynamic programming II - Lecture 12 (video)
    - [ ] List of individual DP problems (each is short):
        Dynamic Programming (video)
- [ ] Yale Lecture notes:
    - [ ] Dynamic Programming
- [ ] Coursera:
    - [ ] The RNA secondary structure problem (video)
    - [ ] A dynamic programming algorithm (video)
    - [ ] Illustrating the DP algorithm (video)
    - [ ] Running time of the DP algorithm (video)
    - [ ] DP vs. recursive implementation (video)
    - [ ] Global pairwise sequence alignment (video)
    - [ ] Local pairwise sequence alignment (video)
Design patterns
[ ] Quick UML review (video)
[ ] Learn these patterns:
[ ] strategy
[ ] singleton
[ ] adapter
[ ] prototype
[ ] decorator
[ ] visitor
[ ] factory, abstract factory
[ ] facade
[ ] observer
[ ] proxy
[ ] delegate
[ ] command
[ ] state
[ ] memento
[ ] iterator
[ ] composite
[ ] flyweight
[ ] Series of videos (27 videos)
[ ] Book: Head First Design Patterns
I know the canonical book is ""Design Patterns: Elements of Reusable Object-Oriented Software"", but Head First is great for beginners to OO.
Handy reference: 101 Design Patterns & Tips for Developers
Combinatorics (n choose k) & Probability
[ ] Math Skills: How to find Factorial, Permutation, and Combination (Choose) (video)
[ ] Make School: Probability (video)
[ ] Make School: More Probability and Markov Chains (video)
[ ] Khan Academy:
Course layout:
[ ] Basic Theoretical Probability
Just the videos - 41 (each are simple and each are short):
[ ] Probability Explained (video)
NP, NP-Complete and Approximation Algorithms
Know about the most famous classes of NP-complete problems, such as the traveling salesman and the knapsack problem,
    and be able to recognize them when an interviewer asks you them in disguise.
Know what NP-complete means.
[ ] Computational Complexity (video)
[ ] Simonson:
[ ] Greedy Algs. II & Intro to NP-Completeness (video)
[ ] NP Completeness II & Reductions (video)
[ ] NP Completeness III (Video)
[ ] NP Completeness IV (video)
[ ] Skiena:
[ ] CSE373 2020 - Lecture 23 - NP-Completeness (video)
[ ] CSE373 2020 - Lecture 24 - Satisfiability (video)
[ ] CSE373 2020 - Lecture 25 - More NP-Completeness (video)
[ ] CSE373 2020 - Lecture 26 - NP-Completeness Challenge (video)
[ ] Complexity: P, NP, NP-completeness, Reductions (video)
[ ] Complexity: Approximation Algorithms (video)
[ ] Complexity: Fixed-Parameter Algorithms (video)
Peter Norvig discusses near-optimal solutions to the traveling salesman problem:
Jupyter Notebook
Pages 1048 - 1140 in CLRS if you have it.
How computers process a program
[ ] How CPU executes a program (video)
[ ] How computers calculate - ALU (video)
[ ] Registers and RAM (video)
[ ] The Central Processing Unit (CPU) (video)
[ ] Instructions and Programs (video)
Caches
[ ] LRU cache:
[ ] The Magic of LRU Cache (100 Days of Google Dev) (video)
[ ] Implementing LRU (video)
[ ] LeetCode - 146 LRU Cache (C++) (video)
[ ] CPU cache:
[ ] MIT 6.004 L15: The Memory Hierarchy (video)
[ ] MIT 6.004 L16: Cache Issues (video)
Processes and Threads
[ ] Computer Science 162 - Operating Systems (25 videos):
for processes and threads see videos 1-11
Operating Systems and System Programming (video)
What Is The Difference Between A Process And A Thread?
Covers:
Processes, Threads, Concurrency issues
Difference between processes and threads
Processes
Threads
Locks
Mutexes
Semaphores
Monitors
How do they work?
Deadlock
Livelock
CPU activity, interrupts, context switching
Modern concurrency constructs with multicore processors
Paging, segmentation, and virtual memory (video)
Interrupts (video)
Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)
Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own PC, stack counter, registers, and stack)
Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.
Context switching
How context switching is initiated by the operating system and underlying hardware?
[ ] threads in C++ (series - 10 videos)
[ ] CS 377 Spring '14: Operating Systems from University of Massachusetts
[ ] concurrency in Python (videos):
[ ] Short series on threads
[ ] Python Threads
[ ] Understanding the Python GIL (2010)
reference
[ ] David Beazley - Python Concurrency From the Ground Up LIVE! - PyCon 2015
[ ] Keynote David Beazley - Topics of Interest (Python Asyncio)
[ ] Mutex in Python
Testing
To cover:
how unit testing works
what are mock objects
what is integration testing
what is dependency injection
[ ] Agile Software Testing with James Bach (video)
[ ] Open Lecture by James Bach on Software Testing (video)
[ ] Steve Freeman - Test-Driven Development (that’s not what we meant) (video)
slides
[ ] Dependency injection:
[ ] video
[ ] Tao Of Testing
[ ] How to write tests
String searching & manipulations
[ ] Sedgewick - Suffix Arrays (video)
[ ] Sedgewick - Substring Search (videos)
[ ] 1. Introduction to Substring Search
[ ] 2. Brute-Force Substring Search
[ ] 3. Knuth-Morris Pratt
[ ] 4. Boyer-Moore
[ ] 5. Rabin-Karp
[ ] Search pattern in a text (video)
If you need more detail on this subject, see the ""String Matching"" section in Additional Detail on Some Subjects.
Tries
Note there are different kinds of tries. Some have prefixes, some don't, and some use strings instead of bits
    to track the path
I read through the code, but will not implement
[ ] Sedgewick - Tries (3 videos)
[ ] 1. R Way Tries
[ ] 2. Ternary Search Tries
[ ] 3. Character Based Operations
[ ] Notes on Data Structures and Programming Techniques
[ ] Short course videos:
[ ] Introduction To Tries (video)
[ ] Performance Of Tries (video)
[ ] Implementing A Trie (video)
[ ] The Trie: A Neglected Data Structure
[ ] TopCoder - Using Tries
[ ] Stanford Lecture (real-world use case) (video)
[ ] MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)
Floating Point Numbers
[ ] simple 8-bit: Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)
Unicode
[ ] The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets
[ ] What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text
Endianness
[ ] Big And Little Endian
[ ] Big Endian Vs Little Endian (video)
[ ] Big And Little Endian Inside/Out (video)
Very technical talk for kernel devs. Don't worry if most is over your head.
The first half is enough.
Networking
If you have networking experience or want to be a reliability engineer or operations engineer, expect questions
Otherwise, this is just good to know
[ ] Khan Academy
[ ] UDP and TCP: Comparison of Transport Protocols (video)
[ ] TCP/IP and the OSI Model Explained! (video)
[ ] Packet Transmission across the Internet. Networking & TCP/IP tutorial. (video)
[ ] HTTP (video)
[ ] SSL and HTTPS (video)
[ ] SSL/TLS (video)
[ ] HTTP 2.0 (video)
[ ] Video Series (21 videos) (video)
[ ] Subnetting Demystified - Part 5 CIDR Notation (video)
[ ] Sockets:
[ ] Java - Sockets - Introduction (video)
[ ] Socket Programming (video)
⬆ back to top
Final Review
This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.
It's nice if you want a refresher often.
[ ] Series of 2-3 minutes short subject videos (23 videos)
Videos
[ ] Series of 2-5 minutes short subject videos - Michael Sambol (48 videos):
Videos
Code Examples
[ ] Sedgewick Videos - Algorithms I
[ ] Sedgewick Videos - Algorithms II
⬆ back to top
Update Your Resume
See Resume prep information in the books: ""Cracking The Coding Interview"" and ""Programming Interviews Exposed""
""This Is What A GOOD Resume Should Look Like"" by Gayle McDowell (author of Cracking the Coding Interview),
Note by the author: ""This is for a US-focused resume. CVs for India and other countries have different expectations, although many of the points will be the same.""
""Step-by-step resume guide"" by Tech Interview Handbook
Detailed guide on how to set up your resume from scratch, write effective resume content, optimize it, and test your resume
⬆ back to top
Interview Process & General Interview Prep
[ ] How to Pass the Engineering Interview in 2021
[ ] Demystifying Tech Recruiting
[ ] How to Get a Job at the Big 4:
[ ] How to Get a Job at the Big 4 - Amazon, Facebook, Google & Microsoft (video)
[ ] How to Get a Job at the Big 4.1 (Follow-up video)
[ ] Cracking The Coding Interview Set 1:
[ ] Gayle L McDowell - Cracking The Coding Interview (video)
[ ] Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)
[ ] Cracking the Facebook Coding Interview:
[ ] The Approach
[ ] Problem Walkthrough
Prep Courses:
Python for Data Structures, Algorithms, and Interviews (paid course):
A Python-centric interview prep course that covers data structures, algorithms, mock interviews, and much more.
Intro to Data Structures and Algorithms using Python (Udacity free course):
A free Python-centric data structures and algorithms course.
Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree):
Get hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.
Grokking the Behavioral Interview (Educative free course):
Many times, it’s not your technical competency that holds you back from landing your dream job, it’s how you perform on the behavioral interview.
AlgoMonster (paid course with free content):
The crash course for LeetCode. Covers all the patterns condensed from thousands of questions.
Mock Interviews:
- Gainlo.co: Mock interviewers from big companies - I used this and it helped me relax for the phone screen and on-site interview
- Pramp: Mock interviews from/with peers - a peer-to-peer model to practice interviews
- interviewing.io: Practice mock interview with senior engineers - anonymous algorithmic/systems design interviews with senior engineers from FAANG anonymously
- Meetapro: Mock interviews with top FAANG interviewers - an Airbnb-style mock interview/coaching platform.
- Hello Interview: Mock Interviews with Expert Coaches and AI - interview directly with AI or with FAANG staff engineers and managers.
- Codemia: Practice system design problems with AI or community solutions and feedback - Practice system design problems via AI practice tool. Share your solution with the community to get human feedback as well.
⬆ back to top
Be thinking of for when the interview comes
Think of about 20 interview questions you'll get, along with the lines of the items below. Have at least one answer for each.
Have a story, not just data, about something you accomplished.
Why do you want this job?
What's a tough problem you've solved?
Biggest challenges faced?
Best/worst designs seen?
Ideas for improving an existing product
How do you work best, as an individual and as part of a team?
Which of your skills or experiences would be assets in the role and why?
What did you most enjoy at [job x / project y]?
What was the biggest challenge you faced at [job x / project y]?
What was the hardest bug you faced at [job x / project y]?
What did you learn at [job x / project y]?
What would you have done better at [job x / project y]?
⬆ back to top
Have questions for the interviewer
Some of mine (I already may know the answers, but want their opinion or team perspective):
How large is your team?
What does your dev cycle look like? Do you do waterfall/sprints/agile?
Are rushes to deadlines common? Or is there flexibility?
How are decisions made in your team?
How many meetings do you have per week?
Do you feel your work environment helps you concentrate?
What are you working on?
What do you like about it?
What is the work life like?
How is the work/life balance?
⬆ back to top
Once You've Got The Job
Congratulations!
Keep learning.
You're never really done.
*****************************************************************************************************
*****************************************************************************************************
Everything below this point is optional. It is NOT needed for an entry-level interview.
However, by studying these, you'll get greater exposure to more CS concepts and will be better prepared for
any software engineering job. You'll be a much more well-rounded software engineer.
*****************************************************************************************************
*****************************************************************************************************
⬆ back to top
Additional Books
These are here so you can dive into a topic you find interesting.
The Unix Programming Environment
An oldie but a goodie
The Linux Command Line: A Complete Introduction
A modern option
TCP/IP Illustrated Series
Head First Design Patterns
A gentle introduction to design patterns
Design Patterns: Elements of Reusable Object-Oriented Software
AKA the ""Gang Of Four"" book or GOF
The canonical design patterns book
Algorithm Design Manual (Skiena)
As a review and problem-recognition
The algorithm catalog portion is well beyond the scope of difficulty you'll get in an interview
This book has 2 parts:
Class textbook on data structures and algorithms
Pros:
Is a good review as any algorithms textbook would be
Nice stories from his experiences solving problems in industry and academia
Code examples in C
Cons:
Can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects
Chapters 7, 8, and 9 can be painful to try to follow, as some items are not explained well or require more brain than I have
Don't get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material
Algorithm catalog:
This is the real reason you buy this book.
This book is better as an algorithm reference, and not something you read cover to cover.
Can rent it on Kindle
Answers:
Solutions
Errata
Algorithm (Jeff Erickson)
Write Great Code: Volume 1: Understanding the Machine
The book was published in 2004, and is somewhat outdated, but it's a terrific resource for understanding a computer in brief
The author invented HLA, so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like
These chapters are worth the read to give you a nice foundation:
Chapter 2 - Numeric Representation
Chapter 3 - Binary Arithmetic and Bit Operations
Chapter 4 - Floating-Point Representation
Chapter 5 - Character Representation
Chapter 6 - Memory Organization and Access
Chapter 7 - Composite Data Types and Memory Objects
Chapter 9 - CPU Architecture
Chapter 10 - Instruction Set Architecture
Chapter 11 - Memory Architecture and Organization
Introduction to Algorithms
Important: Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won't teach you how to write good code. You have to be able to code a decent solution efficiently
AKA CLR, sometimes CLRS, because Stein was late to the game
Computer Architecture, Sixth Edition: A Quantitative Approach
For a richer, more up-to-date (2017), but longer treatment
⬆ back to top
System Design, Scalability, Data Handling
You can expect system design questions if you have 4+ years of experience.
Scalability and System Design are very large topics with many topics and resources, since
      there is a lot to consider when designing a software/hardware system that can scale.
      Expect to spend quite a bit of time on this
Considerations:
Scalability
Distill large data sets to single values
Transform one data set to another
Handling obscenely large amounts of data
System design
features sets
interfaces
class hierarchies
designing a system under certain constraints
simplicity and robustness
tradeoffs
performance analysis and optimization
[ ] START HERE: The System Design Primer
[ ] System Design from HiredInTech
[ ] How Do I Prepare To Answer Design Questions In A Technical Interview?
[ ] 8 steps guide to ace your system design interview
[ ] Database Normalization - 1NF, 2NF, 3NF and 4NF (video)
[ ] System Design Interview - There are a lot of resources in this one. Look through the articles and examples. I put some of them below
[ ] How to ace a systems design interview
[ ] Numbers Everyone Should Know
[ ] How long does it take to make a context switch?
[ ] Transactions Across Datacenters (video)
[ ] A plain English introduction to CAP Theorem
[ ] MIT 6.824: Distributed Systems, Spring 2020 (20 videos)
[ ] Consensus Algorithms:
[ ] Paxos - Paxos Agreement - Computerphile (video)
[ ] Raft - An Introduction to the Raft Distributed Consensus Algorithm (video)
[ ] Easy-to-read paper
[ ] Infographic
[ ] Consistent Hashing
[ ] NoSQL Patterns
[ ] Scalability:
You don't need all of these. Just pick a few that interest you.
[ ] Great overview (video)
[ ] Short series:
Clones
Database
Cache
Asynchronism
[ ] Scalable Web Architecture and Distributed Systems
[ ] Fallacies of Distributed Computing Explained
[ ] Jeff Dean - Building Software Systems At Google and Lessons Learned (video)
[ ] Introduction to Architecting Systems for Scale
[ ] Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)
[ ] How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)
[ ] The Importance of Algorithms
[ ] Sharding
[ ] Engineering for the Long Game - Astrid Atkinson Keynote(video)
[ ] 7 Years Of YouTube Scalability Lessons In 30 Minutes
video
[ ] How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs
[ ] How to Remove Duplicates in Large Datasets
[ ] A look inside Etsy's scale and engineering culture with Jon Cowie (video)
[ ] What Led Amazon to its Own Microservices Architecture
[ ] To Compress Or Not To Compress, That Was Uber's Question
[ ] When Should Approximate Query Processing Be Used?
[ ] Google's Transition From Single Datacenter To Failover, To A Native Multihomed Architecture
[ ] The Image Optimization Technology That Serves Millions Of Requests Per Day
[ ] A Patreon Architecture Short
[ ] Tinder: How Does One Of The Largest Recommendation Engines Decide Who You'll See Next?
[ ] Design Of A Modern Cache
[ ] Live Video Streaming At Facebook Scale
[ ] A Beginner's Guide To Scaling To 11 Million+ Users On Amazon's AWS
[ ] A 360 Degree View Of The Entire Netflix Stack
[ ] Latency Is Everywhere And It Costs You Sales - How To Crush It
[ ] What Powers Instagram: Hundreds of Instances, Dozens of Technologies
[ ] Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day
[ ] ESPN's Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second
[ ] See ""Messaging, Serialization, and Queueing Systems"" way below for info on some of the technologies that can glue services together
[ ] Twitter:
O'Reilly MySQL CE 2011: Jeremy Cole, ""Big and Small Data at @Twitter"" (video)
Timelines at Scale
For even more, see the ""Mining Massive Datasets"" video series in the Video Series section
[ ] Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:
review: The System Design Primer
System Design from HiredInTech
cheat sheet
flow:
Understand the problem and scope:
Define the use cases, with the interviewer's help
Suggest additional features
Remove items that the interviewer deems out of scope
Assume high availability is required, add as a use case
Think about constraints:
Ask how many requests per month
Ask how many requests per second (they may volunteer it or make you do the math)
Estimate reads vs. writes percentage
Keep the 80/20 rule in mind when estimating
How much data is written per second
Total storage required over 5 years
How much data read per second
Abstract design:
Layers (service, data, caching)
Infrastructure: load balancing, messaging
Rough overview of any key algorithm that drives the service
Consider bottlenecks and determine solutions
Exercises:
Design a random unique ID generation system
Design a key-value database
Design a picture sharing system
Design a recommendation system
Design a URL-shortener system: copied from above
Design a cache system
⬆ back to top
Additional Learning
I added them to help you become a well-rounded software engineer and to be aware of certain
technologies and algorithms, so you'll have a bigger toolbox.
Compilers
How a Compiler Works in ~1 minute (video)
Harvard CS50 - Compilers (video)
C++ (video)
Understanding Compiler Optimization (C++) (video)
Emacs and vi(m)
Familiarize yourself with a UNIX-based code editor
vi(m):
Editing With Vim 01 - Installation, Setup, and The Modes (video)
VIM Adventures
set of 4 videos:
The vi/vim editor - Lesson 1
The vi/vim editor - Lesson 2
The vi/vim editor - Lesson 3
The vi/vim editor - Lesson 4
Using Vi Instead of Emacs
emacs:
Basics Emacs Tutorial (video)
set of 3 (videos):
Emacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands
Emacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes
Emacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file, and packages
Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video)
Writing C Programs With Emacs
The Absolute Beginner's Guide to Emacs (video by David Wilson)
The Absolute Beginner's Guide to Emacs (notes by David Wilson)
Unix/Linux command line tools
I filled in the list below from good tools.
bash
cat
grep
sed
awk
curl or wget
sort
tr
uniq
strace
tcpdump
Essential Linux Commands Tutorial
DevOps
DevOps Roadmap
Information theory (videos)
Khan Academy
More about Markov processes:
Core Markov Text Generation
Core Implementing Markov Text Generation
Project = Markov Text Generation Walk Through
See more in the MIT 6.050J Information and Entropy series below
Parity & Hamming Code (videos)
Intro
Parity
Hamming Code:
Error detection
Error correction
Error Checking
Entropy
Also see the videos below
Make sure to watch information theory videos first
Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression & Bits (video)
Cryptography
Also see the videos below
Make sure to watch information theory videos first
Khan Academy Series
Cryptography: Hash Functions
Cryptography: Encryption
Compression
Make sure to watch information theory videos first
Computerphile (videos):
Compression
Entropy in Compression
Upside Down Trees (Huffman Trees)
EXTRA BITS/TRITS - Huffman Trees
Elegant Compression in Text (The LZ 77 Method)
Text Compression Meets Probabilities
Compressor Head videos
(optional) Google Developers Live: GZIP is not enough!
Computer Security
MIT (23 videos)
Introduction, Threat Models
Control Hijacking Attacks
Buffer Overflow Exploits and Defenses
Privilege Separation
Capabilities
Sandboxing Native Code
Web Security Model
Securing Web Applications
Symbolic Execution
Network Security
Network Protocols
Side-Channel Attacks
Garbage collection
GC in Python (video)
Deep Dive Java: Garbage Collection is Good!
Deep Dive Python: Garbage Collection in CPython (video)
Parallel Programming
Coursera (Scala)
Efficient Python for High-Performance Parallel Computing (video)
Messaging, Serialization, and Queueing Systems
Thrift
Tutorial
Protocol Buffers
Tutorials
gRPC
gRPC 101 for Java Developers (video)
Redis
Tutorial
Amazon SQS (queue)
Amazon SNS (pub-sub)
RabbitMQ
Get Started
Celery
First Steps With Celery
ZeroMQ
Intro - Read The Manual
ActiveMQ
Kafka
MessagePack
Avro
A*
A Search Algorithm
A* Pathfinding (E01: algorithm explanation) (video)
Fast Fourier Transform
An Interactive Guide To The Fourier Transform
What is a Fourier transform? What is it used for?
What is the Fourier Transform? (video)
Divide & Conquer: FFT (video)
Understanding The FFT
Bloom Filter
Given a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k)
Bloom Filters (video)
Bloom Filters | Mining of Massive Datasets | Stanford University (video)
Tutorial
How To Write A Bloom Filter App
HyperLogLog
How To Count A Billion Distinct Objects Using Only 1.5KB Of Memory
Locality-Sensitive Hashing
Used to determine the similarity of documents
The opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same
Simhashing (hopefully) made simple
van Emde Boas Trees
Divide & Conquer: van Emde Boas Trees (video)
MIT Lecture Notes
Augmented Data Structures
CS 61B Lecture 39: Augmenting Data Structures
Balanced search trees
Know at least one type of balanced binary tree (and know how it's implemented):
""Among balanced search trees, AVL and 2/3 trees are now passé and red-black trees seem to be more popular.
    A particularly interesting self-organizing data structure is the splay tree, which uses rotations
    to move any accessed key to the root."" - Skiena
Of these, I chose to implement a splay tree. From what I've read, you won't implement a
    balanced search tree in your interview. But I wanted exposure to coding one up
    and let's face it, splay trees are the bee's knees. I did read a lot of red-black tree code
Splay tree: insert, search, delete functions
If you end up implementing a red/black tree try just these:
Search and insertion functions, skipping delete
I want to learn more about B-Tree since it's used so widely with very large data sets
Self-balancing binary search tree
AVL trees
In practice:
    From what I can tell, these aren't used much in practice, but I could see where they would be:
    The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly
    balanced than red–black trees, leading to slower insertion and removal but faster retrieval. This makes it
    attractive for data structures that may be built once and loaded without reconstruction, such as language
    dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter)
MIT AVL Trees / AVL Sort (video)
AVL Trees (video)
AVL Tree Implementation (video)
Split And Merge
[Review] AVL Trees (playlist) in 19 minutes (video)
Splay trees
In practice:
    Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors,
    data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory,
    networking and file system code) etc
CS 61B: Splay Trees (video)
MIT Lecture: Splay Trees:
Gets very mathy, but watch the last 10 minutes for sure.
Video
Red/black trees
These are a translation of a 2-3 tree (see below).
In practice:
    Red–black trees offer worst-case guarantees for insertion time, deletion time, and search time.
    Not only does this make them valuable in time-sensitive applications such as real-time applications,
    but it makes them valuable building blocks in other data structures that provide worst-case guarantees;
    for example, many data structures used in computational geometry can be based on red-black trees, and
    the Completely Fair Scheduler used in current Linux kernels uses red–black trees. In version 8 of Java,
    the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor
    hashcodes, a Red-Black tree is used
Aduni - Algorithms - Lecture 4 (link jumps to the starting point) (video)
Aduni - Algorithms - Lecture 5 (video)
Red-Black Tree
An Introduction To Binary Search And Red Black Tree
[Review] Red-Black Trees (playlist) in 30 minutes (video)
2-3 search trees
In practice:
    2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees).
You would use 2-3 trees very rarely because its implementation involves different types of nodes. Instead, people use Red-Black trees.
23-Tree Intuition and Definition (video)
Binary View of 23-Tree
2-3 Trees (student recitation) (video)
2-3-4 Trees (aka 2-4 trees)
In practice:
    For every 2-4 trees, there are corresponding red–black trees with data elements in the same order. The insertion and deletion
    operations on 2-4 trees are also equivalent to color-flipping and rotations in red–black trees. This makes 2-4 trees an
    important tool for understanding the logic behind red-black trees, and this is why many introductory algorithm texts introduce
    2-4 trees just before red–black trees, even though 2-4 trees are not often used in practice.
CS 61B Lecture 26: Balanced Search Trees (video)
Bottom Up 234-Trees (video)
Top Down 234-Trees (video)
N-ary (K-ary, M-ary) trees
note: the N or K is the branching factor (max branches)
binary trees are a 2-ary tree, with branching factor = 2
2-3 trees are 3-ary
K-Ary Tree
B-Trees
Fun fact: it's a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor).
In Practice:
    B-trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to
    its use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary
    block in a particular file. The basic problem is turning the file block address into a disk block
    (or perhaps to a cylinder head sector) address
B-Tree
B-Tree Datastructure
Introduction to B-Trees (video)
B-Tree Definition and Insertion (video)
B-Tree Deletion (video)
MIT 6.851 - Memory Hierarchy Models (video)
        - covers cache-oblivious B-Trees, very interesting data structures
        - the first 37 minutes are very technical, and may be skipped (B is block size, cache line size)
[Review] B-Trees (playlist) in 26 minutes (video)
k-D Trees
Great for finding a number of points in a rectangle or higher-dimensional object
A good fit for k-nearest neighbors
kNN K-d tree algorithm (video)
Skip lists
""These are somewhat of a cult data structure"" - Skiena
Randomization: Skip Lists (video)
For animations and a little more detail
Network Flows
Ford-Fulkerson in 5 minutes — Step by step example (video)
Ford-Fulkerson Algorithm (video)
Network Flows (video)
Disjoint Sets & Union Find
UCB 61B - Disjoint Sets; Sorting & selection (video)
Sedgewick Algorithms - Union-Find (6 videos)
Math for Fast Processing
Integer Arithmetic, Karatsuba Multiplication (video)
The Chinese Remainder Theorem (used in cryptography) (video)
Treap
Combination of a binary search tree and a heap
Treap
Data Structures: Treaps explained (video)
Applications in set operations
Linear Programming (videos)
Linear Programming
Finding minimum cost
Finding maximum value
Solve Linear Equations with Python - Simplex Algorithm
Geometry, Convex hull (videos)
Graph Alg. IV: Intro to geometric algorithms - Lecture 9
Geometric Algorithms: Graham & Jarvis - Lecture 10
Divide & Conquer: Convex Hull, Median Finding
Discrete math
Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory
Discrete Mathematics by Shai Simonson (19 videos)
Discrete Mathematics By IIT Ropar NPTEL
⬆ back to top
Additional Detail on Some Subjects
I added these to reinforce some ideas already presented above, but didn't want to include them
above because it's just too much. It's easy to overdo it on a subject.
You want to get hired in this century, right?
SOLID
[ ] Bob Martin SOLID Principles of Object Oriented and Agile Design (video)
[ ] S - Single Responsibility Principle | Single responsibility to each Object
more flavor
[ ] O - Open/Closed Principle  | On production level Objects are ready for extension but not for modification
more flavor
[ ] L - Liskov Substitution Principle | Base Class and Derived class follow ‘IS A’ Principle
more flavor
[ ] I - Interface segregation principle | Clients should not be forced to implement interfaces they don't use
Interface Segregation Principle in 5 minutes (video)
more flavor
[ ] D -Dependency Inversion principle | Reduce the dependency In composition of objects.
Why Is The Dependency Inversion Principle And Why Is It Important
more flavor
Union-Find
Overview
Naive Implementation
Trees
Union By Rank
Path Compression
Analysis Options
More Dynamic Programming (videos)
6.006: Dynamic Programming I: Fibonacci, Shortest Paths
6.006: Dynamic Programming II: Text Justification, Blackjack
6.006: DP III: Parenthesization, Edit Distance, Knapsack
6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros.
6.046: Dynamic Programming & Advanced DP
6.046: Dynamic Programming: All-Pairs Shortest Paths
6.046: Dynamic Programming (student recitation)
Advanced Graph Processing (videos)
Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees
Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees
MIT Probability (mathy, and go slowly, which is good for mathy things) (videos):
MIT 6.042J - Probability Introduction
MIT 6.042J - Conditional Probability
MIT 6.042J - Independence
MIT 6.042J - Random Variables
MIT 6.042J - Expectation I
MIT 6.042J - Expectation II
MIT 6.042J - Large Deviations
MIT 6.042J - Random Walks
Simonson: Approximation Algorithms (video)
String Matching
Rabin-Karp (videos):
Rabin Karps Algorithm
Precomputing
Optimization: Implementation and Analysis
Table Doubling, Karp-Rabin
Rolling Hashes, Amortized Analysis
Knuth-Morris-Pratt (KMP):
TThe Knuth-Morris-Pratt (KMP) String Matching Algorithm
Boyer–Moore string search algorithm
Boyer-Moore String Search Algorithm
Advanced String Searching Boyer-Moore-Horspool Algorithms (video)
Coursera: Algorithms on Strings
starts off great, but by the time it gets past KMP it gets more complicated than it needs to be
nice explanation of tries
can be skipped
Sorting
Stanford lectures on sorting:
Lecture 15 | Programming Abstractions (video)
Lecture 16 | Programming Abstractions (video)
Shai Simonson:
Algorithms - Sorting - Lecture 2 (video)
Algorithms - Sorting II - Lecture 3 (video)
Steven Skiena lectures on sorting:
CSE373 2020 - Mergesort/Quicksort (video)
CSE373 2020 - Linear Sorting (video)
NAND To Tetris: Build a Modern Computer from First Principles
⬆ back to top
Video Series
Sit back and enjoy.
List of individual Dynamic Programming problems (each is short)
x86 Architecture, Assembly, Applications (11 videos)
MIT 18.06 Linear Algebra, Spring 2005 (35 videos)
Excellent - MIT Calculus Revisited: Single Variable Calculus
Skiena lectures from Algorithm Design Manual - CSE373 2020 - Analysis of Algorithms (26 videos)
UC Berkeley 61B (Spring 2014): Data Structures (25 videos)
UC Berkeley 61B (Fall 2006): Data Structures (39 videos)
UC Berkeley 61C: Machine Structures (26 videos)
OOSE: Software Dev Using UML and Java (21 videos)
MIT 6.004: Computation Structures (49 videos)
Carnegie Mellon - Computer Architecture Lectures (39 videos)
MIT 6.006: Intro to Algorithms (47 videos)
MIT 6.033: Computer System Engineering (22 videos)
MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)
MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)
MIT 6.046: Design and Analysis of Algorithms (34 videos)
MIT 6.824: Distributed Systems, Spring 2020 (20 videos)
MIT 6.851: Advanced Data Structures (22 videos)
MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)
Harvard COMPSCI 224: Advanced Algorithms (25 videos)
MIT 6.858 Computer Systems Security, Fall 2014
Stanford: Programming Paradigms (27 videos)
Introduction to Cryptography by Christof Paar
Course Website along with Slides and Problem Sets
Mining Massive Datasets - Stanford University (94 videos)
Graph Theory by Sarada Herke (67 videos)
⬆ back to top
Computer Science Courses
Directory of Online CS Courses
Directory of CS Courses (many with online lectures)
⬆ back to top
Algorithms implementation
Multiple Algorithms implementation by Princeton University
⬆ back to top
Papers
Love classic papers?
1978: Communicating Sequential Processes
implemented in Go
2003: The Google File System
replaced by Colossus in 2012
2004: MapReduce: Simplified Data Processing on Large Clusters
mostly replaced by Cloud Dataflow?
2006: Bigtable: A Distributed Storage System for Structured Data
2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems
2007: Dynamo: Amazon’s Highly Available Key-value Store
The Dynamo paper kicked off the NoSQL revolution
2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections)
2012: AddressSanitizer: A Fast Address Sanity Checker:
paper
video
2013: Spanner: Google’s Globally-Distributed Database:
paper
video
2015: Continuous Pipelines at Google
2015: High-Availability at Massive Scale: Building Google’s Data Infrastructure for Ads
2015: How Developers Search for Code: A Case Study
More papers: 1,000 papers
⬆ back to top
LICENSE
CC-BY-SA-4.0"
developer-roadmap,kamranahmedse,"['computer-science', 'roadmap', 'developer-roadmap', 'frontend-roadmap', 'devops-roadmap', 'backend-roadmap', 'react-roadmap', 'angular-roadmap', 'python-roadmap', 'go-roadmap', 'java-roadmap', 'dba-roadmap', 'vue-roadmap', 'blockchain-roadmap', 'javascript-roadmap', 'nodejs-roadmap', 'qa-roadmap', 'software-architect-roadmap']",2017-03-15 13:45:52+00:00,https://github.com/kamranahmedse/developer-roadmap,2025-01-13 08:00:26+00:00,TypeScript,305285,"Interactive roadmaps, guides and other educational content to help developers grow in their careers.","roadmap.sh
Community driven roadmaps, articles and resources for developers
![](https://i.imgur.com/waxVImv.png)
Roadmaps are now interactive, you can click the nodes to read more about the topics.
### [View all Roadmaps](https://roadmap.sh)  ·  [Best Practices](https://roadmap.sh/best-practices)  ·  [Questions](https://roadmap.sh/questions)
![](https://i.imgur.com/waxVImv.png)
Here is the list of available roadmaps with more being actively worked upon.
> Have a look at the [get started](https://roadmap.sh/get-started) page that might help you pick up a path.
- [Frontend Roadmap](https://roadmap.sh/frontend) / [Frontend Beginner Roadmap](https://roadmap.sh/frontend?r=frontend-beginner)
- [Backend Roadmap](https://roadmap.sh/backend) / [Backend Beginner Roadmap](https://roadmap.sh/backend?r=backend-beginner)
- [DevOps Roadmap](https://roadmap.sh/devops) / [DevOps Beginner Roadmap](https://roadmap.sh/devops?r=devops-beginner)
- [Full Stack Roadmap](https://roadmap.sh/full-stack)
- [Git and GitHub](https://roadmap.sh/git-github)
- [API Design Roadmap](https://roadmap.sh/api-design)
- [Computer Science Roadmap](https://roadmap.sh/computer-science)
- [Data Structures and Algorithms Roadmap](https://roadmap.sh/datastructures-and-algorithms)
- [AI and Data Scientist Roadmap](https://roadmap.sh/ai-data-scientist)
- [AI Engineer Roadmap](https://roadmap.sh/ai-engineer)
- [AWS Roadmap](https://roadmap.sh/aws)
- [Linux Roadmap](https://roadmap.sh/linux)
- [Terraform Roadmap](https://roadmap.sh/terraform)
- [Data Analyst Roadmap](https://roadmap.sh/data-analyst)
- [MLOps Roadmap](https://roadmap.sh/mlops)
- [Product Manager Roadmap](https://roadmap.sh/product-manager)
- [Engineering Manager Roadmap](https://roadmap.sh/engineering-manager)
- [QA Roadmap](https://roadmap.sh/qa)
- [Python Roadmap](https://roadmap.sh/python)
- [Software Architect Roadmap](https://roadmap.sh/software-architect)
- [Game Developer Roadmap](https://roadmap.sh/game-developer) / [Server Side Game Developer](https://roadmap.sh/server-side-game-developer)
- [Software Design and Architecture Roadmap](https://roadmap.sh/software-design-architecture)
- [JavaScript Roadmap](https://roadmap.sh/javascript)
- [TypeScript Roadmap](https://roadmap.sh/typescript)
- [C++ Roadmap](https://roadmap.sh/cpp)
- [React Roadmap](https://roadmap.sh/react)
- [React Native Roadmap](https://roadmap.sh/react-native)
- [Vue Roadmap](https://roadmap.sh/vue)
- [Angular Roadmap](https://roadmap.sh/angular)
- [Node.js Roadmap](https://roadmap.sh/nodejs)
- [PHP Roadmap](https://roadmap.sh/php)
- [GraphQL Roadmap](https://roadmap.sh/graphql)
- [Android Roadmap](https://roadmap.sh/android)
- [iOS Roadmap](https://roadmap.sh/ios)
- [Flutter Roadmap](https://roadmap.sh/flutter)
- [Go Roadmap](https://roadmap.sh/golang)
- [Rust Roadmap](https://roadmap.sh/rust)
- [Java Roadmap](https://roadmap.sh/java)
- [Spring Boot Roadmap](https://roadmap.sh/spring-boot)
- [Design System Roadmap](https://roadmap.sh/design-system)
- [PostgreSQL Roadmap](https://roadmap.sh/postgresql-dba)
- [SQL Roadmap](https://roadmap.sh/sql)
- [Redis Roadmap](https://roadmap.sh/redis)
- [Blockchain Roadmap](https://roadmap.sh/blockchain)
- [ASP.NET Core Roadmap](https://roadmap.sh/aspnet-core)
- [System Design Roadmap](https://roadmap.sh/system-design)
- [Kubernetes Roadmap](https://roadmap.sh/kubernetes)
- [Cyber Security Roadmap](https://roadmap.sh/cyber-security)
- [MongoDB Roadmap](https://roadmap.sh/mongodb)
- [UX Design Roadmap](https://roadmap.sh/ux-design)
- [Docker Roadmap](https://roadmap.sh/docker)
- [Prompt Engineering Roadmap](https://roadmap.sh/prompt-engineering)
- [Technical Writer Roadmap](https://roadmap.sh/technical-writer)
- [DevRel Engineer Roadmap](https://roadmap.sh/devrel)
There are also interactive best practices:
- [Backend Performance Best Practices](https://roadmap.sh/best-practices/backend-performance)
- [Frontend Performance Best Practices](https://roadmap.sh/best-practices/frontend-performance)
- [Code Review Best Practices](https://roadmap.sh/best-practices/code-review)
- [API Security Best Practices](https://roadmap.sh/best-practices/api-security)
- [AWS Best Practices](https://roadmap.sh/best-practices/aws)
..and questions to help you test, rate and improve your knowledge
- [JavaScript Questions](https://roadmap.sh/questions/javascript)
- [Node.js Questions](https://roadmap.sh/questions/nodejs)
- [React Questions](https://roadmap.sh/questions/react)
- [Backend Questions](https://roadmap.sh/questions/backend)
- [Frontend Questions](https://roadmap.sh/questions/frontend)
![](https://i.imgur.com/waxVImv.png)
## Share with the community
Please consider sharing a post about [roadmap.sh](https://roadmap.sh) and the value it provides. It really does help!
[![GitHub Repo stars](https://img.shields.io/badge/share%20on-reddit-red?logo=reddit)](https://reddit.com/submit?url=https://roadmap.sh&title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers)
[![GitHub Repo stars](https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator)](https://news.ycombinator.com/submitlink?u=https://roadmap.sh)
[![GitHub Repo stars](https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter)](https://twitter.com/share?url=https://roadmap.sh&text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers)
[![GitHub Repo stars](https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook)](https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh)
[![GitHub Repo stars](https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin)](https://www.linkedin.com/shareArticle?url=https://roadmap.sh&title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers)
## Development
Clone the repository, install the dependencies and start the application
```bash
git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
```
Note: use the `depth` parameter to reduce the clone size and speed up the clone.
```sh
git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
```
## Contribution
> Have a look at [contribution docs](./contributing.md) for how to update any of the roadmaps
- Add content to roadmaps
- Add new roadmaps
- Suggest changes to existing roadmaps
- Discuss ideas in issues
- Spread the word
## Thanks to all contributors ❤
## License
Have a look at the [license file](./license) for details"
system-design-primer,donnemartin,"['programming', 'development', 'design', 'design-system', 'system', 'design-patterns', 'web', 'web-application', 'webapp', 'python', 'interview', 'interview-questions', 'interview-practice']",2017-02-26 16:15:28+00:00,https://github.com/donnemartin/system-design-primer,2024-12-02 01:10:39+00:00,Python,285733,Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translation
Help translate this guide!
The System Design Primer
Motivation
Learn how to design large-scale systems.
Prep for the system design interview.
Learn how to design large-scale systems
Learning how to design scalable systems will help you become a better engineer.
System design is a broad topic.  There is a vast amount of resources scattered throughout the web on system design principles.
This repo is an organized collection of resources to help you learn how to build systems at scale.
Learn from the open source community
This is a continually updated, open source project.
Contributions are welcome!
Prep for the system design interview
In addition to coding interviews, system design is a required component of the technical interview process at many tech companies.
Practice common system design interview questions and compare your results with sample solutions: discussions, code, and diagrams.
Additional topics for interview prep:
Study guide
How to approach a system design interview question
System design interview questions, with solutions
Object-oriented design interview questions, with solutions
Additional system design interview questions
Anki flashcards
The provided Anki flashcard decks use spaced repetition to help you retain key system design concepts.
System design deck
System design exercises deck
Object oriented design exercises deck
Great for use while on-the-go.
Coding Resource: Interactive Coding Challenges
Looking for resources to help you prep for the Coding Interview?
Check out the sister repo Interactive Coding Challenges, which contains an additional Anki deck:
Coding deck
Contributing
Learn from the community.
Feel free to submit pull requests to help:
Fix errors
Improve sections
Add new sections
Translate
Content that needs some polishing is placed under development.
Review the Contributing Guidelines.
Index of system design topics
Summaries of various system design topics, including pros and cons.  Everything is a trade-off.
Each section contains links to more in-depth resources.
System design topics: start here
Step 1: Review the scalability video lecture
Step 2: Review the scalability article
Next steps
Performance vs scalability
Latency vs throughput
Availability vs consistency
CAP theorem
CP - consistency and partition tolerance
AP - availability and partition tolerance
Consistency patterns
Weak consistency
Eventual consistency
Strong consistency
Availability patterns
Fail-over
Replication
Availability in numbers
Domain name system
Content delivery network
Push CDNs
Pull CDNs
Load balancer
Active-passive
Active-active
Layer 4 load balancing
Layer 7 load balancing
Horizontal scaling
Reverse proxy (web server)
Load balancer vs reverse proxy
Application layer
Microservices
Service discovery
Database
Relational database management system (RDBMS)
Master-slave replication
Master-master replication
Federation
Sharding
Denormalization
SQL tuning
NoSQL
Key-value store
Document store
Wide column store
Graph Database
SQL or NoSQL
Cache
Client caching
CDN caching
Web server caching
Database caching
Application caching
Caching at the database query level
Caching at the object level
When to update the cache
Cache-aside
Write-through
Write-behind (write-back)
Refresh-ahead
Asynchronism
Message queues
Task queues
Back pressure
Communication
Transmission control protocol (TCP)
User datagram protocol (UDP)
Remote procedure call (RPC)
Representational state transfer (REST)
Security
Appendix
Powers of two table
Latency numbers every programmer should know
Additional system design interview questions
Real world architectures
Company architectures
Company engineering blogs
Under development
Credits
Contact info
License
Study guide
Suggested topics to review based on your interview timeline (short, medium, long).
Q: For interviews, do I need to know everything here?
A: No, you don't need to know everything here to prepare for the interview.
What you are asked in an interview depends on variables such as:
How much experience you have
What your technical background is
What positions you are interviewing for
Which companies you are interviewing with
Luck
More experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.
Start broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.
Short timeline - Aim for breadth with system design topics.  Practice by solving some interview questions.
Medium timeline - Aim for breadth and some depth with system design topics.  Practice by solving many interview questions.
Long timeline - Aim for breadth and more depth with system design topics.  Practice by solving most interview questions.
| | Short | Medium | Long |
|---|---|---|---|
| Read through the System design topics to get a broad understanding of how systems work | :+1: | :+1: | :+1: |
| Read through a few articles in the Company engineering blogs for the companies you are interviewing with | :+1: | :+1: | :+1: |
| Read through a few Real world architectures | :+1: | :+1: | :+1: |
| Review How to approach a system design interview question | :+1: | :+1: | :+1: |
| Work through System design interview questions with solutions | Some | Many | Most |
| Work through Object-oriented design interview questions with solutions | Some | Many | Most |
| Review Additional system design interview questions | Some | Many | Most |
How to approach a system design interview question
How to tackle a system design interview question.
The system design interview is an open-ended conversation.  You are expected to lead it.
You can use the following steps to guide the discussion.  To help solidify this process, work through the System design interview questions with solutions section using the following steps.
Step 1: Outline use cases, constraints, and assumptions
Gather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.
Who is going to use it?
How are they going to use it?
How many users are there?
What does the system do?
What are the inputs and outputs of the system?
How much data do we expect to handle?
How many requests per second do we expect?
What is the expected read to write ratio?
Step 2: Create a high level design
Outline a high level design with all important components.
Sketch the main components and connections
Justify your ideas
Step 3: Design core components
Dive into details for each core component.  For example, if you were asked to design a url shortening service, discuss:
Generating and storing a hash of the full url
MD5 and Base62
Hash collisions
SQL or NoSQL
Database schema
Translating a hashed url to the full url
Database lookup
API and object-oriented design
Step 4: Scale the design
Identify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?
Load balancer
Horizontal scaling
Caching
Database sharding
Discuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using principles of scalable system design.
Back-of-the-envelope calculations
You might be asked to do some estimates by hand.  Refer to the Appendix for the following resources:
Use back of the envelope calculations
Powers of two table
Latency numbers every programmer should know
Source(s) and further reading
Check out the following links to get a better idea of what to expect:
How to ace a systems design interview
The system design interview
Intro to Architecture and Systems Design Interviews
System design template
System design interview questions with solutions
Common system design interview questions with sample discussions, code, and diagrams.
Solutions linked to content in the solutions/ folder.
| Question | |
|---|---|
| Design Pastebin.com (or Bit.ly) | Solution |
| Design the Twitter timeline and search (or Facebook feed and search) | Solution |
| Design a web crawler | Solution |
| Design Mint.com | Solution |
| Design the data structures for a social network | Solution |
| Design a key-value store for a search engine | Solution |
| Design Amazon's sales ranking by category feature | Solution |
| Design a system that scales to millions of users on AWS | Solution |
| Add a system design question | Contribute |
Design Pastebin.com (or Bit.ly)
View exercise and solution
Design the Twitter timeline and search (or Facebook feed and search)
View exercise and solution
Design a web crawler
View exercise and solution
Design Mint.com
View exercise and solution
Design the data structures for a social network
View exercise and solution
Design a key-value store for a search engine
View exercise and solution
Design Amazon's sales ranking by category feature
View exercise and solution
Design a system that scales to millions of users on AWS
View exercise and solution
Object-oriented design interview questions with solutions
Common object-oriented design interview questions with sample discussions, code, and diagrams.
Solutions linked to content in the solutions/ folder.
Note: This section is under development
| Question | |
|---|---|
| Design a hash map | Solution  |
| Design a least recently used cache | Solution  |
| Design a call center | Solution  |
| Design a deck of cards | Solution  |
| Design a parking lot | Solution  |
| Design a chat server | Solution  |
| Design a circular array | Contribute  |
| Add an object-oriented design question | Contribute |
System design topics: start here
New to system design?
First, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.
Step 1: Review the scalability video lecture
Scalability Lecture at Harvard
Topics covered:
Vertical scaling
Horizontal scaling
Caching
Load balancing
Database replication
Database partitioning
Step 2: Review the scalability article
Scalability
Topics covered:
Clones
Databases
Caches
Asynchronism
Next steps
Next, we'll look at high-level trade-offs:
Performance vs scalability
Latency vs throughput
Availability vs consistency
Keep in mind that everything is a trade-off.
Then we'll dive into more specific topics such as DNS, CDNs, and load balancers.
Performance vs scalability
A service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1
Another way to look at performance vs scalability:
If you have a performance problem, your system is slow for a single user.
If you have a scalability problem, your system is fast for a single user but slow under heavy load.
Source(s) and further reading
A word on scalability
Scalability, availability, stability, patterns
Latency vs throughput
Latency is the time to perform some action or to produce some result.
Throughput is the number of such actions or results per unit of time.
Generally, you should aim for maximal throughput with acceptable latency.
Source(s) and further reading
Understanding latency vs throughput
Availability vs consistency
CAP theorem
Source: CAP theorem revisited
In a distributed computer system, you can only support two of the following guarantees:
Consistency - Every read receives the most recent write or an error
Availability - Every request receives a response, without guarantee that it contains the most recent version of the information
Partition Tolerance - The system continues to operate despite arbitrary partitioning due to network failures
Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.
CP - consistency and partition tolerance
Waiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.
AP - availability and partition tolerance
Responses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.
AP is a good choice if the business needs to allow for eventual consistency or when the system needs to continue working despite external errors.
Source(s) and further reading
CAP theorem revisited
A plain english introduction to CAP theorem
CAP FAQ
The CAP theorem
Consistency patterns
With multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the CAP theorem - Every read receives the most recent write or an error.
Weak consistency
After a write, reads may or may not see it.  A best effort approach is taken.
This approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.
Eventual consistency
After a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.
This approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.
Strong consistency
After a write, reads will see it.  Data is replicated synchronously.
This approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.
Source(s) and further reading
Transactions across data centers
Availability patterns
There are two complementary patterns to support high availability: fail-over and replication.
Fail-over
Active-passive
With active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.
The length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.
Active-passive failover can also be referred to as master-slave failover.
Active-active
In active-active, both servers are managing traffic, spreading the load between them.
If the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.
Active-active failover can also be referred to as master-master failover.
Disadvantage(s): failover
Fail-over adds more hardware and additional complexity.
There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.
Replication
Master-slave and master-master
This topic is further discussed in the Database section:
Master-slave replication
Master-master replication
Availability in numbers
Availability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.
99.9% availability - three 9s
| Duration            | Acceptable downtime|
|---------------------|--------------------|
| Downtime per year   | 8h 45min 57s       |
| Downtime per month  | 43m 49.7s          |
| Downtime per week   | 10m 4.8s           |
| Downtime per day    | 1m 26.4s           |
99.99% availability - four 9s
| Duration            | Acceptable downtime|
|---------------------|--------------------|
| Downtime per year   | 52min 35.7s        |
| Downtime per month  | 4m 23s             |
| Downtime per week   | 1m 5s              |
| Downtime per day    | 8.6s               |
Availability in parallel vs in sequence
If a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.
In sequence
Overall availability decreases when two components with availability < 100% are in sequence:
Availability (Total) = Availability (Foo) * Availability (Bar)
If both Foo and Bar each had 99.9% availability, their total availability in sequence would be 99.8%.
In parallel
Overall availability increases when two components with availability < 100% are in parallel:
Availability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))
If both Foo and Bar each had 99.9% availability, their total availability in parallel would be 99.9999%.
Domain name system
Source: DNS security presentation
A Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.
DNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the time to live (TTL).
NS record (name server) - Specifies the DNS servers for your domain/subdomain.
MX record (mail exchange) - Specifies the mail servers for accepting messages.
A record (address) - Points a name to an IP address.
CNAME (canonical) - Points a name to another name or CNAME (example.com to www.example.com) or to an A record.
Services such as CloudFlare and Route 53 provide managed DNS services.  Some DNS services can route traffic through various methods:
Weighted round robin
Prevent traffic from going to servers under maintenance
Balance between varying cluster sizes
A/B testing
Latency-based
Geolocation-based
Disadvantage(s): DNS
Accessing a DNS server introduces a slight delay, although mitigated by caching described above.
DNS server management could be complex and is generally managed by governments, ISPs, and large companies.
DNS services have recently come under DDoS attack, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).
Source(s) and further reading
DNS architecture
Wikipedia
DNS articles
Content delivery network
Source: Why use a CDN
A content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.
Serving content from CDNs can significantly improve performance in two ways:
Users receive content from data centers close to them
Your servers do not have to serve requests that the CDN fulfills
Push CDNs
Push CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.
Sites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.
Pull CDNs
Pull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.
A time-to-live (TTL) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.
Sites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.
Disadvantage(s): CDN
CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.
Content might be stale if it is updated before the TTL expires it.
CDNs require changing URLs for static content to point to the CDN.
Source(s) and further reading
Globally distributed content delivery
The differences between push and pull CDNs
Wikipedia
Load balancer
Source: Scalable system design patterns
Load balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:
Preventing requests from going to unhealthy servers
Preventing overloading resources
Helping to eliminate a single point of failure
Load balancers can be implemented with hardware (expensive) or with software such as HAProxy.
Additional benefits include:
SSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
Removes the need to install X.509 certificates on each server
Session persistence - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions
To protect against failures, it's common to set up multiple load balancers, either in active-passive or active-active mode.
Load balancers can route traffic based on various metrics, including:
Random
Least loaded
Session/cookies
Round robin or weighted round robin
Layer 4
Layer 7
Layer 4 load balancing
Layer 4 load balancers look at info at the transport layer to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing Network Address Translation (NAT).
Layer 7 load balancing
Layer 7 load balancers look at the application layer to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.
At the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.
Horizontal scaling
Load balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called Vertical Scaling.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.
Disadvantage(s): horizontal scaling
Scaling horizontally introduces complexity and involves cloning servers
Servers should be stateless: they should not contain any user-related data like sessions or profile pictures
Sessions can be stored in a centralized data store such as a database (SQL, NoSQL) or a persistent cache (Redis, Memcached)
Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out
Disadvantage(s): load balancer
The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.
Introducing a load balancer to help eliminate a single point of failure results in increased complexity.
A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.
Source(s) and further reading
NGINX architecture
HAProxy architecture guide
Scalability
Wikipedia
Layer 4 load balancing
Layer 7 load balancing
ELB listener config
Reverse proxy (web server)
Source: Wikipedia
A reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.
Additional benefits include:
Increased security - Hide information about backend servers, blacklist IPs, limit number of connections per client
Increased scalability and flexibility - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration
SSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations
Removes the need to install X.509 certificates on each server
Compression - Compress server responses
Caching - Return the response for cached requests
Static content - Serve static content directly
HTML/CSS/JS
Photos
Videos
Etc
Load balancer vs reverse proxy
Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.
Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.
Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.
Disadvantage(s): reverse proxy
Introducing a reverse proxy results in increased complexity.
A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a failover) further increases complexity.
Source(s) and further reading
Reverse proxy vs load balancer
NGINX architecture
HAProxy architecture guide
Wikipedia
Application layer
Source: Intro to architecting systems for scale
Separating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The single responsibility principle advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.
Workers in the application layer also help enable asynchronism.
Microservices
Related to this discussion are microservices, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. 1
Pinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.
Service Discovery
Systems such as Consul, Etcd, and Zookeeper can help services find each other by keeping track of registered names, addresses, and ports.  Health checks help verify service integrity and are often done using an HTTP endpoint.  Both Consul and Etcd have a built in key-value store that can be useful for storing config values and other shared data.
Disadvantage(s): application layer
Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).
Microservices can add complexity in terms of deployments and operations.
Source(s) and further reading
Intro to architecting systems for scale
Crack the system design interview
Service oriented architecture
Introduction to Zookeeper
Here's what you need to know about building microservices
Database
Source: Scaling up to your first 10 million users
Relational database management system (RDBMS)
A relational database like SQL is a collection of data items organized in tables.
ACID is a set of properties of relational database transactions.
Atomicity - Each transaction is all or nothing
Consistency - Any transaction will bring the database from one valid state to another
Isolation - Executing transactions concurrently has the same results as if the transactions were executed serially
Durability - Once a transaction has been committed, it will remain so
There are many techniques to scale a relational database: master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.
Master-slave replication
The master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.
Source: Scalability, availability, stability, patterns
Disadvantage(s): master-slave replication
Additional logic is needed to promote a slave to a master.
See Disadvantage(s): replication for points related to both master-slave and master-master.
Master-master replication
Both masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.
Source: Scalability, availability, stability, patterns
Disadvantage(s): master-master replication
You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.
Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.
Conflict resolution comes more into play as more write nodes are added and as latency increases.
See Disadvantage(s): replication for points related to both master-slave and master-master.
Disadvantage(s): replication
There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.
Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.
The more read slaves, the more you have to replicate, which leads to greater replication lag.
On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.
Replication adds more hardware and additional complexity.
Source(s) and further reading: replication
Scalability, availability, stability, patterns
Multi-master replication
Federation
Source: Scaling up to your first 10 million users
Federation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: forums, users, and products, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.
Disadvantage(s): federation
Federation is not effective if your schema requires huge functions or tables.
You'll need to update your application logic to determine which database to read and write.
Joining data from two databases is more complex with a server link.
Federation adds more hardware and additional complexity.
Source(s) and further reading: federation
Scaling up to your first 10 million users
Sharding
Source: Scalability, availability, stability, patterns
Sharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.
Similar to the advantages of federation, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.
Common ways to shard a table of users is either through the user's last name initial or the user's geographic location.
Disadvantage(s): sharding
You'll need to update your application logic to work with shards, which could result in complex SQL queries.
Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.
Rebalancing adds additional complexity.  A sharding function based on consistent hashing can reduce the amount of transferred data.
Joining data from multiple shards is more complex.
Sharding adds more hardware and additional complexity.
Source(s) and further reading: sharding
The coming of the shard
Shard database architecture
Consistent hashing
Denormalization
Denormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as PostgreSQL and Oracle support materialized views which handle the work of storing redundant information and keeping redundant copies consistent.
Once data becomes distributed with techniques such as federation and sharding, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.
In most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.
Disadvantage(s): denormalization
Data is duplicated.
Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.
A denormalized database under heavy write load might perform worse than its normalized counterpart.
Source(s) and further reading: denormalization
Denormalization
SQL tuning
SQL tuning is a broad topic and many books have been written as reference.
It's important to benchmark and profile to simulate and uncover bottlenecks.
Benchmark - Simulate high-load situations with tools such as ab.
Profile - Enable tools such as the slow query log to help track performance issues.
Benchmarking and profiling might point you to the following optimizations.
Tighten up the schema
MySQL dumps to disk in contiguous blocks for fast access.
Use CHAR instead of VARCHAR for fixed-length fields.
CHAR effectively allows for fast, random access, whereas with VARCHAR, you must find the end of a string before moving onto the next one.
Use TEXT for large blocks of text such as blog posts.  TEXT also allows for boolean searches.  Using a TEXT field results in storing a pointer on disk that is used to locate the text block.
Use INT for larger numbers up to 2^32 or 4 billion.
Use DECIMAL for currency to avoid floating point representation errors.
Avoid storing large BLOBS, store the location of where to get the object instead.
VARCHAR(255) is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.
Set the NOT NULL constraint where applicable to improve search performance.
Use good indices
Columns that you are querying (SELECT, GROUP BY, ORDER BY, JOIN) could be faster with indices.
Indices are usually represented as self-balancing B-tree that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.
Placing an index can keep the data in memory, requiring more space.
Writes could also be slower since the index also needs to be updated.
When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.
Avoid expensive joins
Denormalize where performance demands it.
Partition tables
Break up a table by putting hot spots in a separate table to help keep it in memory.
Tune the query cache
In some cases, the query cache could lead to performance issues.
Source(s) and further reading: SQL tuning
Tips for optimizing MySQL queries
Is there a good reason i see VARCHAR(255) used so often?
How do null values affect performance?
Slow query log
NoSQL
NoSQL is a collection of data items represented in a key-value store, document store, wide column store, or a graph database.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor eventual consistency.
BASE is often used to describe the properties of NoSQL databases.  In comparison with the CAP Theorem, BASE chooses availability over consistency.
Basically available - the system guarantees availability.
Soft state - the state of the system may change over time, even without input.
Eventual consistency - the system will become consistent over a period of time, given that the system doesn't receive input during that period.
In addition to choosing between SQL or NoSQL, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review key-value stores, document stores, wide column stores, and graph databases in the next section.
Key-value store
Abstraction: hash table
A key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in lexicographic order, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.
Key-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.
A key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.
Source(s) and further reading: key-value store
Key-value database
Disadvantages of key-value stores
Redis architecture
Memcached architecture
Document store
Abstraction: key-value store with documents stored as values
A document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.
Based on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.
Some document stores like MongoDB and CouchDB also provide a SQL-like language to perform complex queries.  DynamoDB supports both key-values and documents.
Document stores provide high flexibility and are often used for working with occasionally changing data.
Source(s) and further reading: document store
Document-oriented database
MongoDB architecture
CouchDB architecture
Elasticsearch architecture
Wide column store
Source: SQL & NoSQL, a brief history
Abstraction: nested map ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>
A wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.
Google introduced Bigtable as the first wide column store, which influenced the open-source HBase often-used in the Hadoop ecosystem, and Cassandra from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.
Wide column stores offer high availability and high scalability.  They are often used for very large data sets.
Source(s) and further reading: wide column store
SQL & NoSQL, a brief history
Bigtable architecture
HBase architecture
Cassandra architecture
Graph database
Source: Graph database
Abstraction: graph
In a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.
Graphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with REST APIs.
Source(s) and further reading: graph
Graph database
Neo4j
FlockDB
Source(s) and further reading: NoSQL
Explanation of base terminology
NoSQL databases a survey and decision guidance
Scalability
Introduction to NoSQL
NoSQL patterns
SQL or NoSQL
Source: Transitioning from RDBMS to NoSQL
Reasons for SQL:
Structured data
Strict schema
Relational data
Need for complex joins
Transactions
Clear patterns for scaling
More established: developers, community, code, tools, etc
Lookups by index are very fast
Reasons for NoSQL:
Semi-structured data
Dynamic or flexible schema
Non-relational data
No need for complex joins
Store many TB (or PB) of data
Very data intensive workload
Very high throughput for IOPS
Sample data well-suited for NoSQL:
Rapid ingest of clickstream and log data
Leaderboard or scoring data
Temporary data, such as a shopping cart
Frequently accessed ('hot') tables
Metadata/lookup tables
Source(s) and further reading: SQL or NoSQL
Scaling up to your first 10 million users
SQL vs NoSQL differences
Cache
Source: Scalable system design patterns
Caching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.
Databases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.
Client caching
Caches can be located on the client side (OS or browser), server side, or in a distinct cache layer.
CDN caching
CDNs are considered a type of cache.
Web server caching
Reverse proxies and caches such as Varnish can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.
Database caching
Your database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.
Application caching
In-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so cache invalidation algorithms such as least recently used (LRU) can help invalidate 'cold' entries and keep 'hot' data in RAM.
Redis has the following additional features:
Persistence option
Built-in data structures such as sorted sets and lists
There are multiple levels you can cache that fall into two general categories: database queries and objects:
Row level
Query-level
Fully-formed serializable objects
Fully-rendered HTML
Generally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.
Caching at the database query level
Whenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:
Hard to delete a cached result with complex queries
If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell
Caching at the object level
See your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):
Remove the object from cache if its underlying data has changed
Allows for asynchronous processing: workers assemble objects by consuming the latest cached object
Suggestions of what to cache:
User sessions
Fully rendered web pages
Activity streams
User graph data
When to update the cache
Since you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.
Cache-aside
Source: From cache to in-memory data grid
The application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:
Look for entry in cache, resulting in a cache miss
Load entry from the database
Add entry to cache
Return entry
python
def get_user(self, user_id):
    user = cache.get(""user.{0}"", user_id)
    if user is None:
        user = db.query(""SELECT * FROM users WHERE user_id = {0}"", user_id)
        if user is not None:
            key = ""user.{0}"".format(user_id)
            cache.set(key, json.dumps(user))
    return user
Memcached is generally used in this manner.
Subsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.
Disadvantage(s): cache-aside
Each cache miss results in three trips, which can cause a noticeable delay.
Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.
When a node fails, it is replaced by a new, empty node, increasing latency.
Write-through
Source: Scalability, availability, stability, patterns
The application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:
Application adds/updates entry in cache
Cache synchronously writes entry to data store
Return
Application code:
python
set_user(12345, {""foo"":""bar""})
Cache code:
python
def set_user(user_id, values):
    user = db.query(""UPDATE Users WHERE id = {0}"", user_id, values)
    cache.set(user_id, user)
Write-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.
Disadvantage(s): write through
When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.
Most data written might never be read, which can be minimized with a TTL.
Write-behind (write-back)
Source: Scalability, availability, stability, patterns
In write-behind, the application does the following:
Add/update entry in cache
Asynchronously write entry to the data store, improving write performance
Disadvantage(s): write-behind
There could be data loss if the cache goes down prior to its contents hitting the data store.
It is more complex to implement write-behind than it is to implement cache-aside or write-through.
Refresh-ahead
Source: From cache to in-memory data grid
You can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.
Refresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.
Disadvantage(s): refresh-ahead
Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.
Disadvantage(s): cache
Need to maintain consistency between caches and the source of truth such as the database through cache invalidation.
Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.
Need to make application changes such as adding Redis or memcached.
Source(s) and further reading
From cache to in-memory data grid
Scalable system design patterns
Introduction to architecting systems for scale
Scalability, availability, stability, patterns
Scalability
AWS ElastiCache strategies
Wikipedia
Asynchronism
Source: Intro to architecting systems for scale
Asynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.
Message queues
Message queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:
An application publishes a job to the queue, then notifies the user of job status
A worker picks up the job from the queue, processes it, then signals the job is complete
The user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.
Redis is useful as a simple message broker but messages can be lost.
RabbitMQ is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.
Amazon SQS is hosted but can have high latency and has the possibility of messages being delivered twice.
Task queues
Tasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.
Celery has support for scheduling and primarily has python support.
Back pressure
If queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  Back pressure can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with exponential backoff.
Disadvantage(s): asynchronism
Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.
Source(s) and further reading
It's all a numbers game
Applying back pressure when overloaded
Little's law
What is the difference between a message queue and a task queue?
Communication
Source: OSI 7 layer model
Hypertext transfer protocol (HTTP)
HTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.
A basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:
| Verb | Description | Idempotent* | Safe | Cacheable |
|---|---|---|---|---|
| GET | Reads a resource | Yes | Yes | Yes |
| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |
| PUT | Creates or replace a resource | Yes | No | No |
| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |
| DELETE | Deletes a resource | Yes | No | No |
*Can be called many times without different outcomes.
HTTP is an application layer protocol relying on lower-level protocols such as TCP and UDP.
Source(s) and further reading: HTTP
What is HTTP?
Difference between HTTP and TCP
Difference between PUT and PATCH
Transmission control protocol (TCP)
Source: How to make a multiplayer game
TCP is a connection-oriented protocol over an IP network.  Connection is established and terminated using a handshake.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:
Sequence numbers and checksum fields for each packet
Acknowledgement packets and automatic retransmission
If the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements flow control and congestion control.  These guarantees cause delays and generally result in less efficient transmission than UDP.
To ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a memcached server.  Connection pooling can help in addition to switching to UDP where applicable.
TCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.
Use TCP over UDP when:
You need all of the data to arrive intact
You want to automatically make a best estimate use of the network throughput
User datagram protocol (UDP)
Source: How to make a multiplayer game
UDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.
UDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with DHCP because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.
UDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.
Use UDP over TCP when:
You need the lowest latency
Late data is worse than loss of data
You want to implement your own error correction
Source(s) and further reading: TCP and UDP
Networking for game programming
Key differences between TCP and UDP protocols
Difference between TCP and UDP
Transmission control protocol
User datagram protocol
Scaling memcache at Facebook
Remote procedure call (RPC)
Source: Crack the system design interview
In an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include Protobuf, Thrift, and Avro.
RPC is a request-response protocol:
Client program - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.
Client stub procedure - Marshals (packs) procedure id and arguments into a request message.
Client communication module - OS sends the message from the client to the server.
Server communication module - OS passes the incoming packets to the server stub procedure.
Server stub procedure -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.
The server response repeats the steps above in reverse order.
Sample RPC calls:
```
GET /someoperation?data=anId
POST /anotheroperation
{
  ""data"":""anId"";
  ""anotherdata"": ""another value""
}
```
RPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.
Choose a native library (aka SDK) when:
You know your target platform.
You want to control how your ""logic"" is accessed.
You want to control how error control happens off your library.
Performance and end user experience is your primary concern.
HTTP APIs following REST tend to be used more often for public APIs.
Disadvantage(s): RPC
RPC clients become tightly coupled to the service implementation.
A new API must be defined for every new operation or use case.
It can be difficult to debug RPC.
You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure RPC calls are properly cached on caching servers such as Squid.
Representational state transfer (REST)
REST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.
There are four qualities of a RESTful interface:
Identify resources (URI in HTTP) - use the same URI regardless of any operation.
Change with representations (Verbs in HTTP) - use verbs, headers, and body.
Self-descriptive error message (status response in HTTP) - Use status codes, don't reinvent the wheel.
HATEOAS (HTML interface for HTTP) - your web service should be fully accessible in a browser.
Sample REST calls:
```
GET /someresources/anId
PUT /someresources/anId
{""anotherdata"": ""another value""}
```
REST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, representation through headers, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.
Disadvantage(s): REST
With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.
REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.
Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.
Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.
RPC and REST calls comparison
| Operation | RPC | REST |
|---|---|---|
| Signup    | POST /signup | POST /persons |
| Resign    | POST /resign{""personid"": ""1234""} | DELETE /persons/1234 |
| Read a person | GET /readPerson?personid=1234 | GET /persons/1234 |
| Read a person’s items list | GET /readUsersItemsList?personid=1234 | GET /persons/1234/items |
| Add an item to a person’s items | POST /addItemToUsersItemsList{""personid"": ""1234"";""itemid"": ""456""} | POST /persons/1234/items{""itemid"": ""456""} |
| Update an item    | POST /modifyItem{""itemid"": ""456"";""key"": ""value""} | PUT /items/456{""key"": ""value""} |
| Delete an item | POST /removeItem{""itemid"": ""456""} | DELETE /items/456 |
Source: Do you really know why you prefer REST over RPC
Source(s) and further reading: REST and RPC
Do you really know why you prefer REST over RPC
When are RPC-ish approaches more appropriate than REST?
REST vs JSON-RPC
Debunking the myths of RPC and REST
What are the drawbacks of using REST
Crack the system design interview
Thrift
Why REST for internal use and not RPC
Security
This section could use some updates.  Consider contributing!
Security is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:
Encrypt in transit and at rest.
Sanitize all user inputs or any input parameters exposed to user to prevent XSS and SQL injection.
Use parameterized queries to prevent SQL injection.
Use the principle of least privilege.
Source(s) and further reading
API security checklist
Security guide for developers
OWASP top ten
Appendix
You'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The Powers of two table and Latency numbers every programmer should know are handy references.
Powers of two table
```
Power           Exact Value         Approx Value        Bytes
7                             128
8                             256
10                           1024   1 thousand           1 KB
16                         65,536                       64 KB
20                      1,048,576   1 million            1 MB
30                  1,073,741,824   1 billion            1 GB
32                  4,294,967,296                        4 GB
40              1,099,511,627,776   1 trillion           1 TB
```
Source(s) and further reading
Powers of two
Latency numbers every programmer should know
```
Latency Comparison Numbers
L1 cache reference                           0.5 ns
Branch mispredict                            5   ns
L2 cache reference                           7   ns                      14x L1 cache
Mutex lock/unlock                           25   ns
Main memory reference                      100   ns                      20x L2 cache, 200x L1 cache
Compress 1K bytes with Zippy            10,000   ns       10 us
Send 1 KB bytes over 1 Gbps network     10,000   ns       10 us
Read 4 KB randomly from SSD           150,000   ns      150 us          ~1GB/sec SSD
Read 1 MB sequentially from memory     250,000   ns      250 us
Round trip within same datacenter      500,000   ns      500 us
Read 1 MB sequentially from SSD     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory
HDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip
Read 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD
Read 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD
Send packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms
Notes
1 ns = 10^-9 seconds
1 us = 10^-6 seconds = 1,000 ns
1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns
```
Handy metrics based on numbers above:
Read sequentially from HDD at 30 MB/s
Read sequentially from 1 Gbps Ethernet at 100 MB/s
Read sequentially from SSD at 1 GB/s
Read sequentially from main memory at 4 GB/s
6-7 world-wide round trips per second
2,000 round trips per second within a data center
Latency numbers visualized
Source(s) and further reading
Latency numbers every programmer should know - 1
Latency numbers every programmer should know - 2
Designs, lessons, and advice from building large distributed systems
Software Engineering Advice from Building Large-Scale Distributed Systems
Additional system design interview questions
Common system design interview questions, with links to resources on how to solve each.
| Question | Reference(s) |
|---|---|
| Design a file sync service like Dropbox | youtube.com |
| Design a search engine like Google | queue.acm.orgstackexchange.comardendertat.comstanford.edu |
| Design a scalable web crawler like Google | quora.com |
| Design Google docs | code.google.comneil.fraser.name |
| Design a key-value store like Redis | slideshare.net |
| Design a cache system like Memcached | slideshare.net |
| Design a recommendation system like Amazon's | hulu.comijcai13.org |
| Design a tinyurl system like Bitly | n00tc0d3r.blogspot.com |
| Design a chat app like WhatsApp | highscalability.com
| Design a picture sharing system like Instagram | highscalability.comhighscalability.com |
| Design the Facebook news feed function | quora.comquora.comslideshare.net |
| Design the Facebook timeline function | facebook.comhighscalability.com |
| Design the Facebook chat function | erlang-factory.comfacebook.com |
| Design a graph search function like Facebook's | facebook.comfacebook.comfacebook.com |
| Design a content delivery network like CloudFlare | figshare.com |
| Design a trending topic system like Twitter's | michael-noll.comsnikolov .wordpress.com |
| Design a random ID generation system | blog.twitter.comgithub.com |
| Return the top k requests during a time interval | cs.ucsb.eduwpi.edu |
| Design a system that serves data from multiple data centers | highscalability.com |
| Design an online multiplayer card game | indieflashblog.combuildnewgames.com |
| Design a garbage collection system | stuffwithstuff.comwashington.edu |
| Design an API rate limiter | https://stripe.com/blog/ |
| Design a Stock Exchange (like NASDAQ or Binance) | Jane StreetGolang ImplementationGo Implementation |
| Add a system design question | Contribute |
Real world architectures
Articles on how real world systems are designed.
Source: Twitter timelines at scale
Don't focus on nitty gritty details for the following articles, instead:
Identify shared principles, common technologies, and patterns within these articles
Study what problems are solved by each component, where it works, where it doesn't
Review the lessons learned
|Type | System | Reference(s) |
|---|---|---|
| Data processing | MapReduce - Distributed data processing from Google | research.google.com |
| Data processing | Spark - Distributed data processing from Databricks | slideshare.net |
| Data processing | Storm - Distributed data processing from Twitter | slideshare.net |
| | | |
| Data store | Bigtable - Distributed column-oriented database from Google | harvard.edu |
| Data store | HBase - Open source implementation of Bigtable | slideshare.net |
| Data store | Cassandra - Distributed column-oriented database from Facebook | slideshare.net
| Data store | DynamoDB - Document-oriented database from Amazon | harvard.edu |
| Data store | MongoDB - Document-oriented database | slideshare.net |
| Data store | Spanner - Globally-distributed database from Google | research.google.com |
| Data store | Memcached - Distributed memory caching system | slideshare.net |
| Data store | Redis - Distributed memory caching system with persistence and value types | slideshare.net |
| | | |
| File system | Google File System (GFS) - Distributed file system | research.google.com |
| File system | Hadoop File System (HDFS) - Open source implementation of GFS | apache.org |
| | | |
| Misc | Chubby - Lock service for loosely-coupled distributed systems from Google | research.google.com |
| Misc | Dapper - Distributed systems tracing infrastructure | research.google.com
| Misc | Kafka - Pub/sub message queue from LinkedIn | slideshare.net |
| Misc | Zookeeper - Centralized infrastructure and services enabling synchronization | slideshare.net |
| | Add an architecture | Contribute |
Company architectures
| Company | Reference(s) |
|---|---|
| Amazon | Amazon architecture |
| Cinchcast | Producing 1,500 hours of audio every day |
| DataSift | Realtime datamining At 120,000 tweets per second |
| Dropbox | How we've scaled Dropbox |
| ESPN | Operating At 100,000 duh nuh nuhs per second |
| Google | Google architecture |
| Instagram | 14 million users, terabytes of photosWhat powers Instagram |
| Justin.tv | Justin.Tv's live video broadcasting architecture |
| Facebook | Scaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageHow Facebook Live Streams To 800,000 Simultaneous Viewers |
| Flickr | Flickr architecture |
| Mailbox | From 0 to one million users in 6 weeks |
| Netflix | A 360 Degree View Of The Entire Netflix StackNetflix: What Happens When You Press Play? |
| Pinterest | From 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employees |
| Playfish | 50 million monthly users and growing |
| PlentyOfFish | PlentyOfFish architecture |
| Salesforce | How they handle 1.3 billion transactions a day |
| Stack Overflow | Stack Overflow architecture |
| TripAdvisor | 40M visitors, 200M dynamic page views, 30TB data |
| Tumblr | 15 billion page views a month |
| Twitter | Making Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersHow Twitter Handles 3,000 Images Per Second |
| Uber | How Uber scales their real-time market platformLessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories |
| WhatsApp | The WhatsApp architecture Facebook bought for $19 billion |
| YouTube | YouTube scalabilityYouTube architecture |
Company engineering blogs
Architectures for companies you are interviewing with.
Questions you encounter might be from the same domain.
Airbnb Engineering
Atlassian Developers
AWS Blog
Bitly Engineering Blog
Box Blogs
Cloudera Developer Blog
Dropbox Tech Blog
Engineering at Quora
Ebay Tech Blog
Evernote Tech Blog
Etsy Code as Craft
Facebook Engineering
Flickr Code
Foursquare Engineering Blog
GitHub Engineering Blog
Google Research Blog
Groupon Engineering Blog
Heroku Engineering Blog
Hubspot Engineering Blog
High Scalability
Instagram Engineering
Intel Software Blog
Jane Street Tech Blog
LinkedIn Engineering
Microsoft Engineering
Microsoft Python Engineering
Netflix Tech Blog
Paypal Developer Blog
Pinterest Engineering Blog
Reddit Blog
Salesforce Engineering Blog
Slack Engineering Blog
Spotify Labs
Stripe Engineering Blog
Twilio Engineering Blog
Twitter Engineering
Uber Engineering Blog
Yahoo Engineering Blog
Yelp Engineering Blog
Zynga Engineering Blog
Source(s) and further reading
Looking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:
kilimchoi/engineering-blogs
Under development
Interested in adding a section or helping complete one in-progress?  Contribute!
Distributed computing with MapReduce
Consistent hashing
Scatter gather
Contribute
Credits
Credits and sources are provided throughout this repo.
Special thanks to:
Hired in tech
Cracking the coding interview
High scalability
checkcheckzz/system-design-interview
shashank88/system_design
mmcgrana/services-engineering
System design cheat sheet
A distributed systems reading list
Cracking the system design interview
Contact info
Feel free to contact me to discuss any issues, questions, or comments.
My contact info can be found on my GitHub page.
License
I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).
Copyright 2017 Donne Martin
Creative Commons Attribution 4.0 International License (CC BY 4.0)
http://creativecommons.org/licenses/by/4.0/"
996.ICU,996icu,[],2019-03-26 07:31:14+00:00,https://github.com/996icu/996.ICU,2024-10-03 12:29:11+00:00,,270071,Repo for counting stars and contributing. Press F to pay respect to glorious developers.,"996.ICU
Please note that there exists NO other official account, app or merchandise except for the official domain and this repository.
中文版
The name 996.ICU refers to ""Work by '996', sick in ICU"", an ironic saying among Chinese developers, which means that by following the ""996"" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).
Related press coverage:
RadiiChina: GitHub Protest Over Chinese Tech Companies’ “996” Culture Goes Viral
Financial Times: China tech worker protest against long working hours goes viral
Wired: How GitHub is helping overworked Chinese programmers
See a full list of press
What is 996?
A ""996"" work schedule refers to an unofficial work schedule (9 a.m.–9 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the ""996"" work schedule usually means working for at least 60 hours per week.
Visit 996 working hour system on Wikipedia for more details.
What can I do?
Update this list with evidence to help every worker.  Third party perfect list channel
Add this badge to your project to support 996.ICU.  
License your awesome projects with the Anti 996 License.  
Add proposals to give advice about the development of 996.ICU.
Go home at 6 pm without feeling sorry.
Voices
State Media
The 996 shall disappear
Capitalists
Jack Ma, founder of Alibaba: It is a huge blessing to be able to '996'.
Richard Liu, founder of JD.com: We will never force our employee to work as '996'.
(However, as a result many anonymous employees claim that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when asking employees to work as '996'.)
Bai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years.
Developers
Guido van Rossum, founder of Python: The '996' working schedule is inhumane.
Principles and purposes
996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.
This is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.
It is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.
We are willing to hear all positive and constructive proposals and advocate mature and responsible speech.
Expanding influence
Please feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.
Community powers
955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.
996.LIST is a repo of a rank list of 996 companies and 955 companies.
996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.
996.Leave encourages & introduces working overseas.
996.RIP Old news never vanished.
996.Petition initiates petitions by sending open letters to relevant government departments.
996.avengers adds 996ICU and 955WLB tags on recruitment websites.
996.OD occupational diseases are the forewarning of ICU.
996.Q A repository to collect mocks, jokes, or gags about 996. 
996.survey A survey of the status of 996.
support.996.ICU Microsoft and GitHub Workers Support 996.ICU
996.Blockchain Blockchain for the 996 evidence
996.Error Collect ""996"" exceptions written in various languages and can be used directly in the project.
Where are the issues?
Even with interaction limits on, the issues area was totally out of control.
So I personally decided to switch it off, not by GitHub or others.
License
Anti-996 License
The purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working
See a full list of projects under Anti-996 License
This draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.  
For law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.
Donate
We accept following crypto currencies:
ETH: 0x57a7e421c8edfc7f13612f68a54365fc729f2355
USDT(ERC20): 0x57a7e421c8edfc7f13612f68a54365fc729f2355
BTC: 1CKB19MxFppcXC3GMG84URuuegifsy8GAr
Donations will be used to sustain/maintain the website.
Contact
You can reach me by E-mail if you need."
react,facebook,"['javascript', 'react', 'frontend', 'declarative', 'ui', 'library']",2013-05-24 16:15:54+00:00,https://github.com/facebook/react,2025-01-12 18:16:54+00:00,JavaScript,231294,The library for web and native user interfaces.,"React ·     
React is a JavaScript library for building user interfaces.
Declarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.
Component-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.
Learn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.
Learn how to use React in your project.
Installation
React has been designed for gradual adoption from the start, and you can use as little or as much React as you need:
Use Quick Start to get a taste of React.
Add React to an Existing Project to use as little or as much React as you need.
Create a New React App if you're looking for a powerful JavaScript toolchain.
Documentation
You can find the React documentation on the website.
Check out the Getting Started page for a quick overview.
The documentation is divided into several sections:
Quick Start
Tutorial
Thinking in React
Installation
Describing the UI
Adding Interactivity
Managing State
Advanced Guides
API Reference
Where to Get Support
Contributing Guide
You can improve it by sending pull requests to this repository.
Examples
We have several examples on the website. Here is the first one to get you started:
```jsx
import { createRoot } from 'react-dom/client';
function HelloMessage({ name }) {
  return Hello {name};
}
const root = createRoot(document.getElementById('container'));
root.render();
```
This example will render ""Hello Taylor"" into a container on the page.
You'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.
Contributing
The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.
Code of Conduct
Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.
Contributing Guide
Read our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.
Good First Issues
To help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs that have a relatively limited scope. This is a great place to get started.
License
React is MIT licensed."
